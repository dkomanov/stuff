/**
 * Autogenerated by Thrift Compiler (0.16.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package com.komanov.serialization.domain.thrift;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.16.0)", date = "2022-08-14")
public class SiteEventPb implements org.apache.thrift.TBase<SiteEventPb, SiteEventPb._Fields>, java.io.Serializable, Cloneable, Comparable<SiteEventPb> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("SiteEventPb");

  private static final org.apache.thrift.protocol.TField SITE_CREATED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteCreatedPb", org.apache.thrift.protocol.TType.STRUCT, (short)1);
  private static final org.apache.thrift.protocol.TField SITE_NAME_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteNameSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)2);
  private static final org.apache.thrift.protocol.TField SITE_DESCRIPTION_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteDescriptionSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)3);
  private static final org.apache.thrift.protocol.TField SITE_REVISION_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteRevisionSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)4);
  private static final org.apache.thrift.protocol.TField SITE_PUBLISHED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SitePublishedPb", org.apache.thrift.protocol.TType.STRUCT, (short)5);
  private static final org.apache.thrift.protocol.TField SITE_UNPUBLISHED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteUnpublishedPb", org.apache.thrift.protocol.TType.STRUCT, (short)6);
  private static final org.apache.thrift.protocol.TField SITE_FLAG_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteFlagAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)7);
  private static final org.apache.thrift.protocol.TField SITE_FLAG_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("SiteFlagRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)8);
  private static final org.apache.thrift.protocol.TField DOMAIN_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("DomainAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)9);
  private static final org.apache.thrift.protocol.TField DOMAIN_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("DomainRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)10);
  private static final org.apache.thrift.protocol.TField PRIMARY_DOMAIN_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PrimaryDomainSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)11);
  private static final org.apache.thrift.protocol.TField DEFAULT_META_TAG_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("DefaultMetaTagAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)12);
  private static final org.apache.thrift.protocol.TField DEFAULT_META_TAG_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("DefaultMetaTagRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)13);
  private static final org.apache.thrift.protocol.TField PAGE_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)14);
  private static final org.apache.thrift.protocol.TField PAGE_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)15);
  private static final org.apache.thrift.protocol.TField PAGE_NAME_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageNameSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)16);
  private static final org.apache.thrift.protocol.TField PAGE_META_TAG_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageMetaTagAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)17);
  private static final org.apache.thrift.protocol.TField PAGE_META_TAG_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageMetaTagRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)18);
  private static final org.apache.thrift.protocol.TField PAGE_COMPONENT_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageComponentAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)19);
  private static final org.apache.thrift.protocol.TField PAGE_COMPONENT_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageComponentRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)20);
  private static final org.apache.thrift.protocol.TField PAGE_COMPONENT_POSITION_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageComponentPositionSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)21);
  private static final org.apache.thrift.protocol.TField PAGE_COMPONENT_POSITION_RESET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PageComponentPositionResetPb", org.apache.thrift.protocol.TType.STRUCT, (short)22);
  private static final org.apache.thrift.protocol.TField TEXT_COMPONENT_DATA_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("TextComponentDataSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)23);
  private static final org.apache.thrift.protocol.TField BUTTON_COMPONENT_DATA_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("ButtonComponentDataSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)24);
  private static final org.apache.thrift.protocol.TField BLOG_COMPONENT_DATA_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("BlogComponentDataSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)25);
  private static final org.apache.thrift.protocol.TField DOMAIN_ENTRY_POINT_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("DomainEntryPointAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)26);
  private static final org.apache.thrift.protocol.TField FREE_ENTRY_POINT_ADDED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("FreeEntryPointAddedPb", org.apache.thrift.protocol.TType.STRUCT, (short)27);
  private static final org.apache.thrift.protocol.TField ENTRY_POINT_REMOVED_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("EntryPointRemovedPb", org.apache.thrift.protocol.TType.STRUCT, (short)28);
  private static final org.apache.thrift.protocol.TField PRIMARY_ENTRY_POINT_SET_PB_FIELD_DESC = new org.apache.thrift.protocol.TField("PrimaryEntryPointSetPb", org.apache.thrift.protocol.TType.STRUCT, (short)29);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new SiteEventPbStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new SiteEventPbTupleSchemeFactory();

  public @org.apache.thrift.annotation.Nullable SiteCreatedPb SiteCreatedPb; // optional
  public @org.apache.thrift.annotation.Nullable SiteNameSetPb SiteNameSetPb; // optional
  public @org.apache.thrift.annotation.Nullable SiteDescriptionSetPb SiteDescriptionSetPb; // optional
  public @org.apache.thrift.annotation.Nullable SiteRevisionSetPb SiteRevisionSetPb; // optional
  public @org.apache.thrift.annotation.Nullable SitePublishedPb SitePublishedPb; // optional
  public @org.apache.thrift.annotation.Nullable SiteUnpublishedPb SiteUnpublishedPb; // optional
  public @org.apache.thrift.annotation.Nullable SiteFlagAddedPb SiteFlagAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable SiteFlagRemovedPb SiteFlagRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable DomainAddedPb DomainAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable DomainRemovedPb DomainRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable PrimaryDomainSetPb PrimaryDomainSetPb; // optional
  public @org.apache.thrift.annotation.Nullable DefaultMetaTagAddedPb DefaultMetaTagAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable DefaultMetaTagRemovedPb DefaultMetaTagRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageAddedPb PageAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageRemovedPb PageRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageNameSetPb PageNameSetPb; // optional
  public @org.apache.thrift.annotation.Nullable PageMetaTagAddedPb PageMetaTagAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageMetaTagRemovedPb PageMetaTagRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageComponentAddedPb PageComponentAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageComponentRemovedPb PageComponentRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable PageComponentPositionSetPb PageComponentPositionSetPb; // optional
  public @org.apache.thrift.annotation.Nullable PageComponentPositionResetPb PageComponentPositionResetPb; // optional
  public @org.apache.thrift.annotation.Nullable TextComponentDataSetPb TextComponentDataSetPb; // optional
  public @org.apache.thrift.annotation.Nullable ButtonComponentDataSetPb ButtonComponentDataSetPb; // optional
  public @org.apache.thrift.annotation.Nullable BlogComponentDataSetPb BlogComponentDataSetPb; // optional
  public @org.apache.thrift.annotation.Nullable DomainEntryPointAddedPb DomainEntryPointAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable FreeEntryPointAddedPb FreeEntryPointAddedPb; // optional
  public @org.apache.thrift.annotation.Nullable EntryPointRemovedPb EntryPointRemovedPb; // optional
  public @org.apache.thrift.annotation.Nullable PrimaryEntryPointSetPb PrimaryEntryPointSetPb; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    SITE_CREATED_PB((short)1, "SiteCreatedPb"),
    SITE_NAME_SET_PB((short)2, "SiteNameSetPb"),
    SITE_DESCRIPTION_SET_PB((short)3, "SiteDescriptionSetPb"),
    SITE_REVISION_SET_PB((short)4, "SiteRevisionSetPb"),
    SITE_PUBLISHED_PB((short)5, "SitePublishedPb"),
    SITE_UNPUBLISHED_PB((short)6, "SiteUnpublishedPb"),
    SITE_FLAG_ADDED_PB((short)7, "SiteFlagAddedPb"),
    SITE_FLAG_REMOVED_PB((short)8, "SiteFlagRemovedPb"),
    DOMAIN_ADDED_PB((short)9, "DomainAddedPb"),
    DOMAIN_REMOVED_PB((short)10, "DomainRemovedPb"),
    PRIMARY_DOMAIN_SET_PB((short)11, "PrimaryDomainSetPb"),
    DEFAULT_META_TAG_ADDED_PB((short)12, "DefaultMetaTagAddedPb"),
    DEFAULT_META_TAG_REMOVED_PB((short)13, "DefaultMetaTagRemovedPb"),
    PAGE_ADDED_PB((short)14, "PageAddedPb"),
    PAGE_REMOVED_PB((short)15, "PageRemovedPb"),
    PAGE_NAME_SET_PB((short)16, "PageNameSetPb"),
    PAGE_META_TAG_ADDED_PB((short)17, "PageMetaTagAddedPb"),
    PAGE_META_TAG_REMOVED_PB((short)18, "PageMetaTagRemovedPb"),
    PAGE_COMPONENT_ADDED_PB((short)19, "PageComponentAddedPb"),
    PAGE_COMPONENT_REMOVED_PB((short)20, "PageComponentRemovedPb"),
    PAGE_COMPONENT_POSITION_SET_PB((short)21, "PageComponentPositionSetPb"),
    PAGE_COMPONENT_POSITION_RESET_PB((short)22, "PageComponentPositionResetPb"),
    TEXT_COMPONENT_DATA_SET_PB((short)23, "TextComponentDataSetPb"),
    BUTTON_COMPONENT_DATA_SET_PB((short)24, "ButtonComponentDataSetPb"),
    BLOG_COMPONENT_DATA_SET_PB((short)25, "BlogComponentDataSetPb"),
    DOMAIN_ENTRY_POINT_ADDED_PB((short)26, "DomainEntryPointAddedPb"),
    FREE_ENTRY_POINT_ADDED_PB((short)27, "FreeEntryPointAddedPb"),
    ENTRY_POINT_REMOVED_PB((short)28, "EntryPointRemovedPb"),
    PRIMARY_ENTRY_POINT_SET_PB((short)29, "PrimaryEntryPointSetPb");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // SITE_CREATED_PB
          return SITE_CREATED_PB;
        case 2: // SITE_NAME_SET_PB
          return SITE_NAME_SET_PB;
        case 3: // SITE_DESCRIPTION_SET_PB
          return SITE_DESCRIPTION_SET_PB;
        case 4: // SITE_REVISION_SET_PB
          return SITE_REVISION_SET_PB;
        case 5: // SITE_PUBLISHED_PB
          return SITE_PUBLISHED_PB;
        case 6: // SITE_UNPUBLISHED_PB
          return SITE_UNPUBLISHED_PB;
        case 7: // SITE_FLAG_ADDED_PB
          return SITE_FLAG_ADDED_PB;
        case 8: // SITE_FLAG_REMOVED_PB
          return SITE_FLAG_REMOVED_PB;
        case 9: // DOMAIN_ADDED_PB
          return DOMAIN_ADDED_PB;
        case 10: // DOMAIN_REMOVED_PB
          return DOMAIN_REMOVED_PB;
        case 11: // PRIMARY_DOMAIN_SET_PB
          return PRIMARY_DOMAIN_SET_PB;
        case 12: // DEFAULT_META_TAG_ADDED_PB
          return DEFAULT_META_TAG_ADDED_PB;
        case 13: // DEFAULT_META_TAG_REMOVED_PB
          return DEFAULT_META_TAG_REMOVED_PB;
        case 14: // PAGE_ADDED_PB
          return PAGE_ADDED_PB;
        case 15: // PAGE_REMOVED_PB
          return PAGE_REMOVED_PB;
        case 16: // PAGE_NAME_SET_PB
          return PAGE_NAME_SET_PB;
        case 17: // PAGE_META_TAG_ADDED_PB
          return PAGE_META_TAG_ADDED_PB;
        case 18: // PAGE_META_TAG_REMOVED_PB
          return PAGE_META_TAG_REMOVED_PB;
        case 19: // PAGE_COMPONENT_ADDED_PB
          return PAGE_COMPONENT_ADDED_PB;
        case 20: // PAGE_COMPONENT_REMOVED_PB
          return PAGE_COMPONENT_REMOVED_PB;
        case 21: // PAGE_COMPONENT_POSITION_SET_PB
          return PAGE_COMPONENT_POSITION_SET_PB;
        case 22: // PAGE_COMPONENT_POSITION_RESET_PB
          return PAGE_COMPONENT_POSITION_RESET_PB;
        case 23: // TEXT_COMPONENT_DATA_SET_PB
          return TEXT_COMPONENT_DATA_SET_PB;
        case 24: // BUTTON_COMPONENT_DATA_SET_PB
          return BUTTON_COMPONENT_DATA_SET_PB;
        case 25: // BLOG_COMPONENT_DATA_SET_PB
          return BLOG_COMPONENT_DATA_SET_PB;
        case 26: // DOMAIN_ENTRY_POINT_ADDED_PB
          return DOMAIN_ENTRY_POINT_ADDED_PB;
        case 27: // FREE_ENTRY_POINT_ADDED_PB
          return FREE_ENTRY_POINT_ADDED_PB;
        case 28: // ENTRY_POINT_REMOVED_PB
          return ENTRY_POINT_REMOVED_PB;
        case 29: // PRIMARY_ENTRY_POINT_SET_PB
          return PRIMARY_ENTRY_POINT_SET_PB;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    @org.apache.thrift.annotation.Nullable
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.SITE_CREATED_PB,_Fields.SITE_NAME_SET_PB,_Fields.SITE_DESCRIPTION_SET_PB,_Fields.SITE_REVISION_SET_PB,_Fields.SITE_PUBLISHED_PB,_Fields.SITE_UNPUBLISHED_PB,_Fields.SITE_FLAG_ADDED_PB,_Fields.SITE_FLAG_REMOVED_PB,_Fields.DOMAIN_ADDED_PB,_Fields.DOMAIN_REMOVED_PB,_Fields.PRIMARY_DOMAIN_SET_PB,_Fields.DEFAULT_META_TAG_ADDED_PB,_Fields.DEFAULT_META_TAG_REMOVED_PB,_Fields.PAGE_ADDED_PB,_Fields.PAGE_REMOVED_PB,_Fields.PAGE_NAME_SET_PB,_Fields.PAGE_META_TAG_ADDED_PB,_Fields.PAGE_META_TAG_REMOVED_PB,_Fields.PAGE_COMPONENT_ADDED_PB,_Fields.PAGE_COMPONENT_REMOVED_PB,_Fields.PAGE_COMPONENT_POSITION_SET_PB,_Fields.PAGE_COMPONENT_POSITION_RESET_PB,_Fields.TEXT_COMPONENT_DATA_SET_PB,_Fields.BUTTON_COMPONENT_DATA_SET_PB,_Fields.BLOG_COMPONENT_DATA_SET_PB,_Fields.DOMAIN_ENTRY_POINT_ADDED_PB,_Fields.FREE_ENTRY_POINT_ADDED_PB,_Fields.ENTRY_POINT_REMOVED_PB,_Fields.PRIMARY_ENTRY_POINT_SET_PB};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.SITE_CREATED_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteCreatedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteCreatedPb.class)));
    tmpMap.put(_Fields.SITE_NAME_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteNameSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteNameSetPb.class)));
    tmpMap.put(_Fields.SITE_DESCRIPTION_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteDescriptionSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteDescriptionSetPb.class)));
    tmpMap.put(_Fields.SITE_REVISION_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteRevisionSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteRevisionSetPb.class)));
    tmpMap.put(_Fields.SITE_PUBLISHED_PB, new org.apache.thrift.meta_data.FieldMetaData("SitePublishedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SitePublishedPb.class)));
    tmpMap.put(_Fields.SITE_UNPUBLISHED_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteUnpublishedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteUnpublishedPb.class)));
    tmpMap.put(_Fields.SITE_FLAG_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteFlagAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteFlagAddedPb.class)));
    tmpMap.put(_Fields.SITE_FLAG_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("SiteFlagRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, SiteFlagRemovedPb.class)));
    tmpMap.put(_Fields.DOMAIN_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("DomainAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DomainAddedPb.class)));
    tmpMap.put(_Fields.DOMAIN_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("DomainRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DomainRemovedPb.class)));
    tmpMap.put(_Fields.PRIMARY_DOMAIN_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("PrimaryDomainSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PrimaryDomainSetPb.class)));
    tmpMap.put(_Fields.DEFAULT_META_TAG_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("DefaultMetaTagAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DefaultMetaTagAddedPb.class)));
    tmpMap.put(_Fields.DEFAULT_META_TAG_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("DefaultMetaTagRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DefaultMetaTagRemovedPb.class)));
    tmpMap.put(_Fields.PAGE_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("PageAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageAddedPb.class)));
    tmpMap.put(_Fields.PAGE_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("PageRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageRemovedPb.class)));
    tmpMap.put(_Fields.PAGE_NAME_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("PageNameSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageNameSetPb.class)));
    tmpMap.put(_Fields.PAGE_META_TAG_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("PageMetaTagAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageMetaTagAddedPb.class)));
    tmpMap.put(_Fields.PAGE_META_TAG_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("PageMetaTagRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageMetaTagRemovedPb.class)));
    tmpMap.put(_Fields.PAGE_COMPONENT_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("PageComponentAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageComponentAddedPb.class)));
    tmpMap.put(_Fields.PAGE_COMPONENT_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("PageComponentRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageComponentRemovedPb.class)));
    tmpMap.put(_Fields.PAGE_COMPONENT_POSITION_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("PageComponentPositionSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageComponentPositionSetPb.class)));
    tmpMap.put(_Fields.PAGE_COMPONENT_POSITION_RESET_PB, new org.apache.thrift.meta_data.FieldMetaData("PageComponentPositionResetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PageComponentPositionResetPb.class)));
    tmpMap.put(_Fields.TEXT_COMPONENT_DATA_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("TextComponentDataSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, TextComponentDataSetPb.class)));
    tmpMap.put(_Fields.BUTTON_COMPONENT_DATA_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("ButtonComponentDataSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, ButtonComponentDataSetPb.class)));
    tmpMap.put(_Fields.BLOG_COMPONENT_DATA_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("BlogComponentDataSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, BlogComponentDataSetPb.class)));
    tmpMap.put(_Fields.DOMAIN_ENTRY_POINT_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("DomainEntryPointAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, DomainEntryPointAddedPb.class)));
    tmpMap.put(_Fields.FREE_ENTRY_POINT_ADDED_PB, new org.apache.thrift.meta_data.FieldMetaData("FreeEntryPointAddedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, FreeEntryPointAddedPb.class)));
    tmpMap.put(_Fields.ENTRY_POINT_REMOVED_PB, new org.apache.thrift.meta_data.FieldMetaData("EntryPointRemovedPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, EntryPointRemovedPb.class)));
    tmpMap.put(_Fields.PRIMARY_ENTRY_POINT_SET_PB, new org.apache.thrift.meta_data.FieldMetaData("PrimaryEntryPointSetPb", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.StructMetaData(org.apache.thrift.protocol.TType.STRUCT, PrimaryEntryPointSetPb.class)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(SiteEventPb.class, metaDataMap);
  }

  public SiteEventPb() {
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public SiteEventPb(SiteEventPb other) {
    if (other.isSetSiteCreatedPb()) {
      this.SiteCreatedPb = new SiteCreatedPb(other.SiteCreatedPb);
    }
    if (other.isSetSiteNameSetPb()) {
      this.SiteNameSetPb = new SiteNameSetPb(other.SiteNameSetPb);
    }
    if (other.isSetSiteDescriptionSetPb()) {
      this.SiteDescriptionSetPb = new SiteDescriptionSetPb(other.SiteDescriptionSetPb);
    }
    if (other.isSetSiteRevisionSetPb()) {
      this.SiteRevisionSetPb = new SiteRevisionSetPb(other.SiteRevisionSetPb);
    }
    if (other.isSetSitePublishedPb()) {
      this.SitePublishedPb = new SitePublishedPb(other.SitePublishedPb);
    }
    if (other.isSetSiteUnpublishedPb()) {
      this.SiteUnpublishedPb = new SiteUnpublishedPb(other.SiteUnpublishedPb);
    }
    if (other.isSetSiteFlagAddedPb()) {
      this.SiteFlagAddedPb = new SiteFlagAddedPb(other.SiteFlagAddedPb);
    }
    if (other.isSetSiteFlagRemovedPb()) {
      this.SiteFlagRemovedPb = new SiteFlagRemovedPb(other.SiteFlagRemovedPb);
    }
    if (other.isSetDomainAddedPb()) {
      this.DomainAddedPb = new DomainAddedPb(other.DomainAddedPb);
    }
    if (other.isSetDomainRemovedPb()) {
      this.DomainRemovedPb = new DomainRemovedPb(other.DomainRemovedPb);
    }
    if (other.isSetPrimaryDomainSetPb()) {
      this.PrimaryDomainSetPb = new PrimaryDomainSetPb(other.PrimaryDomainSetPb);
    }
    if (other.isSetDefaultMetaTagAddedPb()) {
      this.DefaultMetaTagAddedPb = new DefaultMetaTagAddedPb(other.DefaultMetaTagAddedPb);
    }
    if (other.isSetDefaultMetaTagRemovedPb()) {
      this.DefaultMetaTagRemovedPb = new DefaultMetaTagRemovedPb(other.DefaultMetaTagRemovedPb);
    }
    if (other.isSetPageAddedPb()) {
      this.PageAddedPb = new PageAddedPb(other.PageAddedPb);
    }
    if (other.isSetPageRemovedPb()) {
      this.PageRemovedPb = new PageRemovedPb(other.PageRemovedPb);
    }
    if (other.isSetPageNameSetPb()) {
      this.PageNameSetPb = new PageNameSetPb(other.PageNameSetPb);
    }
    if (other.isSetPageMetaTagAddedPb()) {
      this.PageMetaTagAddedPb = new PageMetaTagAddedPb(other.PageMetaTagAddedPb);
    }
    if (other.isSetPageMetaTagRemovedPb()) {
      this.PageMetaTagRemovedPb = new PageMetaTagRemovedPb(other.PageMetaTagRemovedPb);
    }
    if (other.isSetPageComponentAddedPb()) {
      this.PageComponentAddedPb = new PageComponentAddedPb(other.PageComponentAddedPb);
    }
    if (other.isSetPageComponentRemovedPb()) {
      this.PageComponentRemovedPb = new PageComponentRemovedPb(other.PageComponentRemovedPb);
    }
    if (other.isSetPageComponentPositionSetPb()) {
      this.PageComponentPositionSetPb = new PageComponentPositionSetPb(other.PageComponentPositionSetPb);
    }
    if (other.isSetPageComponentPositionResetPb()) {
      this.PageComponentPositionResetPb = new PageComponentPositionResetPb(other.PageComponentPositionResetPb);
    }
    if (other.isSetTextComponentDataSetPb()) {
      this.TextComponentDataSetPb = new TextComponentDataSetPb(other.TextComponentDataSetPb);
    }
    if (other.isSetButtonComponentDataSetPb()) {
      this.ButtonComponentDataSetPb = new ButtonComponentDataSetPb(other.ButtonComponentDataSetPb);
    }
    if (other.isSetBlogComponentDataSetPb()) {
      this.BlogComponentDataSetPb = new BlogComponentDataSetPb(other.BlogComponentDataSetPb);
    }
    if (other.isSetDomainEntryPointAddedPb()) {
      this.DomainEntryPointAddedPb = new DomainEntryPointAddedPb(other.DomainEntryPointAddedPb);
    }
    if (other.isSetFreeEntryPointAddedPb()) {
      this.FreeEntryPointAddedPb = new FreeEntryPointAddedPb(other.FreeEntryPointAddedPb);
    }
    if (other.isSetEntryPointRemovedPb()) {
      this.EntryPointRemovedPb = new EntryPointRemovedPb(other.EntryPointRemovedPb);
    }
    if (other.isSetPrimaryEntryPointSetPb()) {
      this.PrimaryEntryPointSetPb = new PrimaryEntryPointSetPb(other.PrimaryEntryPointSetPb);
    }
  }

  public SiteEventPb deepCopy() {
    return new SiteEventPb(this);
  }

  @Override
  public void clear() {
    this.SiteCreatedPb = null;
    this.SiteNameSetPb = null;
    this.SiteDescriptionSetPb = null;
    this.SiteRevisionSetPb = null;
    this.SitePublishedPb = null;
    this.SiteUnpublishedPb = null;
    this.SiteFlagAddedPb = null;
    this.SiteFlagRemovedPb = null;
    this.DomainAddedPb = null;
    this.DomainRemovedPb = null;
    this.PrimaryDomainSetPb = null;
    this.DefaultMetaTagAddedPb = null;
    this.DefaultMetaTagRemovedPb = null;
    this.PageAddedPb = null;
    this.PageRemovedPb = null;
    this.PageNameSetPb = null;
    this.PageMetaTagAddedPb = null;
    this.PageMetaTagRemovedPb = null;
    this.PageComponentAddedPb = null;
    this.PageComponentRemovedPb = null;
    this.PageComponentPositionSetPb = null;
    this.PageComponentPositionResetPb = null;
    this.TextComponentDataSetPb = null;
    this.ButtonComponentDataSetPb = null;
    this.BlogComponentDataSetPb = null;
    this.DomainEntryPointAddedPb = null;
    this.FreeEntryPointAddedPb = null;
    this.EntryPointRemovedPb = null;
    this.PrimaryEntryPointSetPb = null;
  }

  @org.apache.thrift.annotation.Nullable
  public SiteCreatedPb getSiteCreatedPb() {
    return this.SiteCreatedPb;
  }

  public SiteEventPb setSiteCreatedPb(@org.apache.thrift.annotation.Nullable SiteCreatedPb SiteCreatedPb) {
    this.SiteCreatedPb = SiteCreatedPb;
    return this;
  }

  public void unsetSiteCreatedPb() {
    this.SiteCreatedPb = null;
  }

  /** Returns true if field SiteCreatedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteCreatedPb() {
    return this.SiteCreatedPb != null;
  }

  public void setSiteCreatedPbIsSet(boolean value) {
    if (!value) {
      this.SiteCreatedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SiteNameSetPb getSiteNameSetPb() {
    return this.SiteNameSetPb;
  }

  public SiteEventPb setSiteNameSetPb(@org.apache.thrift.annotation.Nullable SiteNameSetPb SiteNameSetPb) {
    this.SiteNameSetPb = SiteNameSetPb;
    return this;
  }

  public void unsetSiteNameSetPb() {
    this.SiteNameSetPb = null;
  }

  /** Returns true if field SiteNameSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteNameSetPb() {
    return this.SiteNameSetPb != null;
  }

  public void setSiteNameSetPbIsSet(boolean value) {
    if (!value) {
      this.SiteNameSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SiteDescriptionSetPb getSiteDescriptionSetPb() {
    return this.SiteDescriptionSetPb;
  }

  public SiteEventPb setSiteDescriptionSetPb(@org.apache.thrift.annotation.Nullable SiteDescriptionSetPb SiteDescriptionSetPb) {
    this.SiteDescriptionSetPb = SiteDescriptionSetPb;
    return this;
  }

  public void unsetSiteDescriptionSetPb() {
    this.SiteDescriptionSetPb = null;
  }

  /** Returns true if field SiteDescriptionSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteDescriptionSetPb() {
    return this.SiteDescriptionSetPb != null;
  }

  public void setSiteDescriptionSetPbIsSet(boolean value) {
    if (!value) {
      this.SiteDescriptionSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SiteRevisionSetPb getSiteRevisionSetPb() {
    return this.SiteRevisionSetPb;
  }

  public SiteEventPb setSiteRevisionSetPb(@org.apache.thrift.annotation.Nullable SiteRevisionSetPb SiteRevisionSetPb) {
    this.SiteRevisionSetPb = SiteRevisionSetPb;
    return this;
  }

  public void unsetSiteRevisionSetPb() {
    this.SiteRevisionSetPb = null;
  }

  /** Returns true if field SiteRevisionSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteRevisionSetPb() {
    return this.SiteRevisionSetPb != null;
  }

  public void setSiteRevisionSetPbIsSet(boolean value) {
    if (!value) {
      this.SiteRevisionSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SitePublishedPb getSitePublishedPb() {
    return this.SitePublishedPb;
  }

  public SiteEventPb setSitePublishedPb(@org.apache.thrift.annotation.Nullable SitePublishedPb SitePublishedPb) {
    this.SitePublishedPb = SitePublishedPb;
    return this;
  }

  public void unsetSitePublishedPb() {
    this.SitePublishedPb = null;
  }

  /** Returns true if field SitePublishedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSitePublishedPb() {
    return this.SitePublishedPb != null;
  }

  public void setSitePublishedPbIsSet(boolean value) {
    if (!value) {
      this.SitePublishedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SiteUnpublishedPb getSiteUnpublishedPb() {
    return this.SiteUnpublishedPb;
  }

  public SiteEventPb setSiteUnpublishedPb(@org.apache.thrift.annotation.Nullable SiteUnpublishedPb SiteUnpublishedPb) {
    this.SiteUnpublishedPb = SiteUnpublishedPb;
    return this;
  }

  public void unsetSiteUnpublishedPb() {
    this.SiteUnpublishedPb = null;
  }

  /** Returns true if field SiteUnpublishedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteUnpublishedPb() {
    return this.SiteUnpublishedPb != null;
  }

  public void setSiteUnpublishedPbIsSet(boolean value) {
    if (!value) {
      this.SiteUnpublishedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SiteFlagAddedPb getSiteFlagAddedPb() {
    return this.SiteFlagAddedPb;
  }

  public SiteEventPb setSiteFlagAddedPb(@org.apache.thrift.annotation.Nullable SiteFlagAddedPb SiteFlagAddedPb) {
    this.SiteFlagAddedPb = SiteFlagAddedPb;
    return this;
  }

  public void unsetSiteFlagAddedPb() {
    this.SiteFlagAddedPb = null;
  }

  /** Returns true if field SiteFlagAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteFlagAddedPb() {
    return this.SiteFlagAddedPb != null;
  }

  public void setSiteFlagAddedPbIsSet(boolean value) {
    if (!value) {
      this.SiteFlagAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public SiteFlagRemovedPb getSiteFlagRemovedPb() {
    return this.SiteFlagRemovedPb;
  }

  public SiteEventPb setSiteFlagRemovedPb(@org.apache.thrift.annotation.Nullable SiteFlagRemovedPb SiteFlagRemovedPb) {
    this.SiteFlagRemovedPb = SiteFlagRemovedPb;
    return this;
  }

  public void unsetSiteFlagRemovedPb() {
    this.SiteFlagRemovedPb = null;
  }

  /** Returns true if field SiteFlagRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetSiteFlagRemovedPb() {
    return this.SiteFlagRemovedPb != null;
  }

  public void setSiteFlagRemovedPbIsSet(boolean value) {
    if (!value) {
      this.SiteFlagRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DomainAddedPb getDomainAddedPb() {
    return this.DomainAddedPb;
  }

  public SiteEventPb setDomainAddedPb(@org.apache.thrift.annotation.Nullable DomainAddedPb DomainAddedPb) {
    this.DomainAddedPb = DomainAddedPb;
    return this;
  }

  public void unsetDomainAddedPb() {
    this.DomainAddedPb = null;
  }

  /** Returns true if field DomainAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetDomainAddedPb() {
    return this.DomainAddedPb != null;
  }

  public void setDomainAddedPbIsSet(boolean value) {
    if (!value) {
      this.DomainAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DomainRemovedPb getDomainRemovedPb() {
    return this.DomainRemovedPb;
  }

  public SiteEventPb setDomainRemovedPb(@org.apache.thrift.annotation.Nullable DomainRemovedPb DomainRemovedPb) {
    this.DomainRemovedPb = DomainRemovedPb;
    return this;
  }

  public void unsetDomainRemovedPb() {
    this.DomainRemovedPb = null;
  }

  /** Returns true if field DomainRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetDomainRemovedPb() {
    return this.DomainRemovedPb != null;
  }

  public void setDomainRemovedPbIsSet(boolean value) {
    if (!value) {
      this.DomainRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PrimaryDomainSetPb getPrimaryDomainSetPb() {
    return this.PrimaryDomainSetPb;
  }

  public SiteEventPb setPrimaryDomainSetPb(@org.apache.thrift.annotation.Nullable PrimaryDomainSetPb PrimaryDomainSetPb) {
    this.PrimaryDomainSetPb = PrimaryDomainSetPb;
    return this;
  }

  public void unsetPrimaryDomainSetPb() {
    this.PrimaryDomainSetPb = null;
  }

  /** Returns true if field PrimaryDomainSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimaryDomainSetPb() {
    return this.PrimaryDomainSetPb != null;
  }

  public void setPrimaryDomainSetPbIsSet(boolean value) {
    if (!value) {
      this.PrimaryDomainSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DefaultMetaTagAddedPb getDefaultMetaTagAddedPb() {
    return this.DefaultMetaTagAddedPb;
  }

  public SiteEventPb setDefaultMetaTagAddedPb(@org.apache.thrift.annotation.Nullable DefaultMetaTagAddedPb DefaultMetaTagAddedPb) {
    this.DefaultMetaTagAddedPb = DefaultMetaTagAddedPb;
    return this;
  }

  public void unsetDefaultMetaTagAddedPb() {
    this.DefaultMetaTagAddedPb = null;
  }

  /** Returns true if field DefaultMetaTagAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultMetaTagAddedPb() {
    return this.DefaultMetaTagAddedPb != null;
  }

  public void setDefaultMetaTagAddedPbIsSet(boolean value) {
    if (!value) {
      this.DefaultMetaTagAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DefaultMetaTagRemovedPb getDefaultMetaTagRemovedPb() {
    return this.DefaultMetaTagRemovedPb;
  }

  public SiteEventPb setDefaultMetaTagRemovedPb(@org.apache.thrift.annotation.Nullable DefaultMetaTagRemovedPb DefaultMetaTagRemovedPb) {
    this.DefaultMetaTagRemovedPb = DefaultMetaTagRemovedPb;
    return this;
  }

  public void unsetDefaultMetaTagRemovedPb() {
    this.DefaultMetaTagRemovedPb = null;
  }

  /** Returns true if field DefaultMetaTagRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetDefaultMetaTagRemovedPb() {
    return this.DefaultMetaTagRemovedPb != null;
  }

  public void setDefaultMetaTagRemovedPbIsSet(boolean value) {
    if (!value) {
      this.DefaultMetaTagRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageAddedPb getPageAddedPb() {
    return this.PageAddedPb;
  }

  public SiteEventPb setPageAddedPb(@org.apache.thrift.annotation.Nullable PageAddedPb PageAddedPb) {
    this.PageAddedPb = PageAddedPb;
    return this;
  }

  public void unsetPageAddedPb() {
    this.PageAddedPb = null;
  }

  /** Returns true if field PageAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageAddedPb() {
    return this.PageAddedPb != null;
  }

  public void setPageAddedPbIsSet(boolean value) {
    if (!value) {
      this.PageAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageRemovedPb getPageRemovedPb() {
    return this.PageRemovedPb;
  }

  public SiteEventPb setPageRemovedPb(@org.apache.thrift.annotation.Nullable PageRemovedPb PageRemovedPb) {
    this.PageRemovedPb = PageRemovedPb;
    return this;
  }

  public void unsetPageRemovedPb() {
    this.PageRemovedPb = null;
  }

  /** Returns true if field PageRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageRemovedPb() {
    return this.PageRemovedPb != null;
  }

  public void setPageRemovedPbIsSet(boolean value) {
    if (!value) {
      this.PageRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageNameSetPb getPageNameSetPb() {
    return this.PageNameSetPb;
  }

  public SiteEventPb setPageNameSetPb(@org.apache.thrift.annotation.Nullable PageNameSetPb PageNameSetPb) {
    this.PageNameSetPb = PageNameSetPb;
    return this;
  }

  public void unsetPageNameSetPb() {
    this.PageNameSetPb = null;
  }

  /** Returns true if field PageNameSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageNameSetPb() {
    return this.PageNameSetPb != null;
  }

  public void setPageNameSetPbIsSet(boolean value) {
    if (!value) {
      this.PageNameSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageMetaTagAddedPb getPageMetaTagAddedPb() {
    return this.PageMetaTagAddedPb;
  }

  public SiteEventPb setPageMetaTagAddedPb(@org.apache.thrift.annotation.Nullable PageMetaTagAddedPb PageMetaTagAddedPb) {
    this.PageMetaTagAddedPb = PageMetaTagAddedPb;
    return this;
  }

  public void unsetPageMetaTagAddedPb() {
    this.PageMetaTagAddedPb = null;
  }

  /** Returns true if field PageMetaTagAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageMetaTagAddedPb() {
    return this.PageMetaTagAddedPb != null;
  }

  public void setPageMetaTagAddedPbIsSet(boolean value) {
    if (!value) {
      this.PageMetaTagAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageMetaTagRemovedPb getPageMetaTagRemovedPb() {
    return this.PageMetaTagRemovedPb;
  }

  public SiteEventPb setPageMetaTagRemovedPb(@org.apache.thrift.annotation.Nullable PageMetaTagRemovedPb PageMetaTagRemovedPb) {
    this.PageMetaTagRemovedPb = PageMetaTagRemovedPb;
    return this;
  }

  public void unsetPageMetaTagRemovedPb() {
    this.PageMetaTagRemovedPb = null;
  }

  /** Returns true if field PageMetaTagRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageMetaTagRemovedPb() {
    return this.PageMetaTagRemovedPb != null;
  }

  public void setPageMetaTagRemovedPbIsSet(boolean value) {
    if (!value) {
      this.PageMetaTagRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageComponentAddedPb getPageComponentAddedPb() {
    return this.PageComponentAddedPb;
  }

  public SiteEventPb setPageComponentAddedPb(@org.apache.thrift.annotation.Nullable PageComponentAddedPb PageComponentAddedPb) {
    this.PageComponentAddedPb = PageComponentAddedPb;
    return this;
  }

  public void unsetPageComponentAddedPb() {
    this.PageComponentAddedPb = null;
  }

  /** Returns true if field PageComponentAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageComponentAddedPb() {
    return this.PageComponentAddedPb != null;
  }

  public void setPageComponentAddedPbIsSet(boolean value) {
    if (!value) {
      this.PageComponentAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageComponentRemovedPb getPageComponentRemovedPb() {
    return this.PageComponentRemovedPb;
  }

  public SiteEventPb setPageComponentRemovedPb(@org.apache.thrift.annotation.Nullable PageComponentRemovedPb PageComponentRemovedPb) {
    this.PageComponentRemovedPb = PageComponentRemovedPb;
    return this;
  }

  public void unsetPageComponentRemovedPb() {
    this.PageComponentRemovedPb = null;
  }

  /** Returns true if field PageComponentRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageComponentRemovedPb() {
    return this.PageComponentRemovedPb != null;
  }

  public void setPageComponentRemovedPbIsSet(boolean value) {
    if (!value) {
      this.PageComponentRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageComponentPositionSetPb getPageComponentPositionSetPb() {
    return this.PageComponentPositionSetPb;
  }

  public SiteEventPb setPageComponentPositionSetPb(@org.apache.thrift.annotation.Nullable PageComponentPositionSetPb PageComponentPositionSetPb) {
    this.PageComponentPositionSetPb = PageComponentPositionSetPb;
    return this;
  }

  public void unsetPageComponentPositionSetPb() {
    this.PageComponentPositionSetPb = null;
  }

  /** Returns true if field PageComponentPositionSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageComponentPositionSetPb() {
    return this.PageComponentPositionSetPb != null;
  }

  public void setPageComponentPositionSetPbIsSet(boolean value) {
    if (!value) {
      this.PageComponentPositionSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PageComponentPositionResetPb getPageComponentPositionResetPb() {
    return this.PageComponentPositionResetPb;
  }

  public SiteEventPb setPageComponentPositionResetPb(@org.apache.thrift.annotation.Nullable PageComponentPositionResetPb PageComponentPositionResetPb) {
    this.PageComponentPositionResetPb = PageComponentPositionResetPb;
    return this;
  }

  public void unsetPageComponentPositionResetPb() {
    this.PageComponentPositionResetPb = null;
  }

  /** Returns true if field PageComponentPositionResetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPageComponentPositionResetPb() {
    return this.PageComponentPositionResetPb != null;
  }

  public void setPageComponentPositionResetPbIsSet(boolean value) {
    if (!value) {
      this.PageComponentPositionResetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public TextComponentDataSetPb getTextComponentDataSetPb() {
    return this.TextComponentDataSetPb;
  }

  public SiteEventPb setTextComponentDataSetPb(@org.apache.thrift.annotation.Nullable TextComponentDataSetPb TextComponentDataSetPb) {
    this.TextComponentDataSetPb = TextComponentDataSetPb;
    return this;
  }

  public void unsetTextComponentDataSetPb() {
    this.TextComponentDataSetPb = null;
  }

  /** Returns true if field TextComponentDataSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetTextComponentDataSetPb() {
    return this.TextComponentDataSetPb != null;
  }

  public void setTextComponentDataSetPbIsSet(boolean value) {
    if (!value) {
      this.TextComponentDataSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public ButtonComponentDataSetPb getButtonComponentDataSetPb() {
    return this.ButtonComponentDataSetPb;
  }

  public SiteEventPb setButtonComponentDataSetPb(@org.apache.thrift.annotation.Nullable ButtonComponentDataSetPb ButtonComponentDataSetPb) {
    this.ButtonComponentDataSetPb = ButtonComponentDataSetPb;
    return this;
  }

  public void unsetButtonComponentDataSetPb() {
    this.ButtonComponentDataSetPb = null;
  }

  /** Returns true if field ButtonComponentDataSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetButtonComponentDataSetPb() {
    return this.ButtonComponentDataSetPb != null;
  }

  public void setButtonComponentDataSetPbIsSet(boolean value) {
    if (!value) {
      this.ButtonComponentDataSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public BlogComponentDataSetPb getBlogComponentDataSetPb() {
    return this.BlogComponentDataSetPb;
  }

  public SiteEventPb setBlogComponentDataSetPb(@org.apache.thrift.annotation.Nullable BlogComponentDataSetPb BlogComponentDataSetPb) {
    this.BlogComponentDataSetPb = BlogComponentDataSetPb;
    return this;
  }

  public void unsetBlogComponentDataSetPb() {
    this.BlogComponentDataSetPb = null;
  }

  /** Returns true if field BlogComponentDataSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetBlogComponentDataSetPb() {
    return this.BlogComponentDataSetPb != null;
  }

  public void setBlogComponentDataSetPbIsSet(boolean value) {
    if (!value) {
      this.BlogComponentDataSetPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public DomainEntryPointAddedPb getDomainEntryPointAddedPb() {
    return this.DomainEntryPointAddedPb;
  }

  public SiteEventPb setDomainEntryPointAddedPb(@org.apache.thrift.annotation.Nullable DomainEntryPointAddedPb DomainEntryPointAddedPb) {
    this.DomainEntryPointAddedPb = DomainEntryPointAddedPb;
    return this;
  }

  public void unsetDomainEntryPointAddedPb() {
    this.DomainEntryPointAddedPb = null;
  }

  /** Returns true if field DomainEntryPointAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetDomainEntryPointAddedPb() {
    return this.DomainEntryPointAddedPb != null;
  }

  public void setDomainEntryPointAddedPbIsSet(boolean value) {
    if (!value) {
      this.DomainEntryPointAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public FreeEntryPointAddedPb getFreeEntryPointAddedPb() {
    return this.FreeEntryPointAddedPb;
  }

  public SiteEventPb setFreeEntryPointAddedPb(@org.apache.thrift.annotation.Nullable FreeEntryPointAddedPb FreeEntryPointAddedPb) {
    this.FreeEntryPointAddedPb = FreeEntryPointAddedPb;
    return this;
  }

  public void unsetFreeEntryPointAddedPb() {
    this.FreeEntryPointAddedPb = null;
  }

  /** Returns true if field FreeEntryPointAddedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetFreeEntryPointAddedPb() {
    return this.FreeEntryPointAddedPb != null;
  }

  public void setFreeEntryPointAddedPbIsSet(boolean value) {
    if (!value) {
      this.FreeEntryPointAddedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public EntryPointRemovedPb getEntryPointRemovedPb() {
    return this.EntryPointRemovedPb;
  }

  public SiteEventPb setEntryPointRemovedPb(@org.apache.thrift.annotation.Nullable EntryPointRemovedPb EntryPointRemovedPb) {
    this.EntryPointRemovedPb = EntryPointRemovedPb;
    return this;
  }

  public void unsetEntryPointRemovedPb() {
    this.EntryPointRemovedPb = null;
  }

  /** Returns true if field EntryPointRemovedPb is set (has been assigned a value) and false otherwise */
  public boolean isSetEntryPointRemovedPb() {
    return this.EntryPointRemovedPb != null;
  }

  public void setEntryPointRemovedPbIsSet(boolean value) {
    if (!value) {
      this.EntryPointRemovedPb = null;
    }
  }

  @org.apache.thrift.annotation.Nullable
  public PrimaryEntryPointSetPb getPrimaryEntryPointSetPb() {
    return this.PrimaryEntryPointSetPb;
  }

  public SiteEventPb setPrimaryEntryPointSetPb(@org.apache.thrift.annotation.Nullable PrimaryEntryPointSetPb PrimaryEntryPointSetPb) {
    this.PrimaryEntryPointSetPb = PrimaryEntryPointSetPb;
    return this;
  }

  public void unsetPrimaryEntryPointSetPb() {
    this.PrimaryEntryPointSetPb = null;
  }

  /** Returns true if field PrimaryEntryPointSetPb is set (has been assigned a value) and false otherwise */
  public boolean isSetPrimaryEntryPointSetPb() {
    return this.PrimaryEntryPointSetPb != null;
  }

  public void setPrimaryEntryPointSetPbIsSet(boolean value) {
    if (!value) {
      this.PrimaryEntryPointSetPb = null;
    }
  }

  public void setFieldValue(_Fields field, @org.apache.thrift.annotation.Nullable java.lang.Object value) {
    switch (field) {
    case SITE_CREATED_PB:
      if (value == null) {
        unsetSiteCreatedPb();
      } else {
        setSiteCreatedPb((SiteCreatedPb)value);
      }
      break;

    case SITE_NAME_SET_PB:
      if (value == null) {
        unsetSiteNameSetPb();
      } else {
        setSiteNameSetPb((SiteNameSetPb)value);
      }
      break;

    case SITE_DESCRIPTION_SET_PB:
      if (value == null) {
        unsetSiteDescriptionSetPb();
      } else {
        setSiteDescriptionSetPb((SiteDescriptionSetPb)value);
      }
      break;

    case SITE_REVISION_SET_PB:
      if (value == null) {
        unsetSiteRevisionSetPb();
      } else {
        setSiteRevisionSetPb((SiteRevisionSetPb)value);
      }
      break;

    case SITE_PUBLISHED_PB:
      if (value == null) {
        unsetSitePublishedPb();
      } else {
        setSitePublishedPb((SitePublishedPb)value);
      }
      break;

    case SITE_UNPUBLISHED_PB:
      if (value == null) {
        unsetSiteUnpublishedPb();
      } else {
        setSiteUnpublishedPb((SiteUnpublishedPb)value);
      }
      break;

    case SITE_FLAG_ADDED_PB:
      if (value == null) {
        unsetSiteFlagAddedPb();
      } else {
        setSiteFlagAddedPb((SiteFlagAddedPb)value);
      }
      break;

    case SITE_FLAG_REMOVED_PB:
      if (value == null) {
        unsetSiteFlagRemovedPb();
      } else {
        setSiteFlagRemovedPb((SiteFlagRemovedPb)value);
      }
      break;

    case DOMAIN_ADDED_PB:
      if (value == null) {
        unsetDomainAddedPb();
      } else {
        setDomainAddedPb((DomainAddedPb)value);
      }
      break;

    case DOMAIN_REMOVED_PB:
      if (value == null) {
        unsetDomainRemovedPb();
      } else {
        setDomainRemovedPb((DomainRemovedPb)value);
      }
      break;

    case PRIMARY_DOMAIN_SET_PB:
      if (value == null) {
        unsetPrimaryDomainSetPb();
      } else {
        setPrimaryDomainSetPb((PrimaryDomainSetPb)value);
      }
      break;

    case DEFAULT_META_TAG_ADDED_PB:
      if (value == null) {
        unsetDefaultMetaTagAddedPb();
      } else {
        setDefaultMetaTagAddedPb((DefaultMetaTagAddedPb)value);
      }
      break;

    case DEFAULT_META_TAG_REMOVED_PB:
      if (value == null) {
        unsetDefaultMetaTagRemovedPb();
      } else {
        setDefaultMetaTagRemovedPb((DefaultMetaTagRemovedPb)value);
      }
      break;

    case PAGE_ADDED_PB:
      if (value == null) {
        unsetPageAddedPb();
      } else {
        setPageAddedPb((PageAddedPb)value);
      }
      break;

    case PAGE_REMOVED_PB:
      if (value == null) {
        unsetPageRemovedPb();
      } else {
        setPageRemovedPb((PageRemovedPb)value);
      }
      break;

    case PAGE_NAME_SET_PB:
      if (value == null) {
        unsetPageNameSetPb();
      } else {
        setPageNameSetPb((PageNameSetPb)value);
      }
      break;

    case PAGE_META_TAG_ADDED_PB:
      if (value == null) {
        unsetPageMetaTagAddedPb();
      } else {
        setPageMetaTagAddedPb((PageMetaTagAddedPb)value);
      }
      break;

    case PAGE_META_TAG_REMOVED_PB:
      if (value == null) {
        unsetPageMetaTagRemovedPb();
      } else {
        setPageMetaTagRemovedPb((PageMetaTagRemovedPb)value);
      }
      break;

    case PAGE_COMPONENT_ADDED_PB:
      if (value == null) {
        unsetPageComponentAddedPb();
      } else {
        setPageComponentAddedPb((PageComponentAddedPb)value);
      }
      break;

    case PAGE_COMPONENT_REMOVED_PB:
      if (value == null) {
        unsetPageComponentRemovedPb();
      } else {
        setPageComponentRemovedPb((PageComponentRemovedPb)value);
      }
      break;

    case PAGE_COMPONENT_POSITION_SET_PB:
      if (value == null) {
        unsetPageComponentPositionSetPb();
      } else {
        setPageComponentPositionSetPb((PageComponentPositionSetPb)value);
      }
      break;

    case PAGE_COMPONENT_POSITION_RESET_PB:
      if (value == null) {
        unsetPageComponentPositionResetPb();
      } else {
        setPageComponentPositionResetPb((PageComponentPositionResetPb)value);
      }
      break;

    case TEXT_COMPONENT_DATA_SET_PB:
      if (value == null) {
        unsetTextComponentDataSetPb();
      } else {
        setTextComponentDataSetPb((TextComponentDataSetPb)value);
      }
      break;

    case BUTTON_COMPONENT_DATA_SET_PB:
      if (value == null) {
        unsetButtonComponentDataSetPb();
      } else {
        setButtonComponentDataSetPb((ButtonComponentDataSetPb)value);
      }
      break;

    case BLOG_COMPONENT_DATA_SET_PB:
      if (value == null) {
        unsetBlogComponentDataSetPb();
      } else {
        setBlogComponentDataSetPb((BlogComponentDataSetPb)value);
      }
      break;

    case DOMAIN_ENTRY_POINT_ADDED_PB:
      if (value == null) {
        unsetDomainEntryPointAddedPb();
      } else {
        setDomainEntryPointAddedPb((DomainEntryPointAddedPb)value);
      }
      break;

    case FREE_ENTRY_POINT_ADDED_PB:
      if (value == null) {
        unsetFreeEntryPointAddedPb();
      } else {
        setFreeEntryPointAddedPb((FreeEntryPointAddedPb)value);
      }
      break;

    case ENTRY_POINT_REMOVED_PB:
      if (value == null) {
        unsetEntryPointRemovedPb();
      } else {
        setEntryPointRemovedPb((EntryPointRemovedPb)value);
      }
      break;

    case PRIMARY_ENTRY_POINT_SET_PB:
      if (value == null) {
        unsetPrimaryEntryPointSetPb();
      } else {
        setPrimaryEntryPointSetPb((PrimaryEntryPointSetPb)value);
      }
      break;

    }
  }

  @org.apache.thrift.annotation.Nullable
  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case SITE_CREATED_PB:
      return getSiteCreatedPb();

    case SITE_NAME_SET_PB:
      return getSiteNameSetPb();

    case SITE_DESCRIPTION_SET_PB:
      return getSiteDescriptionSetPb();

    case SITE_REVISION_SET_PB:
      return getSiteRevisionSetPb();

    case SITE_PUBLISHED_PB:
      return getSitePublishedPb();

    case SITE_UNPUBLISHED_PB:
      return getSiteUnpublishedPb();

    case SITE_FLAG_ADDED_PB:
      return getSiteFlagAddedPb();

    case SITE_FLAG_REMOVED_PB:
      return getSiteFlagRemovedPb();

    case DOMAIN_ADDED_PB:
      return getDomainAddedPb();

    case DOMAIN_REMOVED_PB:
      return getDomainRemovedPb();

    case PRIMARY_DOMAIN_SET_PB:
      return getPrimaryDomainSetPb();

    case DEFAULT_META_TAG_ADDED_PB:
      return getDefaultMetaTagAddedPb();

    case DEFAULT_META_TAG_REMOVED_PB:
      return getDefaultMetaTagRemovedPb();

    case PAGE_ADDED_PB:
      return getPageAddedPb();

    case PAGE_REMOVED_PB:
      return getPageRemovedPb();

    case PAGE_NAME_SET_PB:
      return getPageNameSetPb();

    case PAGE_META_TAG_ADDED_PB:
      return getPageMetaTagAddedPb();

    case PAGE_META_TAG_REMOVED_PB:
      return getPageMetaTagRemovedPb();

    case PAGE_COMPONENT_ADDED_PB:
      return getPageComponentAddedPb();

    case PAGE_COMPONENT_REMOVED_PB:
      return getPageComponentRemovedPb();

    case PAGE_COMPONENT_POSITION_SET_PB:
      return getPageComponentPositionSetPb();

    case PAGE_COMPONENT_POSITION_RESET_PB:
      return getPageComponentPositionResetPb();

    case TEXT_COMPONENT_DATA_SET_PB:
      return getTextComponentDataSetPb();

    case BUTTON_COMPONENT_DATA_SET_PB:
      return getButtonComponentDataSetPb();

    case BLOG_COMPONENT_DATA_SET_PB:
      return getBlogComponentDataSetPb();

    case DOMAIN_ENTRY_POINT_ADDED_PB:
      return getDomainEntryPointAddedPb();

    case FREE_ENTRY_POINT_ADDED_PB:
      return getFreeEntryPointAddedPb();

    case ENTRY_POINT_REMOVED_PB:
      return getEntryPointRemovedPb();

    case PRIMARY_ENTRY_POINT_SET_PB:
      return getPrimaryEntryPointSetPb();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case SITE_CREATED_PB:
      return isSetSiteCreatedPb();
    case SITE_NAME_SET_PB:
      return isSetSiteNameSetPb();
    case SITE_DESCRIPTION_SET_PB:
      return isSetSiteDescriptionSetPb();
    case SITE_REVISION_SET_PB:
      return isSetSiteRevisionSetPb();
    case SITE_PUBLISHED_PB:
      return isSetSitePublishedPb();
    case SITE_UNPUBLISHED_PB:
      return isSetSiteUnpublishedPb();
    case SITE_FLAG_ADDED_PB:
      return isSetSiteFlagAddedPb();
    case SITE_FLAG_REMOVED_PB:
      return isSetSiteFlagRemovedPb();
    case DOMAIN_ADDED_PB:
      return isSetDomainAddedPb();
    case DOMAIN_REMOVED_PB:
      return isSetDomainRemovedPb();
    case PRIMARY_DOMAIN_SET_PB:
      return isSetPrimaryDomainSetPb();
    case DEFAULT_META_TAG_ADDED_PB:
      return isSetDefaultMetaTagAddedPb();
    case DEFAULT_META_TAG_REMOVED_PB:
      return isSetDefaultMetaTagRemovedPb();
    case PAGE_ADDED_PB:
      return isSetPageAddedPb();
    case PAGE_REMOVED_PB:
      return isSetPageRemovedPb();
    case PAGE_NAME_SET_PB:
      return isSetPageNameSetPb();
    case PAGE_META_TAG_ADDED_PB:
      return isSetPageMetaTagAddedPb();
    case PAGE_META_TAG_REMOVED_PB:
      return isSetPageMetaTagRemovedPb();
    case PAGE_COMPONENT_ADDED_PB:
      return isSetPageComponentAddedPb();
    case PAGE_COMPONENT_REMOVED_PB:
      return isSetPageComponentRemovedPb();
    case PAGE_COMPONENT_POSITION_SET_PB:
      return isSetPageComponentPositionSetPb();
    case PAGE_COMPONENT_POSITION_RESET_PB:
      return isSetPageComponentPositionResetPb();
    case TEXT_COMPONENT_DATA_SET_PB:
      return isSetTextComponentDataSetPb();
    case BUTTON_COMPONENT_DATA_SET_PB:
      return isSetButtonComponentDataSetPb();
    case BLOG_COMPONENT_DATA_SET_PB:
      return isSetBlogComponentDataSetPb();
    case DOMAIN_ENTRY_POINT_ADDED_PB:
      return isSetDomainEntryPointAddedPb();
    case FREE_ENTRY_POINT_ADDED_PB:
      return isSetFreeEntryPointAddedPb();
    case ENTRY_POINT_REMOVED_PB:
      return isSetEntryPointRemovedPb();
    case PRIMARY_ENTRY_POINT_SET_PB:
      return isSetPrimaryEntryPointSetPb();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that instanceof SiteEventPb)
      return this.equals((SiteEventPb)that);
    return false;
  }

  public boolean equals(SiteEventPb that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_SiteCreatedPb = true && this.isSetSiteCreatedPb();
    boolean that_present_SiteCreatedPb = true && that.isSetSiteCreatedPb();
    if (this_present_SiteCreatedPb || that_present_SiteCreatedPb) {
      if (!(this_present_SiteCreatedPb && that_present_SiteCreatedPb))
        return false;
      if (!this.SiteCreatedPb.equals(that.SiteCreatedPb))
        return false;
    }

    boolean this_present_SiteNameSetPb = true && this.isSetSiteNameSetPb();
    boolean that_present_SiteNameSetPb = true && that.isSetSiteNameSetPb();
    if (this_present_SiteNameSetPb || that_present_SiteNameSetPb) {
      if (!(this_present_SiteNameSetPb && that_present_SiteNameSetPb))
        return false;
      if (!this.SiteNameSetPb.equals(that.SiteNameSetPb))
        return false;
    }

    boolean this_present_SiteDescriptionSetPb = true && this.isSetSiteDescriptionSetPb();
    boolean that_present_SiteDescriptionSetPb = true && that.isSetSiteDescriptionSetPb();
    if (this_present_SiteDescriptionSetPb || that_present_SiteDescriptionSetPb) {
      if (!(this_present_SiteDescriptionSetPb && that_present_SiteDescriptionSetPb))
        return false;
      if (!this.SiteDescriptionSetPb.equals(that.SiteDescriptionSetPb))
        return false;
    }

    boolean this_present_SiteRevisionSetPb = true && this.isSetSiteRevisionSetPb();
    boolean that_present_SiteRevisionSetPb = true && that.isSetSiteRevisionSetPb();
    if (this_present_SiteRevisionSetPb || that_present_SiteRevisionSetPb) {
      if (!(this_present_SiteRevisionSetPb && that_present_SiteRevisionSetPb))
        return false;
      if (!this.SiteRevisionSetPb.equals(that.SiteRevisionSetPb))
        return false;
    }

    boolean this_present_SitePublishedPb = true && this.isSetSitePublishedPb();
    boolean that_present_SitePublishedPb = true && that.isSetSitePublishedPb();
    if (this_present_SitePublishedPb || that_present_SitePublishedPb) {
      if (!(this_present_SitePublishedPb && that_present_SitePublishedPb))
        return false;
      if (!this.SitePublishedPb.equals(that.SitePublishedPb))
        return false;
    }

    boolean this_present_SiteUnpublishedPb = true && this.isSetSiteUnpublishedPb();
    boolean that_present_SiteUnpublishedPb = true && that.isSetSiteUnpublishedPb();
    if (this_present_SiteUnpublishedPb || that_present_SiteUnpublishedPb) {
      if (!(this_present_SiteUnpublishedPb && that_present_SiteUnpublishedPb))
        return false;
      if (!this.SiteUnpublishedPb.equals(that.SiteUnpublishedPb))
        return false;
    }

    boolean this_present_SiteFlagAddedPb = true && this.isSetSiteFlagAddedPb();
    boolean that_present_SiteFlagAddedPb = true && that.isSetSiteFlagAddedPb();
    if (this_present_SiteFlagAddedPb || that_present_SiteFlagAddedPb) {
      if (!(this_present_SiteFlagAddedPb && that_present_SiteFlagAddedPb))
        return false;
      if (!this.SiteFlagAddedPb.equals(that.SiteFlagAddedPb))
        return false;
    }

    boolean this_present_SiteFlagRemovedPb = true && this.isSetSiteFlagRemovedPb();
    boolean that_present_SiteFlagRemovedPb = true && that.isSetSiteFlagRemovedPb();
    if (this_present_SiteFlagRemovedPb || that_present_SiteFlagRemovedPb) {
      if (!(this_present_SiteFlagRemovedPb && that_present_SiteFlagRemovedPb))
        return false;
      if (!this.SiteFlagRemovedPb.equals(that.SiteFlagRemovedPb))
        return false;
    }

    boolean this_present_DomainAddedPb = true && this.isSetDomainAddedPb();
    boolean that_present_DomainAddedPb = true && that.isSetDomainAddedPb();
    if (this_present_DomainAddedPb || that_present_DomainAddedPb) {
      if (!(this_present_DomainAddedPb && that_present_DomainAddedPb))
        return false;
      if (!this.DomainAddedPb.equals(that.DomainAddedPb))
        return false;
    }

    boolean this_present_DomainRemovedPb = true && this.isSetDomainRemovedPb();
    boolean that_present_DomainRemovedPb = true && that.isSetDomainRemovedPb();
    if (this_present_DomainRemovedPb || that_present_DomainRemovedPb) {
      if (!(this_present_DomainRemovedPb && that_present_DomainRemovedPb))
        return false;
      if (!this.DomainRemovedPb.equals(that.DomainRemovedPb))
        return false;
    }

    boolean this_present_PrimaryDomainSetPb = true && this.isSetPrimaryDomainSetPb();
    boolean that_present_PrimaryDomainSetPb = true && that.isSetPrimaryDomainSetPb();
    if (this_present_PrimaryDomainSetPb || that_present_PrimaryDomainSetPb) {
      if (!(this_present_PrimaryDomainSetPb && that_present_PrimaryDomainSetPb))
        return false;
      if (!this.PrimaryDomainSetPb.equals(that.PrimaryDomainSetPb))
        return false;
    }

    boolean this_present_DefaultMetaTagAddedPb = true && this.isSetDefaultMetaTagAddedPb();
    boolean that_present_DefaultMetaTagAddedPb = true && that.isSetDefaultMetaTagAddedPb();
    if (this_present_DefaultMetaTagAddedPb || that_present_DefaultMetaTagAddedPb) {
      if (!(this_present_DefaultMetaTagAddedPb && that_present_DefaultMetaTagAddedPb))
        return false;
      if (!this.DefaultMetaTagAddedPb.equals(that.DefaultMetaTagAddedPb))
        return false;
    }

    boolean this_present_DefaultMetaTagRemovedPb = true && this.isSetDefaultMetaTagRemovedPb();
    boolean that_present_DefaultMetaTagRemovedPb = true && that.isSetDefaultMetaTagRemovedPb();
    if (this_present_DefaultMetaTagRemovedPb || that_present_DefaultMetaTagRemovedPb) {
      if (!(this_present_DefaultMetaTagRemovedPb && that_present_DefaultMetaTagRemovedPb))
        return false;
      if (!this.DefaultMetaTagRemovedPb.equals(that.DefaultMetaTagRemovedPb))
        return false;
    }

    boolean this_present_PageAddedPb = true && this.isSetPageAddedPb();
    boolean that_present_PageAddedPb = true && that.isSetPageAddedPb();
    if (this_present_PageAddedPb || that_present_PageAddedPb) {
      if (!(this_present_PageAddedPb && that_present_PageAddedPb))
        return false;
      if (!this.PageAddedPb.equals(that.PageAddedPb))
        return false;
    }

    boolean this_present_PageRemovedPb = true && this.isSetPageRemovedPb();
    boolean that_present_PageRemovedPb = true && that.isSetPageRemovedPb();
    if (this_present_PageRemovedPb || that_present_PageRemovedPb) {
      if (!(this_present_PageRemovedPb && that_present_PageRemovedPb))
        return false;
      if (!this.PageRemovedPb.equals(that.PageRemovedPb))
        return false;
    }

    boolean this_present_PageNameSetPb = true && this.isSetPageNameSetPb();
    boolean that_present_PageNameSetPb = true && that.isSetPageNameSetPb();
    if (this_present_PageNameSetPb || that_present_PageNameSetPb) {
      if (!(this_present_PageNameSetPb && that_present_PageNameSetPb))
        return false;
      if (!this.PageNameSetPb.equals(that.PageNameSetPb))
        return false;
    }

    boolean this_present_PageMetaTagAddedPb = true && this.isSetPageMetaTagAddedPb();
    boolean that_present_PageMetaTagAddedPb = true && that.isSetPageMetaTagAddedPb();
    if (this_present_PageMetaTagAddedPb || that_present_PageMetaTagAddedPb) {
      if (!(this_present_PageMetaTagAddedPb && that_present_PageMetaTagAddedPb))
        return false;
      if (!this.PageMetaTagAddedPb.equals(that.PageMetaTagAddedPb))
        return false;
    }

    boolean this_present_PageMetaTagRemovedPb = true && this.isSetPageMetaTagRemovedPb();
    boolean that_present_PageMetaTagRemovedPb = true && that.isSetPageMetaTagRemovedPb();
    if (this_present_PageMetaTagRemovedPb || that_present_PageMetaTagRemovedPb) {
      if (!(this_present_PageMetaTagRemovedPb && that_present_PageMetaTagRemovedPb))
        return false;
      if (!this.PageMetaTagRemovedPb.equals(that.PageMetaTagRemovedPb))
        return false;
    }

    boolean this_present_PageComponentAddedPb = true && this.isSetPageComponentAddedPb();
    boolean that_present_PageComponentAddedPb = true && that.isSetPageComponentAddedPb();
    if (this_present_PageComponentAddedPb || that_present_PageComponentAddedPb) {
      if (!(this_present_PageComponentAddedPb && that_present_PageComponentAddedPb))
        return false;
      if (!this.PageComponentAddedPb.equals(that.PageComponentAddedPb))
        return false;
    }

    boolean this_present_PageComponentRemovedPb = true && this.isSetPageComponentRemovedPb();
    boolean that_present_PageComponentRemovedPb = true && that.isSetPageComponentRemovedPb();
    if (this_present_PageComponentRemovedPb || that_present_PageComponentRemovedPb) {
      if (!(this_present_PageComponentRemovedPb && that_present_PageComponentRemovedPb))
        return false;
      if (!this.PageComponentRemovedPb.equals(that.PageComponentRemovedPb))
        return false;
    }

    boolean this_present_PageComponentPositionSetPb = true && this.isSetPageComponentPositionSetPb();
    boolean that_present_PageComponentPositionSetPb = true && that.isSetPageComponentPositionSetPb();
    if (this_present_PageComponentPositionSetPb || that_present_PageComponentPositionSetPb) {
      if (!(this_present_PageComponentPositionSetPb && that_present_PageComponentPositionSetPb))
        return false;
      if (!this.PageComponentPositionSetPb.equals(that.PageComponentPositionSetPb))
        return false;
    }

    boolean this_present_PageComponentPositionResetPb = true && this.isSetPageComponentPositionResetPb();
    boolean that_present_PageComponentPositionResetPb = true && that.isSetPageComponentPositionResetPb();
    if (this_present_PageComponentPositionResetPb || that_present_PageComponentPositionResetPb) {
      if (!(this_present_PageComponentPositionResetPb && that_present_PageComponentPositionResetPb))
        return false;
      if (!this.PageComponentPositionResetPb.equals(that.PageComponentPositionResetPb))
        return false;
    }

    boolean this_present_TextComponentDataSetPb = true && this.isSetTextComponentDataSetPb();
    boolean that_present_TextComponentDataSetPb = true && that.isSetTextComponentDataSetPb();
    if (this_present_TextComponentDataSetPb || that_present_TextComponentDataSetPb) {
      if (!(this_present_TextComponentDataSetPb && that_present_TextComponentDataSetPb))
        return false;
      if (!this.TextComponentDataSetPb.equals(that.TextComponentDataSetPb))
        return false;
    }

    boolean this_present_ButtonComponentDataSetPb = true && this.isSetButtonComponentDataSetPb();
    boolean that_present_ButtonComponentDataSetPb = true && that.isSetButtonComponentDataSetPb();
    if (this_present_ButtonComponentDataSetPb || that_present_ButtonComponentDataSetPb) {
      if (!(this_present_ButtonComponentDataSetPb && that_present_ButtonComponentDataSetPb))
        return false;
      if (!this.ButtonComponentDataSetPb.equals(that.ButtonComponentDataSetPb))
        return false;
    }

    boolean this_present_BlogComponentDataSetPb = true && this.isSetBlogComponentDataSetPb();
    boolean that_present_BlogComponentDataSetPb = true && that.isSetBlogComponentDataSetPb();
    if (this_present_BlogComponentDataSetPb || that_present_BlogComponentDataSetPb) {
      if (!(this_present_BlogComponentDataSetPb && that_present_BlogComponentDataSetPb))
        return false;
      if (!this.BlogComponentDataSetPb.equals(that.BlogComponentDataSetPb))
        return false;
    }

    boolean this_present_DomainEntryPointAddedPb = true && this.isSetDomainEntryPointAddedPb();
    boolean that_present_DomainEntryPointAddedPb = true && that.isSetDomainEntryPointAddedPb();
    if (this_present_DomainEntryPointAddedPb || that_present_DomainEntryPointAddedPb) {
      if (!(this_present_DomainEntryPointAddedPb && that_present_DomainEntryPointAddedPb))
        return false;
      if (!this.DomainEntryPointAddedPb.equals(that.DomainEntryPointAddedPb))
        return false;
    }

    boolean this_present_FreeEntryPointAddedPb = true && this.isSetFreeEntryPointAddedPb();
    boolean that_present_FreeEntryPointAddedPb = true && that.isSetFreeEntryPointAddedPb();
    if (this_present_FreeEntryPointAddedPb || that_present_FreeEntryPointAddedPb) {
      if (!(this_present_FreeEntryPointAddedPb && that_present_FreeEntryPointAddedPb))
        return false;
      if (!this.FreeEntryPointAddedPb.equals(that.FreeEntryPointAddedPb))
        return false;
    }

    boolean this_present_EntryPointRemovedPb = true && this.isSetEntryPointRemovedPb();
    boolean that_present_EntryPointRemovedPb = true && that.isSetEntryPointRemovedPb();
    if (this_present_EntryPointRemovedPb || that_present_EntryPointRemovedPb) {
      if (!(this_present_EntryPointRemovedPb && that_present_EntryPointRemovedPb))
        return false;
      if (!this.EntryPointRemovedPb.equals(that.EntryPointRemovedPb))
        return false;
    }

    boolean this_present_PrimaryEntryPointSetPb = true && this.isSetPrimaryEntryPointSetPb();
    boolean that_present_PrimaryEntryPointSetPb = true && that.isSetPrimaryEntryPointSetPb();
    if (this_present_PrimaryEntryPointSetPb || that_present_PrimaryEntryPointSetPb) {
      if (!(this_present_PrimaryEntryPointSetPb && that_present_PrimaryEntryPointSetPb))
        return false;
      if (!this.PrimaryEntryPointSetPb.equals(that.PrimaryEntryPointSetPb))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetSiteCreatedPb()) ? 131071 : 524287);
    if (isSetSiteCreatedPb())
      hashCode = hashCode * 8191 + SiteCreatedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteNameSetPb()) ? 131071 : 524287);
    if (isSetSiteNameSetPb())
      hashCode = hashCode * 8191 + SiteNameSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteDescriptionSetPb()) ? 131071 : 524287);
    if (isSetSiteDescriptionSetPb())
      hashCode = hashCode * 8191 + SiteDescriptionSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteRevisionSetPb()) ? 131071 : 524287);
    if (isSetSiteRevisionSetPb())
      hashCode = hashCode * 8191 + SiteRevisionSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSitePublishedPb()) ? 131071 : 524287);
    if (isSetSitePublishedPb())
      hashCode = hashCode * 8191 + SitePublishedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteUnpublishedPb()) ? 131071 : 524287);
    if (isSetSiteUnpublishedPb())
      hashCode = hashCode * 8191 + SiteUnpublishedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteFlagAddedPb()) ? 131071 : 524287);
    if (isSetSiteFlagAddedPb())
      hashCode = hashCode * 8191 + SiteFlagAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetSiteFlagRemovedPb()) ? 131071 : 524287);
    if (isSetSiteFlagRemovedPb())
      hashCode = hashCode * 8191 + SiteFlagRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetDomainAddedPb()) ? 131071 : 524287);
    if (isSetDomainAddedPb())
      hashCode = hashCode * 8191 + DomainAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetDomainRemovedPb()) ? 131071 : 524287);
    if (isSetDomainRemovedPb())
      hashCode = hashCode * 8191 + DomainRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPrimaryDomainSetPb()) ? 131071 : 524287);
    if (isSetPrimaryDomainSetPb())
      hashCode = hashCode * 8191 + PrimaryDomainSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetDefaultMetaTagAddedPb()) ? 131071 : 524287);
    if (isSetDefaultMetaTagAddedPb())
      hashCode = hashCode * 8191 + DefaultMetaTagAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetDefaultMetaTagRemovedPb()) ? 131071 : 524287);
    if (isSetDefaultMetaTagRemovedPb())
      hashCode = hashCode * 8191 + DefaultMetaTagRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageAddedPb()) ? 131071 : 524287);
    if (isSetPageAddedPb())
      hashCode = hashCode * 8191 + PageAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageRemovedPb()) ? 131071 : 524287);
    if (isSetPageRemovedPb())
      hashCode = hashCode * 8191 + PageRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageNameSetPb()) ? 131071 : 524287);
    if (isSetPageNameSetPb())
      hashCode = hashCode * 8191 + PageNameSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageMetaTagAddedPb()) ? 131071 : 524287);
    if (isSetPageMetaTagAddedPb())
      hashCode = hashCode * 8191 + PageMetaTagAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageMetaTagRemovedPb()) ? 131071 : 524287);
    if (isSetPageMetaTagRemovedPb())
      hashCode = hashCode * 8191 + PageMetaTagRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageComponentAddedPb()) ? 131071 : 524287);
    if (isSetPageComponentAddedPb())
      hashCode = hashCode * 8191 + PageComponentAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageComponentRemovedPb()) ? 131071 : 524287);
    if (isSetPageComponentRemovedPb())
      hashCode = hashCode * 8191 + PageComponentRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageComponentPositionSetPb()) ? 131071 : 524287);
    if (isSetPageComponentPositionSetPb())
      hashCode = hashCode * 8191 + PageComponentPositionSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPageComponentPositionResetPb()) ? 131071 : 524287);
    if (isSetPageComponentPositionResetPb())
      hashCode = hashCode * 8191 + PageComponentPositionResetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetTextComponentDataSetPb()) ? 131071 : 524287);
    if (isSetTextComponentDataSetPb())
      hashCode = hashCode * 8191 + TextComponentDataSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetButtonComponentDataSetPb()) ? 131071 : 524287);
    if (isSetButtonComponentDataSetPb())
      hashCode = hashCode * 8191 + ButtonComponentDataSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetBlogComponentDataSetPb()) ? 131071 : 524287);
    if (isSetBlogComponentDataSetPb())
      hashCode = hashCode * 8191 + BlogComponentDataSetPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetDomainEntryPointAddedPb()) ? 131071 : 524287);
    if (isSetDomainEntryPointAddedPb())
      hashCode = hashCode * 8191 + DomainEntryPointAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetFreeEntryPointAddedPb()) ? 131071 : 524287);
    if (isSetFreeEntryPointAddedPb())
      hashCode = hashCode * 8191 + FreeEntryPointAddedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetEntryPointRemovedPb()) ? 131071 : 524287);
    if (isSetEntryPointRemovedPb())
      hashCode = hashCode * 8191 + EntryPointRemovedPb.hashCode();

    hashCode = hashCode * 8191 + ((isSetPrimaryEntryPointSetPb()) ? 131071 : 524287);
    if (isSetPrimaryEntryPointSetPb())
      hashCode = hashCode * 8191 + PrimaryEntryPointSetPb.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(SiteEventPb other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.compare(isSetSiteCreatedPb(), other.isSetSiteCreatedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteCreatedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteCreatedPb, other.SiteCreatedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSiteNameSetPb(), other.isSetSiteNameSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteNameSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteNameSetPb, other.SiteNameSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSiteDescriptionSetPb(), other.isSetSiteDescriptionSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteDescriptionSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteDescriptionSetPb, other.SiteDescriptionSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSiteRevisionSetPb(), other.isSetSiteRevisionSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteRevisionSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteRevisionSetPb, other.SiteRevisionSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSitePublishedPb(), other.isSetSitePublishedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSitePublishedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SitePublishedPb, other.SitePublishedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSiteUnpublishedPb(), other.isSetSiteUnpublishedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteUnpublishedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteUnpublishedPb, other.SiteUnpublishedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSiteFlagAddedPb(), other.isSetSiteFlagAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteFlagAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteFlagAddedPb, other.SiteFlagAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetSiteFlagRemovedPb(), other.isSetSiteFlagRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetSiteFlagRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.SiteFlagRemovedPb, other.SiteFlagRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDomainAddedPb(), other.isSetDomainAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDomainAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.DomainAddedPb, other.DomainAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDomainRemovedPb(), other.isSetDomainRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDomainRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.DomainRemovedPb, other.DomainRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPrimaryDomainSetPb(), other.isSetPrimaryDomainSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryDomainSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PrimaryDomainSetPb, other.PrimaryDomainSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDefaultMetaTagAddedPb(), other.isSetDefaultMetaTagAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultMetaTagAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.DefaultMetaTagAddedPb, other.DefaultMetaTagAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDefaultMetaTagRemovedPb(), other.isSetDefaultMetaTagRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDefaultMetaTagRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.DefaultMetaTagRemovedPb, other.DefaultMetaTagRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageAddedPb(), other.isSetPageAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageAddedPb, other.PageAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageRemovedPb(), other.isSetPageRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageRemovedPb, other.PageRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageNameSetPb(), other.isSetPageNameSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageNameSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageNameSetPb, other.PageNameSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageMetaTagAddedPb(), other.isSetPageMetaTagAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageMetaTagAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageMetaTagAddedPb, other.PageMetaTagAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageMetaTagRemovedPb(), other.isSetPageMetaTagRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageMetaTagRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageMetaTagRemovedPb, other.PageMetaTagRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageComponentAddedPb(), other.isSetPageComponentAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageComponentAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageComponentAddedPb, other.PageComponentAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageComponentRemovedPb(), other.isSetPageComponentRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageComponentRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageComponentRemovedPb, other.PageComponentRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageComponentPositionSetPb(), other.isSetPageComponentPositionSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageComponentPositionSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageComponentPositionSetPb, other.PageComponentPositionSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPageComponentPositionResetPb(), other.isSetPageComponentPositionResetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPageComponentPositionResetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PageComponentPositionResetPb, other.PageComponentPositionResetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetTextComponentDataSetPb(), other.isSetTextComponentDataSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetTextComponentDataSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.TextComponentDataSetPb, other.TextComponentDataSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetButtonComponentDataSetPb(), other.isSetButtonComponentDataSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetButtonComponentDataSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.ButtonComponentDataSetPb, other.ButtonComponentDataSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetBlogComponentDataSetPb(), other.isSetBlogComponentDataSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetBlogComponentDataSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.BlogComponentDataSetPb, other.BlogComponentDataSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetDomainEntryPointAddedPb(), other.isSetDomainEntryPointAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDomainEntryPointAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.DomainEntryPointAddedPb, other.DomainEntryPointAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetFreeEntryPointAddedPb(), other.isSetFreeEntryPointAddedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetFreeEntryPointAddedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.FreeEntryPointAddedPb, other.FreeEntryPointAddedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetEntryPointRemovedPb(), other.isSetEntryPointRemovedPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEntryPointRemovedPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.EntryPointRemovedPb, other.EntryPointRemovedPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.compare(isSetPrimaryEntryPointSetPb(), other.isSetPrimaryEntryPointSetPb());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPrimaryEntryPointSetPb()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.PrimaryEntryPointSetPb, other.PrimaryEntryPointSetPb);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  @org.apache.thrift.annotation.Nullable
  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("SiteEventPb(");
    boolean first = true;

    if (isSetSiteCreatedPb()) {
      sb.append("SiteCreatedPb:");
      if (this.SiteCreatedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteCreatedPb);
      }
      first = false;
    }
    if (isSetSiteNameSetPb()) {
      if (!first) sb.append(", ");
      sb.append("SiteNameSetPb:");
      if (this.SiteNameSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteNameSetPb);
      }
      first = false;
    }
    if (isSetSiteDescriptionSetPb()) {
      if (!first) sb.append(", ");
      sb.append("SiteDescriptionSetPb:");
      if (this.SiteDescriptionSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteDescriptionSetPb);
      }
      first = false;
    }
    if (isSetSiteRevisionSetPb()) {
      if (!first) sb.append(", ");
      sb.append("SiteRevisionSetPb:");
      if (this.SiteRevisionSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteRevisionSetPb);
      }
      first = false;
    }
    if (isSetSitePublishedPb()) {
      if (!first) sb.append(", ");
      sb.append("SitePublishedPb:");
      if (this.SitePublishedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SitePublishedPb);
      }
      first = false;
    }
    if (isSetSiteUnpublishedPb()) {
      if (!first) sb.append(", ");
      sb.append("SiteUnpublishedPb:");
      if (this.SiteUnpublishedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteUnpublishedPb);
      }
      first = false;
    }
    if (isSetSiteFlagAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("SiteFlagAddedPb:");
      if (this.SiteFlagAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteFlagAddedPb);
      }
      first = false;
    }
    if (isSetSiteFlagRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("SiteFlagRemovedPb:");
      if (this.SiteFlagRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.SiteFlagRemovedPb);
      }
      first = false;
    }
    if (isSetDomainAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("DomainAddedPb:");
      if (this.DomainAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.DomainAddedPb);
      }
      first = false;
    }
    if (isSetDomainRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("DomainRemovedPb:");
      if (this.DomainRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.DomainRemovedPb);
      }
      first = false;
    }
    if (isSetPrimaryDomainSetPb()) {
      if (!first) sb.append(", ");
      sb.append("PrimaryDomainSetPb:");
      if (this.PrimaryDomainSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PrimaryDomainSetPb);
      }
      first = false;
    }
    if (isSetDefaultMetaTagAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("DefaultMetaTagAddedPb:");
      if (this.DefaultMetaTagAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.DefaultMetaTagAddedPb);
      }
      first = false;
    }
    if (isSetDefaultMetaTagRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("DefaultMetaTagRemovedPb:");
      if (this.DefaultMetaTagRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.DefaultMetaTagRemovedPb);
      }
      first = false;
    }
    if (isSetPageAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("PageAddedPb:");
      if (this.PageAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageAddedPb);
      }
      first = false;
    }
    if (isSetPageRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("PageRemovedPb:");
      if (this.PageRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageRemovedPb);
      }
      first = false;
    }
    if (isSetPageNameSetPb()) {
      if (!first) sb.append(", ");
      sb.append("PageNameSetPb:");
      if (this.PageNameSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageNameSetPb);
      }
      first = false;
    }
    if (isSetPageMetaTagAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("PageMetaTagAddedPb:");
      if (this.PageMetaTagAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageMetaTagAddedPb);
      }
      first = false;
    }
    if (isSetPageMetaTagRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("PageMetaTagRemovedPb:");
      if (this.PageMetaTagRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageMetaTagRemovedPb);
      }
      first = false;
    }
    if (isSetPageComponentAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("PageComponentAddedPb:");
      if (this.PageComponentAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageComponentAddedPb);
      }
      first = false;
    }
    if (isSetPageComponentRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("PageComponentRemovedPb:");
      if (this.PageComponentRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageComponentRemovedPb);
      }
      first = false;
    }
    if (isSetPageComponentPositionSetPb()) {
      if (!first) sb.append(", ");
      sb.append("PageComponentPositionSetPb:");
      if (this.PageComponentPositionSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageComponentPositionSetPb);
      }
      first = false;
    }
    if (isSetPageComponentPositionResetPb()) {
      if (!first) sb.append(", ");
      sb.append("PageComponentPositionResetPb:");
      if (this.PageComponentPositionResetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PageComponentPositionResetPb);
      }
      first = false;
    }
    if (isSetTextComponentDataSetPb()) {
      if (!first) sb.append(", ");
      sb.append("TextComponentDataSetPb:");
      if (this.TextComponentDataSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.TextComponentDataSetPb);
      }
      first = false;
    }
    if (isSetButtonComponentDataSetPb()) {
      if (!first) sb.append(", ");
      sb.append("ButtonComponentDataSetPb:");
      if (this.ButtonComponentDataSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.ButtonComponentDataSetPb);
      }
      first = false;
    }
    if (isSetBlogComponentDataSetPb()) {
      if (!first) sb.append(", ");
      sb.append("BlogComponentDataSetPb:");
      if (this.BlogComponentDataSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.BlogComponentDataSetPb);
      }
      first = false;
    }
    if (isSetDomainEntryPointAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("DomainEntryPointAddedPb:");
      if (this.DomainEntryPointAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.DomainEntryPointAddedPb);
      }
      first = false;
    }
    if (isSetFreeEntryPointAddedPb()) {
      if (!first) sb.append(", ");
      sb.append("FreeEntryPointAddedPb:");
      if (this.FreeEntryPointAddedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.FreeEntryPointAddedPb);
      }
      first = false;
    }
    if (isSetEntryPointRemovedPb()) {
      if (!first) sb.append(", ");
      sb.append("EntryPointRemovedPb:");
      if (this.EntryPointRemovedPb == null) {
        sb.append("null");
      } else {
        sb.append(this.EntryPointRemovedPb);
      }
      first = false;
    }
    if (isSetPrimaryEntryPointSetPb()) {
      if (!first) sb.append(", ");
      sb.append("PrimaryEntryPointSetPb:");
      if (this.PrimaryEntryPointSetPb == null) {
        sb.append("null");
      } else {
        sb.append(this.PrimaryEntryPointSetPb);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    // check for sub-struct validity
    if (SiteCreatedPb != null) {
      SiteCreatedPb.validate();
    }
    if (SiteNameSetPb != null) {
      SiteNameSetPb.validate();
    }
    if (SiteDescriptionSetPb != null) {
      SiteDescriptionSetPb.validate();
    }
    if (SiteRevisionSetPb != null) {
      SiteRevisionSetPb.validate();
    }
    if (SitePublishedPb != null) {
      SitePublishedPb.validate();
    }
    if (SiteUnpublishedPb != null) {
      SiteUnpublishedPb.validate();
    }
    if (SiteFlagAddedPb != null) {
      SiteFlagAddedPb.validate();
    }
    if (SiteFlagRemovedPb != null) {
      SiteFlagRemovedPb.validate();
    }
    if (DomainAddedPb != null) {
      DomainAddedPb.validate();
    }
    if (DomainRemovedPb != null) {
      DomainRemovedPb.validate();
    }
    if (PrimaryDomainSetPb != null) {
      PrimaryDomainSetPb.validate();
    }
    if (DefaultMetaTagAddedPb != null) {
      DefaultMetaTagAddedPb.validate();
    }
    if (DefaultMetaTagRemovedPb != null) {
      DefaultMetaTagRemovedPb.validate();
    }
    if (PageAddedPb != null) {
      PageAddedPb.validate();
    }
    if (PageRemovedPb != null) {
      PageRemovedPb.validate();
    }
    if (PageNameSetPb != null) {
      PageNameSetPb.validate();
    }
    if (PageMetaTagAddedPb != null) {
      PageMetaTagAddedPb.validate();
    }
    if (PageMetaTagRemovedPb != null) {
      PageMetaTagRemovedPb.validate();
    }
    if (PageComponentAddedPb != null) {
      PageComponentAddedPb.validate();
    }
    if (PageComponentRemovedPb != null) {
      PageComponentRemovedPb.validate();
    }
    if (PageComponentPositionSetPb != null) {
      PageComponentPositionSetPb.validate();
    }
    if (PageComponentPositionResetPb != null) {
      PageComponentPositionResetPb.validate();
    }
    if (TextComponentDataSetPb != null) {
      TextComponentDataSetPb.validate();
    }
    if (ButtonComponentDataSetPb != null) {
      ButtonComponentDataSetPb.validate();
    }
    if (BlogComponentDataSetPb != null) {
      BlogComponentDataSetPb.validate();
    }
    if (DomainEntryPointAddedPb != null) {
      DomainEntryPointAddedPb.validate();
    }
    if (FreeEntryPointAddedPb != null) {
      FreeEntryPointAddedPb.validate();
    }
    if (EntryPointRemovedPb != null) {
      EntryPointRemovedPb.validate();
    }
    if (PrimaryEntryPointSetPb != null) {
      PrimaryEntryPointSetPb.validate();
    }
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class SiteEventPbStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SiteEventPbStandardScheme getScheme() {
      return new SiteEventPbStandardScheme();
    }
  }

  private static class SiteEventPbStandardScheme extends org.apache.thrift.scheme.StandardScheme<SiteEventPb> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, SiteEventPb struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // SITE_CREATED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteCreatedPb = new SiteCreatedPb();
              struct.SiteCreatedPb.read(iprot);
              struct.setSiteCreatedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // SITE_NAME_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteNameSetPb = new SiteNameSetPb();
              struct.SiteNameSetPb.read(iprot);
              struct.setSiteNameSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // SITE_DESCRIPTION_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteDescriptionSetPb = new SiteDescriptionSetPb();
              struct.SiteDescriptionSetPb.read(iprot);
              struct.setSiteDescriptionSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // SITE_REVISION_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteRevisionSetPb = new SiteRevisionSetPb();
              struct.SiteRevisionSetPb.read(iprot);
              struct.setSiteRevisionSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // SITE_PUBLISHED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SitePublishedPb = new SitePublishedPb();
              struct.SitePublishedPb.read(iprot);
              struct.setSitePublishedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // SITE_UNPUBLISHED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteUnpublishedPb = new SiteUnpublishedPb();
              struct.SiteUnpublishedPb.read(iprot);
              struct.setSiteUnpublishedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // SITE_FLAG_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteFlagAddedPb = new SiteFlagAddedPb();
              struct.SiteFlagAddedPb.read(iprot);
              struct.setSiteFlagAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // SITE_FLAG_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.SiteFlagRemovedPb = new SiteFlagRemovedPb();
              struct.SiteFlagRemovedPb.read(iprot);
              struct.setSiteFlagRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DOMAIN_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.DomainAddedPb = new DomainAddedPb();
              struct.DomainAddedPb.read(iprot);
              struct.setDomainAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // DOMAIN_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.DomainRemovedPb = new DomainRemovedPb();
              struct.DomainRemovedPb.read(iprot);
              struct.setDomainRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // PRIMARY_DOMAIN_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PrimaryDomainSetPb = new PrimaryDomainSetPb();
              struct.PrimaryDomainSetPb.read(iprot);
              struct.setPrimaryDomainSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // DEFAULT_META_TAG_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.DefaultMetaTagAddedPb = new DefaultMetaTagAddedPb();
              struct.DefaultMetaTagAddedPb.read(iprot);
              struct.setDefaultMetaTagAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 13: // DEFAULT_META_TAG_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.DefaultMetaTagRemovedPb = new DefaultMetaTagRemovedPb();
              struct.DefaultMetaTagRemovedPb.read(iprot);
              struct.setDefaultMetaTagRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 14: // PAGE_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageAddedPb = new PageAddedPb();
              struct.PageAddedPb.read(iprot);
              struct.setPageAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 15: // PAGE_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageRemovedPb = new PageRemovedPb();
              struct.PageRemovedPb.read(iprot);
              struct.setPageRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 16: // PAGE_NAME_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageNameSetPb = new PageNameSetPb();
              struct.PageNameSetPb.read(iprot);
              struct.setPageNameSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 17: // PAGE_META_TAG_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageMetaTagAddedPb = new PageMetaTagAddedPb();
              struct.PageMetaTagAddedPb.read(iprot);
              struct.setPageMetaTagAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 18: // PAGE_META_TAG_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageMetaTagRemovedPb = new PageMetaTagRemovedPb();
              struct.PageMetaTagRemovedPb.read(iprot);
              struct.setPageMetaTagRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 19: // PAGE_COMPONENT_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageComponentAddedPb = new PageComponentAddedPb();
              struct.PageComponentAddedPb.read(iprot);
              struct.setPageComponentAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 20: // PAGE_COMPONENT_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageComponentRemovedPb = new PageComponentRemovedPb();
              struct.PageComponentRemovedPb.read(iprot);
              struct.setPageComponentRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 21: // PAGE_COMPONENT_POSITION_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageComponentPositionSetPb = new PageComponentPositionSetPb();
              struct.PageComponentPositionSetPb.read(iprot);
              struct.setPageComponentPositionSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 22: // PAGE_COMPONENT_POSITION_RESET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PageComponentPositionResetPb = new PageComponentPositionResetPb();
              struct.PageComponentPositionResetPb.read(iprot);
              struct.setPageComponentPositionResetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 23: // TEXT_COMPONENT_DATA_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.TextComponentDataSetPb = new TextComponentDataSetPb();
              struct.TextComponentDataSetPb.read(iprot);
              struct.setTextComponentDataSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 24: // BUTTON_COMPONENT_DATA_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.ButtonComponentDataSetPb = new ButtonComponentDataSetPb();
              struct.ButtonComponentDataSetPb.read(iprot);
              struct.setButtonComponentDataSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 25: // BLOG_COMPONENT_DATA_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.BlogComponentDataSetPb = new BlogComponentDataSetPb();
              struct.BlogComponentDataSetPb.read(iprot);
              struct.setBlogComponentDataSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 26: // DOMAIN_ENTRY_POINT_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.DomainEntryPointAddedPb = new DomainEntryPointAddedPb();
              struct.DomainEntryPointAddedPb.read(iprot);
              struct.setDomainEntryPointAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 27: // FREE_ENTRY_POINT_ADDED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.FreeEntryPointAddedPb = new FreeEntryPointAddedPb();
              struct.FreeEntryPointAddedPb.read(iprot);
              struct.setFreeEntryPointAddedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 28: // ENTRY_POINT_REMOVED_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.EntryPointRemovedPb = new EntryPointRemovedPb();
              struct.EntryPointRemovedPb.read(iprot);
              struct.setEntryPointRemovedPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 29: // PRIMARY_ENTRY_POINT_SET_PB
            if (schemeField.type == org.apache.thrift.protocol.TType.STRUCT) {
              struct.PrimaryEntryPointSetPb = new PrimaryEntryPointSetPb();
              struct.PrimaryEntryPointSetPb.read(iprot);
              struct.setPrimaryEntryPointSetPbIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, SiteEventPb struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.SiteCreatedPb != null) {
        if (struct.isSetSiteCreatedPb()) {
          oprot.writeFieldBegin(SITE_CREATED_PB_FIELD_DESC);
          struct.SiteCreatedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SiteNameSetPb != null) {
        if (struct.isSetSiteNameSetPb()) {
          oprot.writeFieldBegin(SITE_NAME_SET_PB_FIELD_DESC);
          struct.SiteNameSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SiteDescriptionSetPb != null) {
        if (struct.isSetSiteDescriptionSetPb()) {
          oprot.writeFieldBegin(SITE_DESCRIPTION_SET_PB_FIELD_DESC);
          struct.SiteDescriptionSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SiteRevisionSetPb != null) {
        if (struct.isSetSiteRevisionSetPb()) {
          oprot.writeFieldBegin(SITE_REVISION_SET_PB_FIELD_DESC);
          struct.SiteRevisionSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SitePublishedPb != null) {
        if (struct.isSetSitePublishedPb()) {
          oprot.writeFieldBegin(SITE_PUBLISHED_PB_FIELD_DESC);
          struct.SitePublishedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SiteUnpublishedPb != null) {
        if (struct.isSetSiteUnpublishedPb()) {
          oprot.writeFieldBegin(SITE_UNPUBLISHED_PB_FIELD_DESC);
          struct.SiteUnpublishedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SiteFlagAddedPb != null) {
        if (struct.isSetSiteFlagAddedPb()) {
          oprot.writeFieldBegin(SITE_FLAG_ADDED_PB_FIELD_DESC);
          struct.SiteFlagAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.SiteFlagRemovedPb != null) {
        if (struct.isSetSiteFlagRemovedPb()) {
          oprot.writeFieldBegin(SITE_FLAG_REMOVED_PB_FIELD_DESC);
          struct.SiteFlagRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.DomainAddedPb != null) {
        if (struct.isSetDomainAddedPb()) {
          oprot.writeFieldBegin(DOMAIN_ADDED_PB_FIELD_DESC);
          struct.DomainAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.DomainRemovedPb != null) {
        if (struct.isSetDomainRemovedPb()) {
          oprot.writeFieldBegin(DOMAIN_REMOVED_PB_FIELD_DESC);
          struct.DomainRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PrimaryDomainSetPb != null) {
        if (struct.isSetPrimaryDomainSetPb()) {
          oprot.writeFieldBegin(PRIMARY_DOMAIN_SET_PB_FIELD_DESC);
          struct.PrimaryDomainSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.DefaultMetaTagAddedPb != null) {
        if (struct.isSetDefaultMetaTagAddedPb()) {
          oprot.writeFieldBegin(DEFAULT_META_TAG_ADDED_PB_FIELD_DESC);
          struct.DefaultMetaTagAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.DefaultMetaTagRemovedPb != null) {
        if (struct.isSetDefaultMetaTagRemovedPb()) {
          oprot.writeFieldBegin(DEFAULT_META_TAG_REMOVED_PB_FIELD_DESC);
          struct.DefaultMetaTagRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageAddedPb != null) {
        if (struct.isSetPageAddedPb()) {
          oprot.writeFieldBegin(PAGE_ADDED_PB_FIELD_DESC);
          struct.PageAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageRemovedPb != null) {
        if (struct.isSetPageRemovedPb()) {
          oprot.writeFieldBegin(PAGE_REMOVED_PB_FIELD_DESC);
          struct.PageRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageNameSetPb != null) {
        if (struct.isSetPageNameSetPb()) {
          oprot.writeFieldBegin(PAGE_NAME_SET_PB_FIELD_DESC);
          struct.PageNameSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageMetaTagAddedPb != null) {
        if (struct.isSetPageMetaTagAddedPb()) {
          oprot.writeFieldBegin(PAGE_META_TAG_ADDED_PB_FIELD_DESC);
          struct.PageMetaTagAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageMetaTagRemovedPb != null) {
        if (struct.isSetPageMetaTagRemovedPb()) {
          oprot.writeFieldBegin(PAGE_META_TAG_REMOVED_PB_FIELD_DESC);
          struct.PageMetaTagRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageComponentAddedPb != null) {
        if (struct.isSetPageComponentAddedPb()) {
          oprot.writeFieldBegin(PAGE_COMPONENT_ADDED_PB_FIELD_DESC);
          struct.PageComponentAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageComponentRemovedPb != null) {
        if (struct.isSetPageComponentRemovedPb()) {
          oprot.writeFieldBegin(PAGE_COMPONENT_REMOVED_PB_FIELD_DESC);
          struct.PageComponentRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageComponentPositionSetPb != null) {
        if (struct.isSetPageComponentPositionSetPb()) {
          oprot.writeFieldBegin(PAGE_COMPONENT_POSITION_SET_PB_FIELD_DESC);
          struct.PageComponentPositionSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PageComponentPositionResetPb != null) {
        if (struct.isSetPageComponentPositionResetPb()) {
          oprot.writeFieldBegin(PAGE_COMPONENT_POSITION_RESET_PB_FIELD_DESC);
          struct.PageComponentPositionResetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.TextComponentDataSetPb != null) {
        if (struct.isSetTextComponentDataSetPb()) {
          oprot.writeFieldBegin(TEXT_COMPONENT_DATA_SET_PB_FIELD_DESC);
          struct.TextComponentDataSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.ButtonComponentDataSetPb != null) {
        if (struct.isSetButtonComponentDataSetPb()) {
          oprot.writeFieldBegin(BUTTON_COMPONENT_DATA_SET_PB_FIELD_DESC);
          struct.ButtonComponentDataSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.BlogComponentDataSetPb != null) {
        if (struct.isSetBlogComponentDataSetPb()) {
          oprot.writeFieldBegin(BLOG_COMPONENT_DATA_SET_PB_FIELD_DESC);
          struct.BlogComponentDataSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.DomainEntryPointAddedPb != null) {
        if (struct.isSetDomainEntryPointAddedPb()) {
          oprot.writeFieldBegin(DOMAIN_ENTRY_POINT_ADDED_PB_FIELD_DESC);
          struct.DomainEntryPointAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.FreeEntryPointAddedPb != null) {
        if (struct.isSetFreeEntryPointAddedPb()) {
          oprot.writeFieldBegin(FREE_ENTRY_POINT_ADDED_PB_FIELD_DESC);
          struct.FreeEntryPointAddedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.EntryPointRemovedPb != null) {
        if (struct.isSetEntryPointRemovedPb()) {
          oprot.writeFieldBegin(ENTRY_POINT_REMOVED_PB_FIELD_DESC);
          struct.EntryPointRemovedPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      if (struct.PrimaryEntryPointSetPb != null) {
        if (struct.isSetPrimaryEntryPointSetPb()) {
          oprot.writeFieldBegin(PRIMARY_ENTRY_POINT_SET_PB_FIELD_DESC);
          struct.PrimaryEntryPointSetPb.write(oprot);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class SiteEventPbTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public SiteEventPbTupleScheme getScheme() {
      return new SiteEventPbTupleScheme();
    }
  }

  private static class SiteEventPbTupleScheme extends org.apache.thrift.scheme.TupleScheme<SiteEventPb> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, SiteEventPb struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetSiteCreatedPb()) {
        optionals.set(0);
      }
      if (struct.isSetSiteNameSetPb()) {
        optionals.set(1);
      }
      if (struct.isSetSiteDescriptionSetPb()) {
        optionals.set(2);
      }
      if (struct.isSetSiteRevisionSetPb()) {
        optionals.set(3);
      }
      if (struct.isSetSitePublishedPb()) {
        optionals.set(4);
      }
      if (struct.isSetSiteUnpublishedPb()) {
        optionals.set(5);
      }
      if (struct.isSetSiteFlagAddedPb()) {
        optionals.set(6);
      }
      if (struct.isSetSiteFlagRemovedPb()) {
        optionals.set(7);
      }
      if (struct.isSetDomainAddedPb()) {
        optionals.set(8);
      }
      if (struct.isSetDomainRemovedPb()) {
        optionals.set(9);
      }
      if (struct.isSetPrimaryDomainSetPb()) {
        optionals.set(10);
      }
      if (struct.isSetDefaultMetaTagAddedPb()) {
        optionals.set(11);
      }
      if (struct.isSetDefaultMetaTagRemovedPb()) {
        optionals.set(12);
      }
      if (struct.isSetPageAddedPb()) {
        optionals.set(13);
      }
      if (struct.isSetPageRemovedPb()) {
        optionals.set(14);
      }
      if (struct.isSetPageNameSetPb()) {
        optionals.set(15);
      }
      if (struct.isSetPageMetaTagAddedPb()) {
        optionals.set(16);
      }
      if (struct.isSetPageMetaTagRemovedPb()) {
        optionals.set(17);
      }
      if (struct.isSetPageComponentAddedPb()) {
        optionals.set(18);
      }
      if (struct.isSetPageComponentRemovedPb()) {
        optionals.set(19);
      }
      if (struct.isSetPageComponentPositionSetPb()) {
        optionals.set(20);
      }
      if (struct.isSetPageComponentPositionResetPb()) {
        optionals.set(21);
      }
      if (struct.isSetTextComponentDataSetPb()) {
        optionals.set(22);
      }
      if (struct.isSetButtonComponentDataSetPb()) {
        optionals.set(23);
      }
      if (struct.isSetBlogComponentDataSetPb()) {
        optionals.set(24);
      }
      if (struct.isSetDomainEntryPointAddedPb()) {
        optionals.set(25);
      }
      if (struct.isSetFreeEntryPointAddedPb()) {
        optionals.set(26);
      }
      if (struct.isSetEntryPointRemovedPb()) {
        optionals.set(27);
      }
      if (struct.isSetPrimaryEntryPointSetPb()) {
        optionals.set(28);
      }
      oprot.writeBitSet(optionals, 29);
      if (struct.isSetSiteCreatedPb()) {
        struct.SiteCreatedPb.write(oprot);
      }
      if (struct.isSetSiteNameSetPb()) {
        struct.SiteNameSetPb.write(oprot);
      }
      if (struct.isSetSiteDescriptionSetPb()) {
        struct.SiteDescriptionSetPb.write(oprot);
      }
      if (struct.isSetSiteRevisionSetPb()) {
        struct.SiteRevisionSetPb.write(oprot);
      }
      if (struct.isSetSitePublishedPb()) {
        struct.SitePublishedPb.write(oprot);
      }
      if (struct.isSetSiteUnpublishedPb()) {
        struct.SiteUnpublishedPb.write(oprot);
      }
      if (struct.isSetSiteFlagAddedPb()) {
        struct.SiteFlagAddedPb.write(oprot);
      }
      if (struct.isSetSiteFlagRemovedPb()) {
        struct.SiteFlagRemovedPb.write(oprot);
      }
      if (struct.isSetDomainAddedPb()) {
        struct.DomainAddedPb.write(oprot);
      }
      if (struct.isSetDomainRemovedPb()) {
        struct.DomainRemovedPb.write(oprot);
      }
      if (struct.isSetPrimaryDomainSetPb()) {
        struct.PrimaryDomainSetPb.write(oprot);
      }
      if (struct.isSetDefaultMetaTagAddedPb()) {
        struct.DefaultMetaTagAddedPb.write(oprot);
      }
      if (struct.isSetDefaultMetaTagRemovedPb()) {
        struct.DefaultMetaTagRemovedPb.write(oprot);
      }
      if (struct.isSetPageAddedPb()) {
        struct.PageAddedPb.write(oprot);
      }
      if (struct.isSetPageRemovedPb()) {
        struct.PageRemovedPb.write(oprot);
      }
      if (struct.isSetPageNameSetPb()) {
        struct.PageNameSetPb.write(oprot);
      }
      if (struct.isSetPageMetaTagAddedPb()) {
        struct.PageMetaTagAddedPb.write(oprot);
      }
      if (struct.isSetPageMetaTagRemovedPb()) {
        struct.PageMetaTagRemovedPb.write(oprot);
      }
      if (struct.isSetPageComponentAddedPb()) {
        struct.PageComponentAddedPb.write(oprot);
      }
      if (struct.isSetPageComponentRemovedPb()) {
        struct.PageComponentRemovedPb.write(oprot);
      }
      if (struct.isSetPageComponentPositionSetPb()) {
        struct.PageComponentPositionSetPb.write(oprot);
      }
      if (struct.isSetPageComponentPositionResetPb()) {
        struct.PageComponentPositionResetPb.write(oprot);
      }
      if (struct.isSetTextComponentDataSetPb()) {
        struct.TextComponentDataSetPb.write(oprot);
      }
      if (struct.isSetButtonComponentDataSetPb()) {
        struct.ButtonComponentDataSetPb.write(oprot);
      }
      if (struct.isSetBlogComponentDataSetPb()) {
        struct.BlogComponentDataSetPb.write(oprot);
      }
      if (struct.isSetDomainEntryPointAddedPb()) {
        struct.DomainEntryPointAddedPb.write(oprot);
      }
      if (struct.isSetFreeEntryPointAddedPb()) {
        struct.FreeEntryPointAddedPb.write(oprot);
      }
      if (struct.isSetEntryPointRemovedPb()) {
        struct.EntryPointRemovedPb.write(oprot);
      }
      if (struct.isSetPrimaryEntryPointSetPb()) {
        struct.PrimaryEntryPointSetPb.write(oprot);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, SiteEventPb struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      java.util.BitSet incoming = iprot.readBitSet(29);
      if (incoming.get(0)) {
        struct.SiteCreatedPb = new SiteCreatedPb();
        struct.SiteCreatedPb.read(iprot);
        struct.setSiteCreatedPbIsSet(true);
      }
      if (incoming.get(1)) {
        struct.SiteNameSetPb = new SiteNameSetPb();
        struct.SiteNameSetPb.read(iprot);
        struct.setSiteNameSetPbIsSet(true);
      }
      if (incoming.get(2)) {
        struct.SiteDescriptionSetPb = new SiteDescriptionSetPb();
        struct.SiteDescriptionSetPb.read(iprot);
        struct.setSiteDescriptionSetPbIsSet(true);
      }
      if (incoming.get(3)) {
        struct.SiteRevisionSetPb = new SiteRevisionSetPb();
        struct.SiteRevisionSetPb.read(iprot);
        struct.setSiteRevisionSetPbIsSet(true);
      }
      if (incoming.get(4)) {
        struct.SitePublishedPb = new SitePublishedPb();
        struct.SitePublishedPb.read(iprot);
        struct.setSitePublishedPbIsSet(true);
      }
      if (incoming.get(5)) {
        struct.SiteUnpublishedPb = new SiteUnpublishedPb();
        struct.SiteUnpublishedPb.read(iprot);
        struct.setSiteUnpublishedPbIsSet(true);
      }
      if (incoming.get(6)) {
        struct.SiteFlagAddedPb = new SiteFlagAddedPb();
        struct.SiteFlagAddedPb.read(iprot);
        struct.setSiteFlagAddedPbIsSet(true);
      }
      if (incoming.get(7)) {
        struct.SiteFlagRemovedPb = new SiteFlagRemovedPb();
        struct.SiteFlagRemovedPb.read(iprot);
        struct.setSiteFlagRemovedPbIsSet(true);
      }
      if (incoming.get(8)) {
        struct.DomainAddedPb = new DomainAddedPb();
        struct.DomainAddedPb.read(iprot);
        struct.setDomainAddedPbIsSet(true);
      }
      if (incoming.get(9)) {
        struct.DomainRemovedPb = new DomainRemovedPb();
        struct.DomainRemovedPb.read(iprot);
        struct.setDomainRemovedPbIsSet(true);
      }
      if (incoming.get(10)) {
        struct.PrimaryDomainSetPb = new PrimaryDomainSetPb();
        struct.PrimaryDomainSetPb.read(iprot);
        struct.setPrimaryDomainSetPbIsSet(true);
      }
      if (incoming.get(11)) {
        struct.DefaultMetaTagAddedPb = new DefaultMetaTagAddedPb();
        struct.DefaultMetaTagAddedPb.read(iprot);
        struct.setDefaultMetaTagAddedPbIsSet(true);
      }
      if (incoming.get(12)) {
        struct.DefaultMetaTagRemovedPb = new DefaultMetaTagRemovedPb();
        struct.DefaultMetaTagRemovedPb.read(iprot);
        struct.setDefaultMetaTagRemovedPbIsSet(true);
      }
      if (incoming.get(13)) {
        struct.PageAddedPb = new PageAddedPb();
        struct.PageAddedPb.read(iprot);
        struct.setPageAddedPbIsSet(true);
      }
      if (incoming.get(14)) {
        struct.PageRemovedPb = new PageRemovedPb();
        struct.PageRemovedPb.read(iprot);
        struct.setPageRemovedPbIsSet(true);
      }
      if (incoming.get(15)) {
        struct.PageNameSetPb = new PageNameSetPb();
        struct.PageNameSetPb.read(iprot);
        struct.setPageNameSetPbIsSet(true);
      }
      if (incoming.get(16)) {
        struct.PageMetaTagAddedPb = new PageMetaTagAddedPb();
        struct.PageMetaTagAddedPb.read(iprot);
        struct.setPageMetaTagAddedPbIsSet(true);
      }
      if (incoming.get(17)) {
        struct.PageMetaTagRemovedPb = new PageMetaTagRemovedPb();
        struct.PageMetaTagRemovedPb.read(iprot);
        struct.setPageMetaTagRemovedPbIsSet(true);
      }
      if (incoming.get(18)) {
        struct.PageComponentAddedPb = new PageComponentAddedPb();
        struct.PageComponentAddedPb.read(iprot);
        struct.setPageComponentAddedPbIsSet(true);
      }
      if (incoming.get(19)) {
        struct.PageComponentRemovedPb = new PageComponentRemovedPb();
        struct.PageComponentRemovedPb.read(iprot);
        struct.setPageComponentRemovedPbIsSet(true);
      }
      if (incoming.get(20)) {
        struct.PageComponentPositionSetPb = new PageComponentPositionSetPb();
        struct.PageComponentPositionSetPb.read(iprot);
        struct.setPageComponentPositionSetPbIsSet(true);
      }
      if (incoming.get(21)) {
        struct.PageComponentPositionResetPb = new PageComponentPositionResetPb();
        struct.PageComponentPositionResetPb.read(iprot);
        struct.setPageComponentPositionResetPbIsSet(true);
      }
      if (incoming.get(22)) {
        struct.TextComponentDataSetPb = new TextComponentDataSetPb();
        struct.TextComponentDataSetPb.read(iprot);
        struct.setTextComponentDataSetPbIsSet(true);
      }
      if (incoming.get(23)) {
        struct.ButtonComponentDataSetPb = new ButtonComponentDataSetPb();
        struct.ButtonComponentDataSetPb.read(iprot);
        struct.setButtonComponentDataSetPbIsSet(true);
      }
      if (incoming.get(24)) {
        struct.BlogComponentDataSetPb = new BlogComponentDataSetPb();
        struct.BlogComponentDataSetPb.read(iprot);
        struct.setBlogComponentDataSetPbIsSet(true);
      }
      if (incoming.get(25)) {
        struct.DomainEntryPointAddedPb = new DomainEntryPointAddedPb();
        struct.DomainEntryPointAddedPb.read(iprot);
        struct.setDomainEntryPointAddedPbIsSet(true);
      }
      if (incoming.get(26)) {
        struct.FreeEntryPointAddedPb = new FreeEntryPointAddedPb();
        struct.FreeEntryPointAddedPb.read(iprot);
        struct.setFreeEntryPointAddedPbIsSet(true);
      }
      if (incoming.get(27)) {
        struct.EntryPointRemovedPb = new EntryPointRemovedPb();
        struct.EntryPointRemovedPb.read(iprot);
        struct.setEntryPointRemovedPbIsSet(true);
      }
      if (incoming.get(28)) {
        struct.PrimaryEntryPointSetPb = new PrimaryEntryPointSetPb();
        struct.PrimaryEntryPointSetPb.read(iprot);
        struct.setPrimaryEntryPointSetPbIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

