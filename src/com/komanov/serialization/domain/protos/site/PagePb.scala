// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.komanov.serialization.domain.protos.site



@SerialVersionUID(0L)
final case class PagePb(
    name: String = "",
    path: String = "",
    metaTags: Seq[com.komanov.serialization.domain.protos.site.MetaTagPb] = Nil,
    components: Seq[com.komanov.serialization.domain.protos.site.PageComponentPb] = Nil
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[PagePb] with com.trueaccord.lenses.Updatable[PagePb] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (name != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(1, name) }
      if (path != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(2, path) }
      metaTags.foreach(metaTags => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(metaTags.serializedSize) + metaTags.serializedSize)
      components.foreach(components => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(components.serializedSize) + components.serializedSize)
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = name
        if (__v != "") {
          output.writeString(1, __v)
        }
      };
      {
        val __v = path
        if (__v != "") {
          output.writeString(2, __v)
        }
      };
      metaTags.foreach { __v => 
        output.writeTag(3, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
      components.foreach { __v => 
        output.writeTag(4, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.komanov.serialization.domain.protos.site.PagePb = {
      var __name = this.name
      var __path = this.path
      val __metaTags = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.MetaTagPb] ++= this.metaTags)
      val __components = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.PageComponentPb] ++= this.components)
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __name = __input.readString()
          case 18 =>
            __path = __input.readString()
          case 26 =>
            __metaTags += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.komanov.serialization.domain.protos.site.MetaTagPb.defaultInstance)
          case 34 =>
            __components += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.komanov.serialization.domain.protos.site.PageComponentPb.defaultInstance)
          case tag => __input.skipField(tag)
        }
      }
      com.komanov.serialization.domain.protos.site.PagePb(
          name = __name,
          path = __path,
          metaTags = __metaTags.result(),
          components = __components.result()
      )
    }
    def withName(__v: String): PagePb = copy(name = __v)
    def withPath(__v: String): PagePb = copy(path = __v)
    def clearMetaTags = copy(metaTags = Seq.empty)
    def addMetaTags(__vs: com.komanov.serialization.domain.protos.site.MetaTagPb*): PagePb = addAllMetaTags(__vs)
    def addAllMetaTags(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.MetaTagPb]): PagePb = copy(metaTags = metaTags ++ __vs)
    def withMetaTags(__v: Seq[com.komanov.serialization.domain.protos.site.MetaTagPb]): PagePb = copy(metaTags = __v)
    def clearComponents = copy(components = Seq.empty)
    def addComponents(__vs: com.komanov.serialization.domain.protos.site.PageComponentPb*): PagePb = addAllComponents(__vs)
    def addAllComponents(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.PageComponentPb]): PagePb = copy(components = components ++ __vs)
    def withComponents(__v: Seq[com.komanov.serialization.domain.protos.site.PageComponentPb]): PagePb = copy(components = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 2 => {
          val __t = path
          if (__t != "") __t else null
        }
        case 3 => metaTags
        case 4 => components
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.komanov.serialization.domain.protos.site.PagePb
}

object PagePb extends com.trueaccord.scalapb.GeneratedMessageCompanion[PagePb] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[PagePb] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.komanov.serialization.domain.protos.site.PagePb = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.komanov.serialization.domain.protos.site.PagePb(
      __fieldsMap.getOrElse(__fields.get(0), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(1), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(2), Nil).asInstanceOf[Seq[com.komanov.serialization.domain.protos.site.MetaTagPb]],
      __fieldsMap.getOrElse(__fields.get(3), Nil).asInstanceOf[Seq[com.komanov.serialization.domain.protos.site.PageComponentPb]]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = SiteProto.descriptor.getMessageTypes.get(6)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 3 => __out = com.komanov.serialization.domain.protos.site.MetaTagPb
      case 4 => __out = com.komanov.serialization.domain.protos.site.PageComponentPb
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.komanov.serialization.domain.protos.site.PagePb(
  )
  implicit class PagePbLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, PagePb]) extends com.trueaccord.lenses.ObjectLens[UpperPB, PagePb](_l) {
    def name: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def path: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.path)((c_, f_) => c_.copy(path = f_))
    def metaTags: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.MetaTagPb]] = field(_.metaTags)((c_, f_) => c_.copy(metaTags = f_))
    def components: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.PageComponentPb]] = field(_.components)((c_, f_) => c_.copy(components = f_))
  }
  final val NAME_FIELD_NUMBER = 1
  final val PATH_FIELD_NUMBER = 2
  final val METATAGS_FIELD_NUMBER = 3
  final val COMPONENTS_FIELD_NUMBER = 4
}
