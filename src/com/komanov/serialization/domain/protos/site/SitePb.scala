// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.komanov.serialization.domain.protos.site



@SerialVersionUID(0L)
final case class SitePb(
    id: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    ownerId: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    revision: Long = 0L,
    siteType: com.komanov.serialization.domain.protos.site.SiteTypePb = com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType,
    flags: Seq[com.komanov.serialization.domain.protos.site.SiteFlagPb] = Nil,
    name: String = "",
    description: String = "",
    domains: Seq[com.komanov.serialization.domain.protos.site.DomainPb] = Nil,
    defaultMetaTags: Seq[com.komanov.serialization.domain.protos.site.MetaTagPb] = Nil,
    pages: Seq[com.komanov.serialization.domain.protos.site.PagePb] = Nil,
    entryPoints: Seq[com.komanov.serialization.domain.protos.site.EntryPointPb] = Nil,
    published: Boolean = false,
    dateCreated: Long = 0L,
    dateUpdated: Long = 0L
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[SitePb] with com.trueaccord.lenses.Updatable[SitePb] {
    private[this] def flagsSerializedSize = {
    if (__flagsSerializedSizeField == 0) __flagsSerializedSizeField = 
      flags.map((com.google.protobuf.CodedOutputStream.computeEnumSizeNoTag _).compose((_: com.komanov.serialization.domain.protos.site.SiteFlagPb).value)).sum
    __flagsSerializedSizeField
    }
    @transient private[this] var __flagsSerializedSizeField: Int = 0
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (id != com.google.protobuf.ByteString.EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, id) }
      if (ownerId != com.google.protobuf.ByteString.EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, ownerId) }
      if (revision != 0L) { __size += com.google.protobuf.CodedOutputStream.computeUInt64Size(3, revision) }
      if (siteType != com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType) { __size += com.google.protobuf.CodedOutputStream.computeEnumSize(4, siteType.value) }
      if(flags.nonEmpty) {
        val __localsize = flagsSerializedSize
        __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(__localsize) + __localsize
      }
      if (name != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(6, name) }
      if (description != "") { __size += com.google.protobuf.CodedOutputStream.computeStringSize(7, description) }
      domains.foreach(domains => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(domains.serializedSize) + domains.serializedSize)
      defaultMetaTags.foreach(defaultMetaTags => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(defaultMetaTags.serializedSize) + defaultMetaTags.serializedSize)
      pages.foreach(pages => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(pages.serializedSize) + pages.serializedSize)
      entryPoints.foreach(entryPoints => __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(entryPoints.serializedSize) + entryPoints.serializedSize)
      if (published != false) { __size += com.google.protobuf.CodedOutputStream.computeBoolSize(12, published) }
      if (dateCreated != 0L) { __size += com.google.protobuf.CodedOutputStream.computeUInt64Size(13, dateCreated) }
      if (dateUpdated != 0L) { __size += com.google.protobuf.CodedOutputStream.computeUInt64Size(14, dateUpdated) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = id
        if (__v != com.google.protobuf.ByteString.EMPTY) {
          output.writeBytes(1, __v)
        }
      };
      {
        val __v = ownerId
        if (__v != com.google.protobuf.ByteString.EMPTY) {
          output.writeBytes(2, __v)
        }
      };
      {
        val __v = revision
        if (__v != 0L) {
          output.writeUInt64(3, __v)
        }
      };
      {
        val __v = siteType
        if (__v != com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType) {
          output.writeEnum(4, __v.value)
        }
      };
      if (flags.nonEmpty) {
        output.writeTag(5, 2)
        output.writeUInt32NoTag(flagsSerializedSize)
        flags.foreach((output.writeEnumNoTag _).compose((_: com.komanov.serialization.domain.protos.site.SiteFlagPb).value))
      };
      {
        val __v = name
        if (__v != "") {
          output.writeString(6, __v)
        }
      };
      {
        val __v = description
        if (__v != "") {
          output.writeString(7, __v)
        }
      };
      domains.foreach { __v => 
        output.writeTag(8, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
      defaultMetaTags.foreach { __v => 
        output.writeTag(9, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
      pages.foreach { __v => 
        output.writeTag(10, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
      entryPoints.foreach { __v => 
        output.writeTag(11, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
      {
        val __v = published
        if (__v != false) {
          output.writeBool(12, __v)
        }
      };
      {
        val __v = dateCreated
        if (__v != 0L) {
          output.writeUInt64(13, __v)
        }
      };
      {
        val __v = dateUpdated
        if (__v != 0L) {
          output.writeUInt64(14, __v)
        }
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.komanov.serialization.domain.protos.site.SitePb = {
      var __id = this.id
      var __ownerId = this.ownerId
      var __revision = this.revision
      var __siteType = this.siteType
      val __flags = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.SiteFlagPb] ++= this.flags)
      var __name = this.name
      var __description = this.description
      val __domains = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.DomainPb] ++= this.domains)
      val __defaultMetaTags = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.MetaTagPb] ++= this.defaultMetaTags)
      val __pages = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.PagePb] ++= this.pages)
      val __entryPoints = (scala.collection.immutable.Vector.newBuilder[com.komanov.serialization.domain.protos.site.EntryPointPb] ++= this.entryPoints)
      var __published = this.published
      var __dateCreated = this.dateCreated
      var __dateUpdated = this.dateUpdated
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __id = __input.readBytes()
          case 18 =>
            __ownerId = __input.readBytes()
          case 24 =>
            __revision = __input.readUInt64()
          case 32 =>
            __siteType = com.komanov.serialization.domain.protos.site.SiteTypePb.fromValue(__input.readEnum())
          case 40 =>
            __flags += com.komanov.serialization.domain.protos.site.SiteFlagPb.fromValue(__input.readEnum())
          case 42 => {
            val length = __input.readRawVarint32()
            val oldLimit = __input.pushLimit(length)
            while (__input.getBytesUntilLimit > 0) {
              __flags += com.komanov.serialization.domain.protos.site.SiteFlagPb.fromValue(__input.readEnum)
            }
            __input.popLimit(oldLimit)
          }
          case 50 =>
            __name = __input.readString()
          case 58 =>
            __description = __input.readString()
          case 66 =>
            __domains += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.komanov.serialization.domain.protos.site.DomainPb.defaultInstance)
          case 74 =>
            __defaultMetaTags += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.komanov.serialization.domain.protos.site.MetaTagPb.defaultInstance)
          case 82 =>
            __pages += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.komanov.serialization.domain.protos.site.PagePb.defaultInstance)
          case 90 =>
            __entryPoints += com.trueaccord.scalapb.LiteParser.readMessage(__input, com.komanov.serialization.domain.protos.site.EntryPointPb.defaultInstance)
          case 96 =>
            __published = __input.readBool()
          case 104 =>
            __dateCreated = __input.readUInt64()
          case 112 =>
            __dateUpdated = __input.readUInt64()
          case tag => __input.skipField(tag)
        }
      }
      com.komanov.serialization.domain.protos.site.SitePb(
          id = __id,
          ownerId = __ownerId,
          revision = __revision,
          siteType = __siteType,
          flags = __flags.result(),
          name = __name,
          description = __description,
          domains = __domains.result(),
          defaultMetaTags = __defaultMetaTags.result(),
          pages = __pages.result(),
          entryPoints = __entryPoints.result(),
          published = __published,
          dateCreated = __dateCreated,
          dateUpdated = __dateUpdated
      )
    }
    def withId(__v: com.google.protobuf.ByteString): SitePb = copy(id = __v)
    def withOwnerId(__v: com.google.protobuf.ByteString): SitePb = copy(ownerId = __v)
    def withRevision(__v: Long): SitePb = copy(revision = __v)
    def withSiteType(__v: com.komanov.serialization.domain.protos.site.SiteTypePb): SitePb = copy(siteType = __v)
    def clearFlags = copy(flags = Seq.empty)
    def addFlags(__vs: com.komanov.serialization.domain.protos.site.SiteFlagPb*): SitePb = addAllFlags(__vs)
    def addAllFlags(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.SiteFlagPb]): SitePb = copy(flags = flags ++ __vs)
    def withFlags(__v: Seq[com.komanov.serialization.domain.protos.site.SiteFlagPb]): SitePb = copy(flags = __v)
    def withName(__v: String): SitePb = copy(name = __v)
    def withDescription(__v: String): SitePb = copy(description = __v)
    def clearDomains = copy(domains = Seq.empty)
    def addDomains(__vs: com.komanov.serialization.domain.protos.site.DomainPb*): SitePb = addAllDomains(__vs)
    def addAllDomains(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.DomainPb]): SitePb = copy(domains = domains ++ __vs)
    def withDomains(__v: Seq[com.komanov.serialization.domain.protos.site.DomainPb]): SitePb = copy(domains = __v)
    def clearDefaultMetaTags = copy(defaultMetaTags = Seq.empty)
    def addDefaultMetaTags(__vs: com.komanov.serialization.domain.protos.site.MetaTagPb*): SitePb = addAllDefaultMetaTags(__vs)
    def addAllDefaultMetaTags(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.MetaTagPb]): SitePb = copy(defaultMetaTags = defaultMetaTags ++ __vs)
    def withDefaultMetaTags(__v: Seq[com.komanov.serialization.domain.protos.site.MetaTagPb]): SitePb = copy(defaultMetaTags = __v)
    def clearPages = copy(pages = Seq.empty)
    def addPages(__vs: com.komanov.serialization.domain.protos.site.PagePb*): SitePb = addAllPages(__vs)
    def addAllPages(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.PagePb]): SitePb = copy(pages = pages ++ __vs)
    def withPages(__v: Seq[com.komanov.serialization.domain.protos.site.PagePb]): SitePb = copy(pages = __v)
    def clearEntryPoints = copy(entryPoints = Seq.empty)
    def addEntryPoints(__vs: com.komanov.serialization.domain.protos.site.EntryPointPb*): SitePb = addAllEntryPoints(__vs)
    def addAllEntryPoints(__vs: TraversableOnce[com.komanov.serialization.domain.protos.site.EntryPointPb]): SitePb = copy(entryPoints = entryPoints ++ __vs)
    def withEntryPoints(__v: Seq[com.komanov.serialization.domain.protos.site.EntryPointPb]): SitePb = copy(entryPoints = __v)
    def withPublished(__v: Boolean): SitePb = copy(published = __v)
    def withDateCreated(__v: Long): SitePb = copy(dateCreated = __v)
    def withDateUpdated(__v: Long): SitePb = copy(dateUpdated = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = id
          if (__t != com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = ownerId
          if (__t != com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = revision
          if (__t != 0L) __t else null
        }
        case 4 => {
          val __t = siteType.valueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
        case 5 => flags.map(_.valueDescriptor)
        case 6 => {
          val __t = name
          if (__t != "") __t else null
        }
        case 7 => {
          val __t = description
          if (__t != "") __t else null
        }
        case 8 => domains
        case 9 => defaultMetaTags
        case 10 => pages
        case 11 => entryPoints
        case 12 => {
          val __t = published
          if (__t != false) __t else null
        }
        case 13 => {
          val __t = dateCreated
          if (__t != 0L) __t else null
        }
        case 14 => {
          val __t = dateUpdated
          if (__t != 0L) __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.komanov.serialization.domain.protos.site.SitePb
}

object SitePb extends com.trueaccord.scalapb.GeneratedMessageCompanion[SitePb] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[SitePb] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.komanov.serialization.domain.protos.site.SitePb = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.komanov.serialization.domain.protos.site.SitePb(
      __fieldsMap.getOrElse(__fields.get(0), com.google.protobuf.ByteString.EMPTY).asInstanceOf[com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(1), com.google.protobuf.ByteString.EMPTY).asInstanceOf[com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[Long],
      com.komanov.serialization.domain.protos.site.SiteTypePb.fromValue(__fieldsMap.getOrElse(__fields.get(3), com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType.valueDescriptor).asInstanceOf[com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber),
      __fieldsMap.getOrElse(__fields.get(4), Nil).asInstanceOf[Seq[com.google.protobuf.Descriptors.EnumValueDescriptor]].map(__e => com.komanov.serialization.domain.protos.site.SiteFlagPb.fromValue(__e.getNumber)),
      __fieldsMap.getOrElse(__fields.get(5), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(6), "").asInstanceOf[String],
      __fieldsMap.getOrElse(__fields.get(7), Nil).asInstanceOf[Seq[com.komanov.serialization.domain.protos.site.DomainPb]],
      __fieldsMap.getOrElse(__fields.get(8), Nil).asInstanceOf[Seq[com.komanov.serialization.domain.protos.site.MetaTagPb]],
      __fieldsMap.getOrElse(__fields.get(9), Nil).asInstanceOf[Seq[com.komanov.serialization.domain.protos.site.PagePb]],
      __fieldsMap.getOrElse(__fields.get(10), Nil).asInstanceOf[Seq[com.komanov.serialization.domain.protos.site.EntryPointPb]],
      __fieldsMap.getOrElse(__fields.get(11), false).asInstanceOf[Boolean],
      __fieldsMap.getOrElse(__fields.get(12), 0L).asInstanceOf[Long],
      __fieldsMap.getOrElse(__fields.get(13), 0L).asInstanceOf[Long]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = SiteProto.descriptor.getMessageTypes.get(7)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 8 => __out = com.komanov.serialization.domain.protos.site.DomainPb
      case 9 => __out = com.komanov.serialization.domain.protos.site.MetaTagPb
      case 10 => __out = com.komanov.serialization.domain.protos.site.PagePb
      case 11 => __out = com.komanov.serialization.domain.protos.site.EntryPointPb
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    __field.getNumber match {
      case 4 => com.komanov.serialization.domain.protos.site.SiteTypePb
      case 5 => com.komanov.serialization.domain.protos.site.SiteFlagPb
    }
  }
  lazy val defaultInstance = com.komanov.serialization.domain.protos.site.SitePb(
  )
  implicit class SitePbLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, SitePb]) extends com.trueaccord.lenses.ObjectLens[UpperPB, SitePb](_l) {
    def id: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def ownerId: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.ownerId)((c_, f_) => c_.copy(ownerId = f_))
    def revision: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.revision)((c_, f_) => c_.copy(revision = f_))
    def siteType: com.trueaccord.lenses.Lens[UpperPB, com.komanov.serialization.domain.protos.site.SiteTypePb] = field(_.siteType)((c_, f_) => c_.copy(siteType = f_))
    def flags: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.SiteFlagPb]] = field(_.flags)((c_, f_) => c_.copy(flags = f_))
    def name: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.name)((c_, f_) => c_.copy(name = f_))
    def description: com.trueaccord.lenses.Lens[UpperPB, String] = field(_.description)((c_, f_) => c_.copy(description = f_))
    def domains: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.DomainPb]] = field(_.domains)((c_, f_) => c_.copy(domains = f_))
    def defaultMetaTags: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.MetaTagPb]] = field(_.defaultMetaTags)((c_, f_) => c_.copy(defaultMetaTags = f_))
    def pages: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.PagePb]] = field(_.pages)((c_, f_) => c_.copy(pages = f_))
    def entryPoints: com.trueaccord.lenses.Lens[UpperPB, Seq[com.komanov.serialization.domain.protos.site.EntryPointPb]] = field(_.entryPoints)((c_, f_) => c_.copy(entryPoints = f_))
    def published: com.trueaccord.lenses.Lens[UpperPB, Boolean] = field(_.published)((c_, f_) => c_.copy(published = f_))
    def dateCreated: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.dateCreated)((c_, f_) => c_.copy(dateCreated = f_))
    def dateUpdated: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.dateUpdated)((c_, f_) => c_.copy(dateUpdated = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val OWNERID_FIELD_NUMBER = 2
  final val REVISION_FIELD_NUMBER = 3
  final val SITETYPE_FIELD_NUMBER = 4
  final val FLAGS_FIELD_NUMBER = 5
  final val NAME_FIELD_NUMBER = 6
  final val DESCRIPTION_FIELD_NUMBER = 7
  final val DOMAINS_FIELD_NUMBER = 8
  final val DEFAULTMETATAGS_FIELD_NUMBER = 9
  final val PAGES_FIELD_NUMBER = 10
  final val ENTRYPOINTS_FIELD_NUMBER = 11
  final val PUBLISHED_FIELD_NUMBER = 12
  final val DATECREATED_FIELD_NUMBER = 13
  final val DATEUPDATED_FIELD_NUMBER = 14
}
