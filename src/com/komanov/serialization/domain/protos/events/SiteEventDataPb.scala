// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.komanov.serialization.domain.protos.events



@SerialVersionUID(0L)
final case class SiteEventDataPb(
    id: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    ev: scala.Option[com.komanov.serialization.domain.protos.events.SiteEventPb] = None,
    timestamp: Long = 0L
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[SiteEventDataPb] with com.trueaccord.lenses.Updatable[SiteEventDataPb] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (id != com.google.protobuf.ByteString.EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, id) }
      if (ev.isDefined) { __size += 1 + com.google.protobuf.CodedOutputStream.computeUInt32SizeNoTag(ev.get.serializedSize) + ev.get.serializedSize }
      if (timestamp != 0L) { __size += com.google.protobuf.CodedOutputStream.computeUInt64Size(3, timestamp) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = id
        if (__v != com.google.protobuf.ByteString.EMPTY) {
          output.writeBytes(1, __v)
        }
      };
      ev.foreach { __v => 
        output.writeTag(2, 2)
        output.writeUInt32NoTag(__v.serializedSize)
        __v.writeTo(output)
      };
      {
        val __v = timestamp
        if (__v != 0L) {
          output.writeUInt64(3, __v)
        }
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.komanov.serialization.domain.protos.events.SiteEventDataPb = {
      var __id = this.id
      var __ev = this.ev
      var __timestamp = this.timestamp
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __id = __input.readBytes()
          case 18 =>
            __ev = Some(com.trueaccord.scalapb.LiteParser.readMessage(__input, __ev.getOrElse(com.komanov.serialization.domain.protos.events.SiteEventPb.defaultInstance)))
          case 24 =>
            __timestamp = __input.readUInt64()
          case tag => __input.skipField(tag)
        }
      }
      com.komanov.serialization.domain.protos.events.SiteEventDataPb(
          id = __id,
          ev = __ev,
          timestamp = __timestamp
      )
    }
    def withId(__v: com.google.protobuf.ByteString): SiteEventDataPb = copy(id = __v)
    def getEv: com.komanov.serialization.domain.protos.events.SiteEventPb = ev.getOrElse(com.komanov.serialization.domain.protos.events.SiteEventPb.defaultInstance)
    def clearEv: SiteEventDataPb = copy(ev = None)
    def withEv(__v: com.komanov.serialization.domain.protos.events.SiteEventPb): SiteEventDataPb = copy(ev = Some(__v))
    def withTimestamp(__v: Long): SiteEventDataPb = copy(timestamp = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = id
          if (__t != com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => ev.getOrElse(null)
        case 3 => {
          val __t = timestamp
          if (__t != 0L) __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.komanov.serialization.domain.protos.events.SiteEventDataPb
}

object SiteEventDataPb extends com.trueaccord.scalapb.GeneratedMessageCompanion[SiteEventDataPb] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[SiteEventDataPb] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.komanov.serialization.domain.protos.events.SiteEventDataPb = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.komanov.serialization.domain.protos.events.SiteEventDataPb(
      __fieldsMap.getOrElse(__fields.get(0), com.google.protobuf.ByteString.EMPTY).asInstanceOf[com.google.protobuf.ByteString],
      __fieldsMap.get(__fields.get(1)).asInstanceOf[scala.Option[com.komanov.serialization.domain.protos.events.SiteEventPb]],
      __fieldsMap.getOrElse(__fields.get(2), 0L).asInstanceOf[Long]
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = EventsProto.descriptor.getMessageTypes.get(30)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    var __out: com.trueaccord.scalapb.GeneratedMessageCompanion[_] = null
    __field.getNumber match {
      case 2 => __out = com.komanov.serialization.domain.protos.events.SiteEventPb
    }
  __out
  }
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = throw new MatchError(__field)
  lazy val defaultInstance = com.komanov.serialization.domain.protos.events.SiteEventDataPb(
  )
  implicit class SiteEventDataPbLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, SiteEventDataPb]) extends com.trueaccord.lenses.ObjectLens[UpperPB, SiteEventDataPb](_l) {
    def id: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def ev: com.trueaccord.lenses.Lens[UpperPB, com.komanov.serialization.domain.protos.events.SiteEventPb] = field(_.getEv)((c_, f_) => c_.copy(ev = Some(f_)))
    def optionalEv: com.trueaccord.lenses.Lens[UpperPB, scala.Option[com.komanov.serialization.domain.protos.events.SiteEventPb]] = field(_.ev)((c_, f_) => c_.copy(ev = f_))
    def timestamp: com.trueaccord.lenses.Lens[UpperPB, Long] = field(_.timestamp)((c_, f_) => c_.copy(timestamp = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val EV_FIELD_NUMBER = 2
  final val TIMESTAMP_FIELD_NUMBER = 3
}
