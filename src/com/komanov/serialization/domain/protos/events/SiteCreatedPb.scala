// Generated by the Scala Plugin for the Protocol Buffer Compiler.
// Do not edit!
//
// Protofile syntax: PROTO3

package com.komanov.serialization.domain.protos.events



@SerialVersionUID(0L)
final case class SiteCreatedPb(
    id: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    ownerId: com.google.protobuf.ByteString = com.google.protobuf.ByteString.EMPTY,
    siteType: com.komanov.serialization.domain.protos.site.SiteTypePb = com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType
    ) extends com.trueaccord.scalapb.GeneratedMessage with com.trueaccord.scalapb.Message[SiteCreatedPb] with com.trueaccord.lenses.Updatable[SiteCreatedPb] {
    @transient
    private[this] var __serializedSizeCachedValue: Int = 0
    private[this] def __computeSerializedValue(): Int = {
      var __size = 0
      if (id != com.google.protobuf.ByteString.EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(1, id) }
      if (ownerId != com.google.protobuf.ByteString.EMPTY) { __size += com.google.protobuf.CodedOutputStream.computeBytesSize(2, ownerId) }
      if (siteType != com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType) { __size += com.google.protobuf.CodedOutputStream.computeEnumSize(3, siteType.value) }
      __size
    }
    final override def serializedSize: Int = {
      var read = __serializedSizeCachedValue
      if (read == 0) {
        read = __computeSerializedValue()
        __serializedSizeCachedValue = read
      }
      read
    }
    def writeTo(output: com.google.protobuf.CodedOutputStream): Unit = {
      {
        val __v = id
        if (__v != com.google.protobuf.ByteString.EMPTY) {
          output.writeBytes(1, __v)
        }
      };
      {
        val __v = ownerId
        if (__v != com.google.protobuf.ByteString.EMPTY) {
          output.writeBytes(2, __v)
        }
      };
      {
        val __v = siteType
        if (__v != com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType) {
          output.writeEnum(3, __v.value)
        }
      };
    }
    def mergeFrom(__input: com.google.protobuf.CodedInputStream): com.komanov.serialization.domain.protos.events.SiteCreatedPb = {
      var __id = this.id
      var __ownerId = this.ownerId
      var __siteType = this.siteType
      var _done__ = false
      while (!_done__) {
        val _tag__ = __input.readTag()
        _tag__ match {
          case 0 => _done__ = true
          case 10 =>
            __id = __input.readBytes()
          case 18 =>
            __ownerId = __input.readBytes()
          case 24 =>
            __siteType = com.komanov.serialization.domain.protos.site.SiteTypePb.fromValue(__input.readEnum())
          case tag => __input.skipField(tag)
        }
      }
      com.komanov.serialization.domain.protos.events.SiteCreatedPb(
          id = __id,
          ownerId = __ownerId,
          siteType = __siteType
      )
    }
    def withId(__v: com.google.protobuf.ByteString): SiteCreatedPb = copy(id = __v)
    def withOwnerId(__v: com.google.protobuf.ByteString): SiteCreatedPb = copy(ownerId = __v)
    def withSiteType(__v: com.komanov.serialization.domain.protos.site.SiteTypePb): SiteCreatedPb = copy(siteType = __v)
    def getField(__field: com.google.protobuf.Descriptors.FieldDescriptor): scala.Any = {
      __field.getNumber match {
        case 1 => {
          val __t = id
          if (__t != com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 2 => {
          val __t = ownerId
          if (__t != com.google.protobuf.ByteString.EMPTY) __t else null
        }
        case 3 => {
          val __t = siteType.valueDescriptor
          if (__t.getNumber() != 0) __t else null
        }
      }
    }
    override def toString: String = com.trueaccord.scalapb.TextFormat.printToUnicodeString(this)
    def companion = com.komanov.serialization.domain.protos.events.SiteCreatedPb
}

object SiteCreatedPb extends com.trueaccord.scalapb.GeneratedMessageCompanion[SiteCreatedPb] {
  implicit def messageCompanion: com.trueaccord.scalapb.GeneratedMessageCompanion[SiteCreatedPb] = this
  def fromFieldsMap(__fieldsMap: Map[com.google.protobuf.Descriptors.FieldDescriptor, scala.Any]): com.komanov.serialization.domain.protos.events.SiteCreatedPb = {
    require(__fieldsMap.keys.forall(_.getContainingType() == descriptor), "FieldDescriptor does not match message type.")
    val __fields = descriptor.getFields
    com.komanov.serialization.domain.protos.events.SiteCreatedPb(
      __fieldsMap.getOrElse(__fields.get(0), com.google.protobuf.ByteString.EMPTY).asInstanceOf[com.google.protobuf.ByteString],
      __fieldsMap.getOrElse(__fields.get(1), com.google.protobuf.ByteString.EMPTY).asInstanceOf[com.google.protobuf.ByteString],
      com.komanov.serialization.domain.protos.site.SiteTypePb.fromValue(__fieldsMap.getOrElse(__fields.get(2), com.komanov.serialization.domain.protos.site.SiteTypePb.UnknownSiteType.valueDescriptor).asInstanceOf[com.google.protobuf.Descriptors.EnumValueDescriptor].getNumber)
    )
  }
  def descriptor: com.google.protobuf.Descriptors.Descriptor = EventsProto.descriptor.getMessageTypes.get(0)
  def messageCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedMessageCompanion[_] = throw new MatchError(__field)
  def enumCompanionForField(__field: com.google.protobuf.Descriptors.FieldDescriptor): com.trueaccord.scalapb.GeneratedEnumCompanion[_] = {
    require(__field.getContainingType() == descriptor, "FieldDescriptor does not match message type.")
    __field.getNumber match {
      case 3 => com.komanov.serialization.domain.protos.site.SiteTypePb
    }
  }
  lazy val defaultInstance = com.komanov.serialization.domain.protos.events.SiteCreatedPb(
  )
  implicit class SiteCreatedPbLens[UpperPB](_l: com.trueaccord.lenses.Lens[UpperPB, SiteCreatedPb]) extends com.trueaccord.lenses.ObjectLens[UpperPB, SiteCreatedPb](_l) {
    def id: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.id)((c_, f_) => c_.copy(id = f_))
    def ownerId: com.trueaccord.lenses.Lens[UpperPB, com.google.protobuf.ByteString] = field(_.ownerId)((c_, f_) => c_.copy(ownerId = f_))
    def siteType: com.trueaccord.lenses.Lens[UpperPB, com.komanov.serialization.domain.protos.site.SiteTypePb] = field(_.siteType)((c_, f_) => c_.copy(siteType = f_))
  }
  final val ID_FIELD_NUMBER = 1
  final val OWNERID_FIELD_NUMBER = 2
  final val SITETYPE_FIELD_NUMBER = 3
}
