package com.komanov.jwt.base64.jmh

import com.komanov.jmh.BenchmarkBase
import com.komanov.jwt.base64.Base64Helper.Jdk
import com.komanov.jwt.base64.PayloadGenerator
import org.openjdk.jmh.annotations._

import java.nio.charset.StandardCharsets

@State(Scope.Benchmark)
class Base64BenchmarkBase extends BenchmarkBase {

  @Param(Array("1", "10", "50", "100", "500", "1000", "10000"))
  var length: Int = 0
  @Param(Array("fixed", "random"))
  var dataset: String = _

  protected var data: Array[Byte] = _
  protected var encoded: Array[Byte] = _
  protected var urlEncoded: Array[Byte] = _

  @Setup
  def setup(): Unit = {
    data = (if (dataset == "fixed") Base64BenchmarkBase.fixedValues(length) else PayloadGenerator(length)).getBytes(StandardCharsets.US_ASCII)
    encoded = Jdk.encode(data)
    urlEncoded = Jdk.encodeUrlSafe(data)
  }
}

private object Base64BenchmarkBase {
  // Just randomly generated fixed values to avoid variations.
  val fixedValues: Map[Int, String] = Map(
    1 -> "p",
    10 -> "63j4QyUZCx",
    50 -> "9BZ6Yi8bIMht9EhVweiLwGUMX5DqJBhYk0WY6o0hgPZ5LbKYgz",
    100 -> "yPZYyDLScw3DWUn4RsF5RuBMAih1kpTYIUAPGWjbaVWsJ1WeGleItBz9ACMfEH5quSGKfZcgJkgFs0dF5WLs8byyWONyZkUmyF0A",
    500 -> "Mv1OIj9kuvcWOQMlZwgYEbWULylcCwCfUBaJUI4jkq69jUmNIlO1uIDFPTxSMSSgkFD3h5chvBUJmScTGIvzW4GBHxqEJdFGtuxrL9U0UwqxfBTRLeJJsFRmsWkCYN6ck80xV7as4Lv1r29JM0KqSgAAwgEzlSpv4sZfwBqz6nX7DDs3vwxzu4yvw2u6PzbrwQ6qkfKTEu2LjXLtP3OQtkqdZo34VDS62zRIxG8WII3SCEVnjGLATrYCqsRxlCNRFQ5hb280RJYCmeJn6noI7vwkmqiZKkj9Zti1r41Bd9qDVX3nrmxizvrLQbJqIsaf3CXvcjIMPVJaO9Z3pEYe7jSLzpmNjADWz85VAZjF1RdZvNDxJAdKStwbgyWhNLMk8bgpABmiwJ5YtPgtAeb6C5R18MIn0YtZYXS22JAySPCJSKYBjzhzslrJUTiXG3FK943CExiGurSZuXTrpJaZdKX2dgc5TfrweskbA7J0xRZlPtZ5RtXR",
    1000 -> "Jemfj4kTXbyUp7S6E3rFMCK5fd5wpnzdmEMyPPv9820FmgxXqIk2sUVuEHHykY63wVxgVYiSonP1QfFKKSBSmJ9LxAiBm3CkDeYEO3X3PHAlAVgIKYl0JUyzElioISywV6OfmnCmZHik2xnTy3Aio6wLytIOaDVFWvU2CA5xEjUcMAVLGiEEqLAynpvjvFNJyMKd1HZETsuIbQCnQmmry45LdnRCMGI4ny2eyT93I70vFf4fmH5iVlbejw7em4l1MvD4L5pLe6V7w9M3om3gtqmDzK1CUBgDkKigeS9EcmWf5k17OazC3gVmoPx7JLRQxx77o2WkWhZY4C5fNB0SX3UR7tKh2KJw8fkiGyJQRvcCGFWHNmAuOsQVqURS6iLRl0plyow8efsIjZi9rxLRyidzvb9DKuLfzK0XkM5lD84ZeViSNZWpObH0UicELCT1wUjLXub1sOMHHzhdIqyk1PhkWQcd0wstjSVtgegGpLTfnpdvIczEgjDVucpmzn6Ty9rUUHsCsHuIhOmytpMUYBY3jAZYxGLSttbAbxwnNdzw0cPaFwIN69HNCb0801Yggql4WS06kCEaxNxhInL6fHlWjI9XpnOsbfNzLOJ5hsU7lLWZ0fdZ05tjOyaFuw3qWcFPJ1IbwVEuZyIf1B3zQRa23QM7cLv8xsvAiuJAg7wJY4PQXquD68qtRT4ELO1zUrw2V7a0VHLZPZONEIKHhKn8ySMkVAMgxGbnPY1wKOwLiuKEr6AUMBJOhjV4NSIWo4AHhRvKRoFBoNVFbVz1698VqpZv6GJgMZbjG6t4bnWQbAdMAW5vJiKLULeZT4577MHPf9XeSEwpmhlObwmaeZdttwMzjaBK2yfHRX17wrOo7Gp21uvaOQSbxnnOF8clvm0y1O07pJsgpybLsEJ901b1E2dYAhKgbbU1KM8wT5BuMHSN9Jc1qyebE0ZQ4ZR8IM5EvxlhavTcQbZa8lEbbtO0580jNWPcxaS8RXTG",
    10000 -> "",
  )
}
