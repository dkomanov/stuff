# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 0.00% complete, ETA 02:10:40
# Fork: 1 of 1
# Warmup Iteration   1: 3.081 ns/op
Iteration   1: 3.221 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.221 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 0.26% complete, ETA 02:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 21.042 ns/op
Iteration   1: 21.226 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21.226 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 0.51% complete, ETA 02:14:04
# Fork: 1 of 1
# Warmup Iteration   1: 221.266 ns/op
Iteration   1: 219.765 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  219.765 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 0.77% complete, ETA 02:13:30
# Fork: 1 of 1
# Warmup Iteration   1: 2078.308 ns/op
Iteration   1: 2241.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2241.151 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 1.02% complete, ETA 02:12:58
# Fork: 1 of 1
# Warmup Iteration   1: 22112.744 ns/op
Iteration   1: 22334.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22334.151 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 1.28% complete, ETA 02:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 224031.760 ns/op
Iteration   1: 226106.203 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  226106.203 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 1.53% complete, ETA 02:14:15
# Fork: 1 of 1
# Warmup Iteration   1: 2385840.890 ns/op
Iteration   1: 2252175.412 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2252175.412 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 1.79% complete, ETA 02:25:54
# Fork: 1 of 1
# Warmup Iteration   1: 15.405 ns/op
Iteration   1: 15.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  15.090 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 2.04% complete, ETA 02:23:40
# Fork: 1 of 1
# Warmup Iteration   1: 145.020 ns/op
Iteration   1: 145.519 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  145.519 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 2.30% complete, ETA 02:21:53
# Fork: 1 of 1
# Warmup Iteration   1: 1384.068 ns/op
Iteration   1: 1379.295 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1379.295 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 2.55% complete, ETA 02:20:22
# Fork: 1 of 1
# Warmup Iteration   1: 13975.601 ns/op
Iteration   1: 13986.726 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  13986.726 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 2.81% complete, ETA 02:19:06
# Fork: 1 of 1
# Warmup Iteration   1: 139171.692 ns/op
Iteration   1: 141393.117 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  141393.117 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 3.06% complete, ETA 02:18:05
# Fork: 1 of 1
# Warmup Iteration   1: 1409809.369 ns/op
Iteration   1: 1361345.402 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1361345.402 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 3.32% complete, ETA 02:17:48
# Fork: 1 of 1
# Warmup Iteration   1: 14811016.127 ns/op
Iteration   1: 16691269.623 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  16691269.623 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 3.57% complete, ETA 02:22:52
# Fork: 1 of 1
# Warmup Iteration   1: 46.002 ns/op
Iteration   1: 45.962 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  45.962 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 3.83% complete, ETA 02:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 448.338 ns/op
Iteration   1: 447.850 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  447.850 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 4.08% complete, ETA 02:20:21
# Fork: 1 of 1
# Warmup Iteration   1: 4513.494 ns/op
Iteration   1: 4426.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  4426.151 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 4.34% complete, ETA 02:19:17
# Fork: 1 of 1
# Warmup Iteration   1: 44459.958 ns/op
Iteration   1: 44581.702 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  44581.702 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 4.59% complete, ETA 02:18:17
# Fork: 1 of 1
# Warmup Iteration   1: 443004.097 ns/op
Iteration   1: 452141.284 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  452141.284 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 4.85% complete, ETA 02:17:26
# Fork: 1 of 1
# Warmup Iteration   1: 4527608.998 ns/op
Iteration   1: 4471422.235 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  4471422.235 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 5.10% complete, ETA 02:17:00
# Fork: 1 of 1
# Warmup Iteration   1: 44689492.839 ns/op
Iteration   1: 44603087.391 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  44603087.391 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 5.36% complete, ETA 02:20:07
# Fork: 1 of 1
# Warmup Iteration   1: 104.179 ns/op
Iteration   1: 104.229 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  104.229 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 5.61% complete, ETA 02:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 1032.115 ns/op
Iteration   1: 1030.290 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1030.290 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 5.87% complete, ETA 02:18:11
# Fork: 1 of 1
# Warmup Iteration   1: 10167.124 ns/op
Iteration   1: 9978.718 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  9978.718 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 6.12% complete, ETA 02:17:18
# Fork: 1 of 1
# Warmup Iteration   1: 102768.045 ns/op
Iteration   1: 102231.430 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  102231.430 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 6.38% complete, ETA 02:16:27
# Fork: 1 of 1
# Warmup Iteration   1: 1032691.925 ns/op
Iteration   1: 999713.707 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  999713.707 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 6.63% complete, ETA 02:15:43
# Fork: 1 of 1
# Warmup Iteration   1: 10321187.585 ns/op
Iteration   1: 10307630.912 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  10307630.912 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 6.89% complete, ETA 02:15:16
# Fork: 1 of 1
# Warmup Iteration   1: 103876784.309 ns/op
Iteration   1: 103937041.557 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  103937041.557 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 7.14% complete, ETA 02:17:28
# Fork: 1 of 1
# Warmup Iteration   1: 215.301 ns/op
Iteration   1: 215.004 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  215.004 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 7.40% complete, ETA 02:16:37
# Fork: 1 of 1
# Warmup Iteration   1: 2141.642 ns/op
Iteration   1: 2138.883 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2138.883 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 7.65% complete, ETA 02:15:49
# Fork: 1 of 1
# Warmup Iteration   1: 21469.734 ns/op
Iteration   1: 21387.156 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21387.156 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 7.91% complete, ETA 02:15:02
# Fork: 1 of 1
# Warmup Iteration   1: 213620.812 ns/op
Iteration   1: 214272.532 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  214272.532 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 8.16% complete, ETA 02:14:18
# Fork: 1 of 1
# Warmup Iteration   1: 2137990.708 ns/op
Iteration   1: 2135027.335 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2135027.335 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 8.42% complete, ETA 02:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 21426590.653 ns/op
Iteration   1: 21380517.647 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21380517.647 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 8.67% complete, ETA 02:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 213608297.298 ns/op
Iteration   1: 213504175.383 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213504175.383 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 8.93% complete, ETA 02:14:46
# Fork: 1 of 1
# Warmup Iteration   1: 549.513 ns/op
Iteration   1: 546.486 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  546.486 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 9.18% complete, ETA 02:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 5458.360 ns/op
Iteration   1: 5453.106 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  5453.106 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 9.44% complete, ETA 02:13:18
# Fork: 1 of 1
# Warmup Iteration   1: 54709.610 ns/op
Iteration   1: 54553.627 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  54553.627 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 9.69% complete, ETA 02:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 545816.410 ns/op
Iteration   1: 546365.737 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  546365.737 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 9.95% complete, ETA 02:11:56
# Fork: 1 of 1
# Warmup Iteration   1: 5465431.398 ns/op
Iteration   1: 5455845.197 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  5455845.197 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 10.20% complete, ETA 02:11:18
# Fork: 1 of 1
# Warmup Iteration   1: 54966874.698 ns/op
Iteration   1: 54601290.332 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  54601290.332 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 10.46% complete, ETA 02:10:52
# Fork: 1 of 1
# Warmup Iteration   1: 549818202.737 ns/op
Iteration   1: 545780566.789 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  545780566.789 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 10.71% complete, ETA 02:12:12
# Fork: 1 of 1
# Warmup Iteration   1: 1100.184 ns/op
Iteration   1: 1101.564 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1101.564 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 10.97% complete, ETA 02:11:31
# Fork: 1 of 1
# Warmup Iteration   1: 11018.089 ns/op
Iteration   1: 10996.569 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  10996.569 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 11.22% complete, ETA 02:10:51
# Fork: 1 of 1
# Warmup Iteration   1: 110244.842 ns/op
Iteration   1: 109851.434 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  109851.434 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 11.48% complete, ETA 02:10:13
# Fork: 1 of 1
# Warmup Iteration   1: 1100326.471 ns/op
Iteration   1: 1098250.543 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1098250.543 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 11.73% complete, ETA 02:09:35
# Fork: 1 of 1
# Warmup Iteration   1: 10984057.113 ns/op
Iteration   1: 11045999.832 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  11045999.832 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 11.99% complete, ETA 02:09:00
# Fork: 1 of 1
# Warmup Iteration   1: 109919520.967 ns/op
Iteration   1: 109810414.641 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  109810414.641 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 12.24% complete, ETA 02:08:34
# Fork: 1 of 1
# Warmup Iteration   1: 1105209649.600 ns/op
Iteration   1: 1099521143.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1099521143.000 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 12.50% complete, ETA 02:09:46
# Fork: 1 of 1
# Warmup Iteration   1: 2208.936 ns/op
Iteration   1: 2210.813 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2210.813 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 12.76% complete, ETA 02:09:08
# Fork: 1 of 1
# Warmup Iteration   1: 22103.492 ns/op
Iteration   1: 22093.356 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22093.356 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 13.01% complete, ETA 02:08:30
# Fork: 1 of 1
# Warmup Iteration   1: 221842.744 ns/op
Iteration   1: 221537.722 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  221537.722 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 13.27% complete, ETA 02:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 2212687.936 ns/op
Iteration   1: 2213457.679 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2213457.679 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 13.52% complete, ETA 02:07:18
# Fork: 1 of 1
# Warmup Iteration   1: 22091321.715 ns/op
Iteration   1: 22055543.467 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22055543.467 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 13.78% complete, ETA 02:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 220967623.848 ns/op
Iteration   1: 220907767.130 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  220907767.130 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 14.03% complete, ETA 02:06:20
# Fork: 1 of 1
# Warmup Iteration   1: 2208586613.200 ns/op
Iteration   1: 2221422284.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2221422284.800 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 14.29% complete, ETA 02:07:19
# Fork: 1 of 1
# Warmup Iteration   1: 45346.295 ns/op
Iteration   1: 43821.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  43821.800 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 14.54% complete, ETA 02:06:43
# Fork: 1 of 1
# Warmup Iteration   1: 50692.619 ns/op
Iteration   1: 50931.453 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  50931.453 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 14.80% complete, ETA 02:06:07
# Fork: 1 of 1
# Warmup Iteration   1: 69720.589 ns/op
Iteration   1: 69194.187 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  69194.187 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 15.05% complete, ETA 02:05:32
# Fork: 1 of 1
# Warmup Iteration   1: 238240.469 ns/op
Iteration   1: 226415.812 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  226415.812 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 15.31% complete, ETA 02:04:58
# Fork: 1 of 1
# Warmup Iteration   1: 2356122.936 ns/op
Iteration   1: 2266682.677 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2266682.677 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 15.56% complete, ETA 02:04:25
# Fork: 1 of 1
# Warmup Iteration   1: 24619468.639 ns/op
Iteration   1: 23489250.643 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  23489250.643 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 15.82% complete, ETA 02:04:00
# Fork: 1 of 1
# Warmup Iteration   1: 404143735.160 ns/op
Iteration   1: 334488935.100 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  334488935.100 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 16.07% complete, ETA 02:04:37
# Fork: 1 of 1
# Warmup Iteration   1: 47036.833 ns/op
Iteration   1: 45248.149 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  45248.149 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 16.33% complete, ETA 02:04:02
# Fork: 1 of 1
# Warmup Iteration   1: 50976.825 ns/op
Iteration   1: 51415.622 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  51415.622 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 16.58% complete, ETA 02:03:28
# Fork: 1 of 1
# Warmup Iteration   1: 69726.254 ns/op
Iteration   1: 70929.151 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  70929.151 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 16.84% complete, ETA 02:02:54
# Fork: 1 of 1
# Warmup Iteration   1: 249416.791 ns/op
Iteration   1: 240711.007 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  240711.007 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 17.09% complete, ETA 02:02:21
# Fork: 1 of 1
# Warmup Iteration   1: 2511099.811 ns/op
Iteration   1: 2415892.368 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2415892.368 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 17.35% complete, ETA 02:01:50
# Fork: 1 of 1
# Warmup Iteration   1: 26466048.085 ns/op
Iteration   1: 25601033.921 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  25601033.921 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 17.60% complete, ETA 02:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 415931628.640 ns/op
Iteration   1: 349899497.931 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  349899497.931 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 17.86% complete, ETA 02:01:57
# Fork: 1 of 1
# Warmup Iteration   1: 46601.003 ns/op
Iteration   1: 45215.437 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  45215.437 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 18.11% complete, ETA 02:01:24
# Fork: 1 of 1
# Warmup Iteration   1: 47414.737 ns/op
Iteration   1: 48492.729 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  48492.729 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 18.37% complete, ETA 02:00:51
# Fork: 1 of 1
# Warmup Iteration   1: 76609.923 ns/op
Iteration   1: 75819.259 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  75819.259 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 18.62% complete, ETA 02:00:18
# Fork: 1 of 1
# Warmup Iteration   1: 282105.570 ns/op
Iteration   1: 270448.413 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  270448.413 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 18.88% complete, ETA 01:59:47
# Fork: 1 of 1
# Warmup Iteration   1: 2803096.305 ns/op
Iteration   1: 2695845.038 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2695845.038 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 19.13% complete, ETA 01:59:16
# Fork: 1 of 1
# Warmup Iteration   1: 29551255.496 ns/op
Iteration   1: 28535757.986 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  28535757.986 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 19.39% complete, ETA 01:58:51
# Fork: 1 of 1
# Warmup Iteration   1: 286479592.543 ns/op
Iteration   1: 281612093.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  281612093.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 19.64% complete, ETA 01:59:15
# Fork: 1 of 1
# Warmup Iteration   1: 44674.505 ns/op
Iteration   1: 46078.879 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  46078.879 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 19.90% complete, ETA 01:58:43
# Fork: 1 of 1
# Warmup Iteration   1: 53528.527 ns/op
Iteration   1: 51700.624 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  51700.624 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 20.15% complete, ETA 01:58:11
# Fork: 1 of 1
# Warmup Iteration   1: 79934.717 ns/op
Iteration   1: 77877.666 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  77877.666 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 20.41% complete, ETA 01:57:40
# Fork: 1 of 1
# Warmup Iteration   1: 342768.232 ns/op
Iteration   1: 331994.944 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  331994.944 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 20.66% complete, ETA 01:57:09
# Fork: 1 of 1
# Warmup Iteration   1: 3434394.436 ns/op
Iteration   1: 3342527.839 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3342527.839 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 20.92% complete, ETA 01:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 36561962.120 ns/op
Iteration   1: 35847791.011 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  35847791.011 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 21.17% complete, ETA 01:56:15
# Fork: 1 of 1
# Warmup Iteration   1: 541832728.053 ns/op
Iteration   1: 457931527.909 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  457931527.909 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 21.43% complete, ETA 01:56:35
# Fork: 1 of 1
# Warmup Iteration   1: 47415.578 ns/op
Iteration   1: 45353.960 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  45353.960 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 21.68% complete, ETA 01:56:04
# Fork: 1 of 1
# Warmup Iteration   1: 52370.721 ns/op
Iteration   1: 50465.771 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  50465.771 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 21.94% complete, ETA 01:55:33
# Fork: 1 of 1
# Warmup Iteration   1: 86973.621 ns/op
Iteration   1: 90966.971 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  90966.971 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 22.19% complete, ETA 01:55:03
# Fork: 1 of 1
# Warmup Iteration   1: 460111.055 ns/op
Iteration   1: 448476.228 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  448476.228 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 22.45% complete, ETA 01:54:33
# Fork: 1 of 1
# Warmup Iteration   1: 4584379.769 ns/op
Iteration   1: 4479313.171 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  4479313.171 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 22.70% complete, ETA 01:54:03
# Fork: 1 of 1
# Warmup Iteration   1: 47648043.714 ns/op
Iteration   1: 46916045.449 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  46916045.449 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 22.96% complete, ETA 01:53:39
# Fork: 1 of 1
# Warmup Iteration   1: 678035223.067 ns/op
Iteration   1: 569677472.778 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  569677472.778 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 23.21% complete, ETA 01:53:55
# Fork: 1 of 1
# Warmup Iteration   1: 46461.716 ns/op
Iteration   1: 45716.621 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  45716.621 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 23.47% complete, ETA 01:53:25
# Fork: 1 of 1
# Warmup Iteration   1: 59589.361 ns/op
Iteration   1: 56575.921 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  56575.921 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 23.72% complete, ETA 01:52:55
# Fork: 1 of 1
# Warmup Iteration   1: 118600.174 ns/op
Iteration   1: 117562.599 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  117562.599 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 23.98% complete, ETA 01:52:25
# Fork: 1 of 1
# Warmup Iteration   1: 812337.729 ns/op
Iteration   1: 792530.245 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  792530.245 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 24.23% complete, ETA 01:51:56
# Fork: 1 of 1
# Warmup Iteration   1: 7966336.080 ns/op
Iteration   1: 7804758.956 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  7804758.956 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 24.49% complete, ETA 01:51:28
# Fork: 1 of 1
# Warmup Iteration   1: 81886056.927 ns/op
Iteration   1: 80463706.008 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  80463706.008 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 24.74% complete, ETA 01:51:03
# Fork: 1 of 1
# Warmup Iteration   1: 1049064137.500 ns/op
Iteration   1: 928502100.545 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  928502100.545 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 25.00% complete, ETA 01:51:17
# Fork: 1 of 1
# Warmup Iteration   1: 51860.655 ns/op
Iteration   1: 50946.344 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  50946.344 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 25.26% complete, ETA 01:50:47
# Fork: 1 of 1
# Warmup Iteration   1: 64912.427 ns/op
Iteration   1: 63856.445 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  63856.445 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 25.51% complete, ETA 01:50:18
# Fork: 1 of 1
# Warmup Iteration   1: 178016.096 ns/op
Iteration   1: 175383.455 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  175383.455 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 25.77% complete, ETA 01:49:49
# Fork: 1 of 1
# Warmup Iteration   1: 1386947.573 ns/op
Iteration   1: 1366345.213 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  1366345.213 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 26.02% complete, ETA 01:49:20
# Fork: 1 of 1
# Warmup Iteration   1: 13672868.852 ns/op
Iteration   1: 13403616.867 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  13403616.867 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 26.28% complete, ETA 01:48:52
# Fork: 1 of 1
# Warmup Iteration   1: 138186394.781 ns/op
Iteration   1: 135161854.892 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  135161854.892 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 26.53% complete, ETA 01:48:28
# Fork: 1 of 1
# Warmup Iteration   1: 1518941186.000 ns/op
Iteration   1: 1552494746.286 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  1552494746.286 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 26.79% complete, ETA 01:48:40
# Fork: 1 of 1
# Warmup Iteration   1: 52904.239 ns/op
Iteration   1: 51426.699 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  51426.699 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 27.04% complete, ETA 01:48:12
# Fork: 1 of 1
# Warmup Iteration   1: 80214.341 ns/op
Iteration   1: 73980.215 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  73980.215 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 27.30% complete, ETA 01:47:43
# Fork: 1 of 1
# Warmup Iteration   1: 291111.016 ns/op
Iteration   1: 289231.937 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  289231.937 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 27.55% complete, ETA 01:47:14
# Fork: 1 of 1
# Warmup Iteration   1: 2543407.726 ns/op
Iteration   1: 2505766.137 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2505766.137 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 27.81% complete, ETA 01:46:46
# Fork: 1 of 1
# Warmup Iteration   1: 24917254.945 ns/op
Iteration   1: 24525669.071 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  24525669.071 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 28.06% complete, ETA 01:46:18
# Fork: 1 of 1
# Warmup Iteration   1: 250814184.150 ns/op
Iteration   1: 246654090.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  246654090.000 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 28.32% complete, ETA 01:45:54
# Fork: 1 of 1
# Warmup Iteration   1: 2517701975.250 ns/op
Iteration   1: 2466036325.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2466036325.600 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 28.57% complete, ETA 01:46:06
# Fork: 1 of 1
# Warmup Iteration   1: 42794.866 ns/op
Iteration   1: 41018.318 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  41018.318 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 28.83% complete, ETA 01:45:38
# Fork: 1 of 1
# Warmup Iteration   1: 47408.887 ns/op
Iteration   1: 46237.664 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  46237.664 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 29.08% complete, ETA 01:45:09
# Fork: 1 of 1
# Warmup Iteration   1: 69449.458 ns/op
Iteration   1: 66721.179 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  66721.179 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 29.34% complete, ETA 01:44:41
# Fork: 1 of 1
# Warmup Iteration   1: 250990.372 ns/op
Iteration   1: 246314.779 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  246314.779 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 29.59% complete, ETA 01:44:13
# Fork: 1 of 1
# Warmup Iteration   1: 2535529.348 ns/op
Iteration   1: 2489273.982 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2489273.982 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 29.85% complete, ETA 01:43:46
# Fork: 1 of 1
# Warmup Iteration   1: 25217795.106 ns/op
Iteration   1: 24662792.788 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  24662792.788 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 30.10% complete, ETA 01:43:22
# Fork: 1 of 1
# Warmup Iteration   1: 421187043.500 ns/op
Iteration   1: 335795975.567 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  335795975.567 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 30.36% complete, ETA 01:43:25
# Fork: 1 of 1
# Warmup Iteration   1: 41161.490 ns/op
Iteration   1: 40838.094 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  40838.094 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 30.61% complete, ETA 01:42:57
# Fork: 1 of 1
# Warmup Iteration   1: 44568.206 ns/op
Iteration   1: 44490.291 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  44490.291 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 30.87% complete, ETA 01:42:29
# Fork: 1 of 1
# Warmup Iteration   1: 66131.524 ns/op
Iteration   1: 67576.261 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  67576.261 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 31.12% complete, ETA 01:42:02
# Fork: 1 of 1
# Warmup Iteration   1: 261726.534 ns/op
Iteration   1: 256340.963 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  256340.963 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 31.38% complete, ETA 01:41:34
# Fork: 1 of 1
# Warmup Iteration   1: 2579285.883 ns/op
Iteration   1: 2550987.838 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2550987.838 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 31.63% complete, ETA 01:41:07
# Fork: 1 of 1
# Warmup Iteration   1: 27440265.436 ns/op
Iteration   1: 26699589.680 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  26699589.680 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 31.89% complete, ETA 01:40:43
# Fork: 1 of 1
# Warmup Iteration   1: 439136570.696 ns/op
Iteration   1: 351943803.828 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  351943803.828 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 32.14% complete, ETA 01:40:45
# Fork: 1 of 1
# Warmup Iteration   1: 42955.784 ns/op
Iteration   1: 41804.162 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  41804.162 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 32.40% complete, ETA 01:40:17
# Fork: 1 of 1
# Warmup Iteration   1: 48482.041 ns/op
Iteration   1: 46475.562 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  46475.562 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 32.65% complete, ETA 01:39:50
# Fork: 1 of 1
# Warmup Iteration   1: 72700.290 ns/op
Iteration   1: 74557.736 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  74557.736 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 32.91% complete, ETA 01:39:23
# Fork: 1 of 1
# Warmup Iteration   1: 295853.645 ns/op
Iteration   1: 290276.376 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  290276.376 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 33.16% complete, ETA 01:38:56
# Fork: 1 of 1
# Warmup Iteration   1: 2859437.045 ns/op
Iteration   1: 2842240.217 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2842240.217 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 33.42% complete, ETA 01:38:29
# Fork: 1 of 1
# Warmup Iteration   1: 30465318.328 ns/op
Iteration   1: 29956355.979 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  29956355.979 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 33.67% complete, ETA 01:38:05
# Fork: 1 of 1
# Warmup Iteration   1: 311272462.636 ns/op
Iteration   1: 311762511.939 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  311762511.939 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 33.93% complete, ETA 01:38:06
# Fork: 1 of 1
# Warmup Iteration   1: 42952.648 ns/op
Iteration   1: 44791.741 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  44791.741 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 34.18% complete, ETA 01:37:39
# Fork: 1 of 1
# Warmup Iteration   1: 51187.970 ns/op
Iteration   1: 47371.300 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  47371.300 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 34.44% complete, ETA 01:37:11
# Fork: 1 of 1
# Warmup Iteration   1: 82409.080 ns/op
Iteration   1: 79017.566 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  79017.566 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 34.69% complete, ETA 01:36:45
# Fork: 1 of 1
# Warmup Iteration   1: 356094.381 ns/op
Iteration   1: 353849.177 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  353849.177 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 34.95% complete, ETA 01:36:18
# Fork: 1 of 1
# Warmup Iteration   1: 3571741.715 ns/op
Iteration   1: 3527662.261 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  3527662.261 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 35.20% complete, ETA 01:35:51
# Fork: 1 of 1
# Warmup Iteration   1: 37588975.715 ns/op
Iteration   1: 37002961.092 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  37002961.092 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 35.46% complete, ETA 01:35:28
# Fork: 1 of 1
# Warmup Iteration   1: 383847597.259 ns/op
Iteration   1: 364167663.107 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  364167663.107 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 35.71% complete, ETA 01:35:26
# Fork: 1 of 1
# Warmup Iteration   1: 43141.023 ns/op
Iteration   1: 41622.312 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  41622.312 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 35.97% complete, ETA 01:35:00
# Fork: 1 of 1
# Warmup Iteration   1: 52168.809 ns/op
Iteration   1: 53070.764 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  53070.764 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 36.22% complete, ETA 01:34:33
# Fork: 1 of 1
# Warmup Iteration   1: 90739.745 ns/op
Iteration   1: 91914.314 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  91914.314 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 36.48% complete, ETA 01:34:06
# Fork: 1 of 1
# Warmup Iteration   1: 472913.151 ns/op
Iteration   1: 466043.762 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  466043.762 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 36.73% complete, ETA 01:33:40
# Fork: 1 of 1
# Warmup Iteration   1: 4777105.929 ns/op
Iteration   1: 4682720.476 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  4682720.476 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 36.99% complete, ETA 01:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 48865993.410 ns/op
Iteration   1: 48311464.193 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  48311464.193 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 37.24% complete, ETA 01:32:50
# Fork: 1 of 1
# Warmup Iteration   1: 506111695.250 ns/op
Iteration   1: 481172474.286 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  481172474.286 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 37.50% complete, ETA 01:32:46
# Fork: 1 of 1
# Warmup Iteration   1: 43387.599 ns/op
Iteration   1: 42314.887 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  42314.887 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 37.76% complete, ETA 01:32:20
# Fork: 1 of 1
# Warmup Iteration   1: 58184.215 ns/op
Iteration   1: 52716.460 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  52716.460 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 38.01% complete, ETA 01:31:53
# Fork: 1 of 1
# Warmup Iteration   1: 117646.988 ns/op
Iteration   1: 115991.871 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  115991.871 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 38.27% complete, ETA 01:31:27
# Fork: 1 of 1
# Warmup Iteration   1: 823894.018 ns/op
Iteration   1: 812538.412 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  812538.412 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 38.52% complete, ETA 01:31:01
# Fork: 1 of 1
# Warmup Iteration   1: 8074240.688 ns/op
Iteration   1: 8018716.490 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  8018716.490 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 38.78% complete, ETA 01:30:35
# Fork: 1 of 1
# Warmup Iteration   1: 83036066.289 ns/op
Iteration   1: 82029140.512 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  82029140.512 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 39.03% complete, ETA 01:30:11
# Fork: 1 of 1
# Warmup Iteration   1: 849276432.083 ns/op
Iteration   1: 808830688.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  808830688.000 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 39.29% complete, ETA 01:30:07
# Fork: 1 of 1
# Warmup Iteration   1: 45092.829 ns/op
Iteration   1: 42687.285 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  42687.285 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 39.54% complete, ETA 01:29:41
# Fork: 1 of 1
# Warmup Iteration   1: 64413.823 ns/op
Iteration   1: 61634.513 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  61634.513 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 39.80% complete, ETA 01:29:15
# Fork: 1 of 1
# Warmup Iteration   1: 175844.916 ns/op
Iteration   1: 173299.996 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  173299.996 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 40.05% complete, ETA 01:28:49
# Fork: 1 of 1
# Warmup Iteration   1: 1394831.452 ns/op
Iteration   1: 1386690.632 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  1386690.632 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 40.31% complete, ETA 01:28:23
# Fork: 1 of 1
# Warmup Iteration   1: 13798643.971 ns/op
Iteration   1: 13653188.426 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  13653188.426 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 40.56% complete, ETA 01:27:57
# Fork: 1 of 1
# Warmup Iteration   1: 138546208.082 ns/op
Iteration   1: 136786159.311 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  136786159.311 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 40.82% complete, ETA 01:27:34
# Fork: 1 of 1
# Warmup Iteration   1: 1440036761.000 ns/op
Iteration   1: 1356384155.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  1356384155.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 41.07% complete, ETA 01:27:29
# Fork: 1 of 1
# Warmup Iteration   1: 47842.262 ns/op
Iteration   1: 43470.985 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  43470.985 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 41.33% complete, ETA 01:27:03
# Fork: 1 of 1
# Warmup Iteration   1: 75080.688 ns/op
Iteration   1: 76428.098 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  76428.098 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 41.58% complete, ETA 01:26:37
# Fork: 1 of 1
# Warmup Iteration   1: 292310.131 ns/op
Iteration   1: 288115.748 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  288115.748 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 41.84% complete, ETA 01:26:11
# Fork: 1 of 1
# Warmup Iteration   1: 2552537.551 ns/op
Iteration   1: 2526144.232 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2526144.232 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 42.09% complete, ETA 01:25:45
# Fork: 1 of 1
# Warmup Iteration   1: 25046461.678 ns/op
Iteration   1: 24714974.785 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  24714974.785 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 42.35% complete, ETA 01:25:20
# Fork: 1 of 1
# Warmup Iteration   1: 251027727.725 ns/op
Iteration   1: 248304300.805 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  248304300.805 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 42.60% complete, ETA 01:24:57
# Fork: 1 of 1
# Warmup Iteration   1: 2614567188.250 ns/op
Iteration   1: 2471595713.400 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2471595713.400 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 42.86% complete, ETA 01:24:53
# Fork: 1 of 1
# Warmup Iteration   1: 54091.760 ns/op
Iteration   1: 51923.447 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  51923.447 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 43.11% complete, ETA 01:24:27
# Fork: 1 of 1
# Warmup Iteration   1: 58053.358 ns/op
Iteration   1: 57910.978 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  57910.978 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 43.37% complete, ETA 01:24:01
# Fork: 1 of 1
# Warmup Iteration   1: 76003.413 ns/op
Iteration   1: 75381.831 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  75381.831 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 43.62% complete, ETA 01:23:36
# Fork: 1 of 1
# Warmup Iteration   1: 215608.639 ns/op
Iteration   1: 204500.855 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  204500.855 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 43.88% complete, ETA 01:23:10
# Fork: 1 of 1
# Warmup Iteration   1: 1826881.770 ns/op
Iteration   1: 1749829.398 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1749829.398 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 44.13% complete, ETA 01:22:45
# Fork: 1 of 1
# Warmup Iteration   1: 17620026.069 ns/op
Iteration   1: 16994560.117 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  16994560.117 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 44.39% complete, ETA 01:22:22
# Fork: 1 of 1
# Warmup Iteration   1: 258124983.872 ns/op
Iteration   1: 244335978.268 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  244335978.268 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 44.64% complete, ETA 01:22:13
# Fork: 1 of 1
# Warmup Iteration   1: 53473.427 ns/op
Iteration   1: 53729.089 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  53729.089 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 44.90% complete, ETA 01:21:47
# Fork: 1 of 1
# Warmup Iteration   1: 53565.198 ns/op
Iteration   1: 56379.967 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  56379.967 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 45.15% complete, ETA 01:21:22
# Fork: 1 of 1
# Warmup Iteration   1: 75321.835 ns/op
Iteration   1: 76705.535 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  76705.535 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 45.41% complete, ETA 01:20:56
# Fork: 1 of 1
# Warmup Iteration   1: 227136.947 ns/op
Iteration   1: 216932.808 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  216932.808 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 45.66% complete, ETA 01:20:31
# Fork: 1 of 1
# Warmup Iteration   1: 1946718.140 ns/op
Iteration   1: 1853097.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1853097.667 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 45.92% complete, ETA 01:20:06
# Fork: 1 of 1
# Warmup Iteration   1: 19190813.308 ns/op
Iteration   1: 18567806.622 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  18567806.622 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 46.17% complete, ETA 01:19:42
# Fork: 1 of 1
# Warmup Iteration   1: 270300199.595 ns/op
Iteration   1: 257452288.077 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  257452288.077 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 46.43% complete, ETA 01:19:33
# Fork: 1 of 1
# Warmup Iteration   1: 51751.381 ns/op
Iteration   1: 52039.002 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  52039.002 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 46.68% complete, ETA 01:19:07
# Fork: 1 of 1
# Warmup Iteration   1: 57676.683 ns/op
Iteration   1: 60398.778 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  60398.778 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 46.94% complete, ETA 01:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 80895.384 ns/op
Iteration   1: 81094.404 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  81094.404 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 47.19% complete, ETA 01:18:17
# Fork: 1 of 1
# Warmup Iteration   1: 258035.081 ns/op
Iteration   1: 248607.040 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  248607.040 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 47.45% complete, ETA 01:17:52
# Fork: 1 of 1
# Warmup Iteration   1: 2245681.729 ns/op
Iteration   1: 2169048.997 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2169048.997 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 47.70% complete, ETA 01:17:27
# Fork: 1 of 1
# Warmup Iteration   1: 22452860.809 ns/op
Iteration   1: 21867870.614 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  21867870.614 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 47.96% complete, ETA 01:17:03
# Fork: 1 of 1
# Warmup Iteration   1: 287390030.143 ns/op
Iteration   1: 295273584.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  295273584.176 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 48.21% complete, ETA 01:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 52371.762 ns/op
Iteration   1: 51978.094 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  51978.094 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 48.47% complete, ETA 01:16:28
# Fork: 1 of 1
# Warmup Iteration   1: 57444.717 ns/op
Iteration   1: 59365.714 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  59365.714 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 48.72% complete, ETA 01:16:03
# Fork: 1 of 1
# Warmup Iteration   1: 87833.812 ns/op
Iteration   1: 86727.138 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  86727.138 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 48.98% complete, ETA 01:15:37
# Fork: 1 of 1
# Warmup Iteration   1: 318616.995 ns/op
Iteration   1: 307682.474 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  307682.474 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 49.23% complete, ETA 01:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 2925773.550 ns/op
Iteration   1: 2821720.205 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2821720.205 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 49.49% complete, ETA 01:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 29442100.994 ns/op
Iteration   1: 28863976.268 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  28863976.268 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 49.74% complete, ETA 01:14:24
# Fork: 1 of 1
# Warmup Iteration   1: 374995209.704 ns/op
Iteration   1: 383780421.370 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  383780421.370 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 50.00% complete, ETA 01:14:13
# Fork: 1 of 1
# Warmup Iteration   1: 53379.481 ns/op
Iteration   1: 50665.955 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  50665.955 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 50.26% complete, ETA 01:13:48
# Fork: 1 of 1
# Warmup Iteration   1: 62227.312 ns/op
Iteration   1: 62095.289 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  62095.289 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 50.51% complete, ETA 01:13:23
# Fork: 1 of 1
# Warmup Iteration   1: 102701.392 ns/op
Iteration   1: 100830.318 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  100830.318 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 50.77% complete, ETA 01:12:59
# Fork: 1 of 1
# Warmup Iteration   1: 434832.880 ns/op
Iteration   1: 423675.405 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  423675.405 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 51.02% complete, ETA 01:12:34
# Fork: 1 of 1
# Warmup Iteration   1: 4023309.494 ns/op
Iteration   1: 3911429.770 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  3911429.770 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 51.28% complete, ETA 01:12:09
# Fork: 1 of 1
# Warmup Iteration   1: 40526148.834 ns/op
Iteration   1: 39752157.262 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  39752157.262 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 51.53% complete, ETA 01:11:46
# Fork: 1 of 1
# Warmup Iteration   1: 494762762.810 ns/op
Iteration   1: 483500180.545 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  483500180.545 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 51.79% complete, ETA 01:11:34
# Fork: 1 of 1
# Warmup Iteration   1: 58069.754 ns/op
Iteration   1: 54833.362 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  54833.362 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 52.04% complete, ETA 01:11:10
# Fork: 1 of 1
# Warmup Iteration   1: 65634.637 ns/op
Iteration   1: 63725.503 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  63725.503 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 52.30% complete, ETA 01:10:45
# Fork: 1 of 1
# Warmup Iteration   1: 124487.116 ns/op
Iteration   1: 121858.302 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  121858.302 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 52.55% complete, ETA 01:10:20
# Fork: 1 of 1
# Warmup Iteration   1: 784734.287 ns/op
Iteration   1: 772324.108 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  772324.108 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 52.81% complete, ETA 01:09:55
# Fork: 1 of 1
# Warmup Iteration   1: 7489972.001 ns/op
Iteration   1: 7299938.969 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  7299938.969 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 53.06% complete, ETA 01:09:31
# Fork: 1 of 1
# Warmup Iteration   1: 74533914.622 ns/op
Iteration   1: 73280073.642 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  73280073.642 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 53.32% complete, ETA 01:09:08
# Fork: 1 of 1
# Warmup Iteration   1: 813039393.462 ns/op
Iteration   1: 819602369.231 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  819602369.231 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 53.57% complete, ETA 01:08:56
# Fork: 1 of 1
# Warmup Iteration   1: 57353.660 ns/op
Iteration   1: 56953.092 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  56953.092 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 53.83% complete, ETA 01:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 67669.755 ns/op
Iteration   1: 69826.846 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  69826.846 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 54.08% complete, ETA 01:08:07
# Fork: 1 of 1
# Warmup Iteration   1: 181702.231 ns/op
Iteration   1: 178274.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  178274.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 54.34% complete, ETA 01:07:42
# Fork: 1 of 1
# Warmup Iteration   1: 1364794.764 ns/op
Iteration   1: 1346029.607 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1346029.607 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 54.59% complete, ETA 01:07:17
# Fork: 1 of 1
# Warmup Iteration   1: 13113269.026 ns/op
Iteration   1: 12899531.675 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  12899531.675 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 54.85% complete, ETA 01:06:53
# Fork: 1 of 1
# Warmup Iteration   1: 130153043.000 ns/op
Iteration   1: 128648975.564 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  128648975.564 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 55.10% complete, ETA 01:06:30
# Fork: 1 of 1
# Warmup Iteration   1: 1429710170.571 ns/op
Iteration   1: 1396776510.875 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1396776510.875 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 55.36% complete, ETA 01:06:17
# Fork: 1 of 1
# Warmup Iteration   1: 61869.122 ns/op
Iteration   1: 60375.812 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  60375.812 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 55.61% complete, ETA 01:05:53
# Fork: 1 of 1
# Warmup Iteration   1: 85300.529 ns/op
Iteration   1: 84657.977 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  84657.977 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 55.87% complete, ETA 01:05:28
# Fork: 1 of 1
# Warmup Iteration   1: 297626.640 ns/op
Iteration   1: 293318.979 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  293318.979 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 56.12% complete, ETA 01:05:04
# Fork: 1 of 1
# Warmup Iteration   1: 2514126.415 ns/op
Iteration   1: 2485587.484 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2485587.484 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 56.38% complete, ETA 01:04:39
# Fork: 1 of 1
# Warmup Iteration   1: 24416859.702 ns/op
Iteration   1: 24081156.853 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  24081156.853 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 56.63% complete, ETA 01:04:15
# Fork: 1 of 1
# Warmup Iteration   1: 242190258.119 ns/op
Iteration   1: 239627145.857 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  239627145.857 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 56.89% complete, ETA 01:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 2550583999.000 ns/op
Iteration   1: 2415045503.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2415045503.200 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 57.14% complete, ETA 01:03:39
# Fork: 1 of 1
# Warmup Iteration   1: 52633.781 ns/op
Iteration   1: 53225.973 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  53225.973 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 57.40% complete, ETA 01:03:15
# Fork: 1 of 1
# Warmup Iteration   1: 56685.010 ns/op
Iteration   1: 53723.675 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  53723.675 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 57.65% complete, ETA 01:02:50
# Fork: 1 of 1
# Warmup Iteration   1: 74491.840 ns/op
Iteration   1: 74137.099 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  74137.099 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 57.91% complete, ETA 01:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 205881.610 ns/op
Iteration   1: 195395.121 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  195395.121 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 58.16% complete, ETA 01:02:02
# Fork: 1 of 1
# Warmup Iteration   1: 1614317.267 ns/op
Iteration   1: 1537294.016 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1537294.016 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 58.42% complete, ETA 01:01:38
# Fork: 1 of 1
# Warmup Iteration   1: 15868658.808 ns/op
Iteration   1: 15245977.160 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  15245977.160 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 58.67% complete, ETA 01:01:14
# Fork: 1 of 1
# Warmup Iteration   1: 151042950.716 ns/op
Iteration   1: 147220663.706 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  147220663.706 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 58.93% complete, ETA 01:01:00
# Fork: 1 of 1
# Warmup Iteration   1: 52822.598 ns/op
Iteration   1: 52506.125 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  52506.125 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 59.18% complete, ETA 01:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 54290.216 ns/op
Iteration   1: 54463.445 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  54463.445 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 59.44% complete, ETA 01:00:11
# Fork: 1 of 1
# Warmup Iteration   1: 78881.775 ns/op
Iteration   1: 75618.432 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  75618.432 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 59.69% complete, ETA 00:59:47
# Fork: 1 of 1
# Warmup Iteration   1: 217252.820 ns/op
Iteration   1: 209653.212 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  209653.212 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 59.95% complete, ETA 00:59:23
# Fork: 1 of 1
# Warmup Iteration   1: 1728239.806 ns/op
Iteration   1: 1645934.398 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1645934.398 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 60.20% complete, ETA 00:58:59
# Fork: 1 of 1
# Warmup Iteration   1: 16959828.412 ns/op
Iteration   1: 16588993.076 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  16588993.076 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 60.46% complete, ETA 00:58:35
# Fork: 1 of 1
# Warmup Iteration   1: 166519121.541 ns/op
Iteration   1: 162945152.532 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  162945152.532 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 60.71% complete, ETA 00:58:20
# Fork: 1 of 1
# Warmup Iteration   1: 52385.411 ns/op
Iteration   1: 50716.447 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  50716.447 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 60.97% complete, ETA 00:57:56
# Fork: 1 of 1
# Warmup Iteration   1: 54695.114 ns/op
Iteration   1: 57298.479 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  57298.479 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 61.22% complete, ETA 00:57:32
# Fork: 1 of 1
# Warmup Iteration   1: 81483.781 ns/op
Iteration   1: 80211.290 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  80211.290 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 61.48% complete, ETA 00:57:08
# Fork: 1 of 1
# Warmup Iteration   1: 250090.533 ns/op
Iteration   1: 243744.934 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  243744.934 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 61.73% complete, ETA 00:56:43
# Fork: 1 of 1
# Warmup Iteration   1: 2042004.880 ns/op
Iteration   1: 1994263.012 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1994263.012 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 61.99% complete, ETA 00:56:20
# Fork: 1 of 1
# Warmup Iteration   1: 20194490.089 ns/op
Iteration   1: 19814583.840 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  19814583.840 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 62.24% complete, ETA 00:55:56
# Fork: 1 of 1
# Warmup Iteration   1: 195135578.135 ns/op
Iteration   1: 189924593.434 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  189924593.434 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 62.50% complete, ETA 00:55:41
# Fork: 1 of 1
# Warmup Iteration   1: 51846.688 ns/op
Iteration   1: 51103.799 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  51103.799 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 62.76% complete, ETA 00:55:16
# Fork: 1 of 1
# Warmup Iteration   1: 56678.364 ns/op
Iteration   1: 59349.242 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  59349.242 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 63.01% complete, ETA 00:54:52
# Fork: 1 of 1
# Warmup Iteration   1: 90406.133 ns/op
Iteration   1: 88366.913 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  88366.913 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 63.27% complete, ETA 00:54:28
# Fork: 1 of 1
# Warmup Iteration   1: 307806.071 ns/op
Iteration   1: 300195.140 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  300195.140 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 63.52% complete, ETA 00:54:04
# Fork: 1 of 1
# Warmup Iteration   1: 2640024.638 ns/op
Iteration   1: 2568981.647 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  2568981.647 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 63.78% complete, ETA 00:53:41
# Fork: 1 of 1
# Warmup Iteration   1: 25660754.685 ns/op
Iteration   1: 25337664.808 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  25337664.808 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 64.03% complete, ETA 00:53:17
# Fork: 1 of 1
# Warmup Iteration   1: 251464427.900 ns/op
Iteration   1: 247181023.341 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  247181023.341 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 64.29% complete, ETA 00:53:01
# Fork: 1 of 1
# Warmup Iteration   1: 54153.624 ns/op
Iteration   1: 52679.326 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  52679.326 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 64.54% complete, ETA 00:52:37
# Fork: 1 of 1
# Warmup Iteration   1: 59825.453 ns/op
Iteration   1: 60289.126 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  60289.126 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 64.80% complete, ETA 00:52:13
# Fork: 1 of 1
# Warmup Iteration   1: 97991.773 ns/op
Iteration   1: 98416.452 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  98416.452 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 65.05% complete, ETA 00:51:49
# Fork: 1 of 1
# Warmup Iteration   1: 425422.969 ns/op
Iteration   1: 416993.324 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  416993.324 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 65.31% complete, ETA 00:51:25
# Fork: 1 of 1
# Warmup Iteration   1: 3805994.897 ns/op
Iteration   1: 3740413.162 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  3740413.162 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 65.56% complete, ETA 00:51:02
# Fork: 1 of 1
# Warmup Iteration   1: 36980615.985 ns/op
Iteration   1: 36427865.338 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  36427865.338 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 65.82% complete, ETA 00:50:39
# Fork: 1 of 1
# Warmup Iteration   1: 360235518.143 ns/op
Iteration   1: 357835488.893 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  357835488.893 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 66.07% complete, ETA 00:50:22
# Fork: 1 of 1
# Warmup Iteration   1: 55263.022 ns/op
Iteration   1: 55358.011 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  55358.011 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 66.33% complete, ETA 00:49:58
# Fork: 1 of 1
# Warmup Iteration   1: 65974.026 ns/op
Iteration   1: 65564.710 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  65564.710 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 66.58% complete, ETA 00:49:34
# Fork: 1 of 1
# Warmup Iteration   1: 122666.335 ns/op
Iteration   1: 120092.593 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  120092.593 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 66.84% complete, ETA 00:49:10
# Fork: 1 of 1
# Warmup Iteration   1: 768443.488 ns/op
Iteration   1: 753844.594 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  753844.594 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 67.09% complete, ETA 00:48:46
# Fork: 1 of 1
# Warmup Iteration   1: 7233428.944 ns/op
Iteration   1: 7122540.881 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  7122540.881 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 67.35% complete, ETA 00:48:23
# Fork: 1 of 1
# Warmup Iteration   1: 70747474.211 ns/op
Iteration   1: 70353690.923 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  70353690.923 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 67.60% complete, ETA 00:48:00
# Fork: 1 of 1
# Warmup Iteration   1: 704500746.467 ns/op
Iteration   1: 695554329.067 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  695554329.067 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 67.86% complete, ETA 00:47:43
# Fork: 1 of 1
# Warmup Iteration   1: 56762.378 ns/op
Iteration   1: 58422.075 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  58422.075 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 68.11% complete, ETA 00:47:19
# Fork: 1 of 1
# Warmup Iteration   1: 73795.570 ns/op
Iteration   1: 72359.409 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  72359.409 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 68.37% complete, ETA 00:46:55
# Fork: 1 of 1
# Warmup Iteration   1: 181989.581 ns/op
Iteration   1: 178347.825 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  178347.825 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 68.62% complete, ETA 00:46:31
# Fork: 1 of 1
# Warmup Iteration   1: 1346033.701 ns/op
Iteration   1: 1327605.638 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1327605.638 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 68.88% complete, ETA 00:46:08
# Fork: 1 of 1
# Warmup Iteration   1: 12817971.501 ns/op
Iteration   1: 12772045.190 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  12772045.190 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 69.13% complete, ETA 00:45:44
# Fork: 1 of 1
# Warmup Iteration   1: 126832513.937 ns/op
Iteration   1: 125344132.100 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  125344132.100 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 69.39% complete, ETA 00:45:21
# Fork: 1 of 1
# Warmup Iteration   1: 1266977232.125 ns/op
Iteration   1: 1253838358.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1253838358.625 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 69.64% complete, ETA 00:45:03
# Fork: 1 of 1
# Warmup Iteration   1: 60516.630 ns/op
Iteration   1: 59973.193 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  59973.193 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 69.90% complete, ETA 00:44:40
# Fork: 1 of 1
# Warmup Iteration   1: 84113.695 ns/op
Iteration   1: 82431.872 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  82431.872 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 70.15% complete, ETA 00:44:16
# Fork: 1 of 1
# Warmup Iteration   1: 296527.509 ns/op
Iteration   1: 291043.636 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  291043.636 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 70.41% complete, ETA 00:43:52
# Fork: 1 of 1
# Warmup Iteration   1: 2506199.315 ns/op
Iteration   1: 2478843.213 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  2478843.213 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 70.66% complete, ETA 00:43:29
# Fork: 1 of 1
# Warmup Iteration   1: 24118018.311 ns/op
Iteration   1: 23664311.170 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  23664311.170 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 70.92% complete, ETA 00:43:05
# Fork: 1 of 1
# Warmup Iteration   1: 237834344.209 ns/op
Iteration   1: 236124861.140 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  236124861.140 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 71.17% complete, ETA 00:42:42
# Fork: 1 of 1
# Warmup Iteration   1: 2374952888.800 ns/op
Iteration   1: 2371281821.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  2371281821.600 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 71.43% complete, ETA 00:42:26
# Fork: 1 of 1
# Warmup Iteration   1: 53194.695 ns/op
Iteration   1: 51160.398 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  51160.398 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 71.68% complete, ETA 00:42:02
# Fork: 1 of 1
# Warmup Iteration   1: 59534.975 ns/op
Iteration   1: 57930.078 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  57930.078 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 71.94% complete, ETA 00:41:38
# Fork: 1 of 1
# Warmup Iteration   1: 75110.211 ns/op
Iteration   1: 73242.644 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  73242.644 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 72.19% complete, ETA 00:41:15
# Fork: 1 of 1
# Warmup Iteration   1: 206375.079 ns/op
Iteration   1: 195717.619 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  195717.619 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 72.45% complete, ETA 00:40:51
# Fork: 1 of 1
# Warmup Iteration   1: 1642381.233 ns/op
Iteration   1: 1575387.936 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1575387.936 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 72.70% complete, ETA 00:40:28
# Fork: 1 of 1
# Warmup Iteration   1: 15565017.762 ns/op
Iteration   1: 15173821.976 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  15173821.976 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 72.96% complete, ETA 00:40:05
# Fork: 1 of 1
# Warmup Iteration   1: 155447374.954 ns/op
Iteration   1: 152457862.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  152457862.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 73.21% complete, ETA 00:39:46
# Fork: 1 of 1
# Warmup Iteration   1: 57968.576 ns/op
Iteration   1: 57273.335 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  57273.335 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 73.47% complete, ETA 00:39:23
# Fork: 1 of 1
# Warmup Iteration   1: 57572.767 ns/op
Iteration   1: 56987.088 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  56987.088 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 73.72% complete, ETA 00:38:59
# Fork: 1 of 1
# Warmup Iteration   1: 75995.362 ns/op
Iteration   1: 76510.436 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  76510.436 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 73.98% complete, ETA 00:38:36
# Fork: 1 of 1
# Warmup Iteration   1: 216646.156 ns/op
Iteration   1: 209276.598 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  209276.598 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 74.23% complete, ETA 00:38:12
# Fork: 1 of 1
# Warmup Iteration   1: 1718596.781 ns/op
Iteration   1: 1654606.957 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1654606.957 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 74.49% complete, ETA 00:37:49
# Fork: 1 of 1
# Warmup Iteration   1: 16831080.242 ns/op
Iteration   1: 16478058.341 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  16478058.341 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 74.74% complete, ETA 00:37:26
# Fork: 1 of 1
# Warmup Iteration   1: 162789333.145 ns/op
Iteration   1: 160428608.048 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  160428608.048 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 75.00% complete, ETA 00:37:07
# Fork: 1 of 1
# Warmup Iteration   1: 53998.959 ns/op
Iteration   1: 52312.872 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  52312.872 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 75.26% complete, ETA 00:36:43
# Fork: 1 of 1
# Warmup Iteration   1: 53695.176 ns/op
Iteration   1: 54000.205 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  54000.205 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 75.51% complete, ETA 00:36:20
# Fork: 1 of 1
# Warmup Iteration   1: 80687.378 ns/op
Iteration   1: 77497.818 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  77497.818 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 75.77% complete, ETA 00:35:57
# Fork: 1 of 1
# Warmup Iteration   1: 249358.836 ns/op
Iteration   1: 241921.230 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  241921.230 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 76.02% complete, ETA 00:35:33
# Fork: 1 of 1
# Warmup Iteration   1: 2033734.195 ns/op
Iteration   1: 1983336.127 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1983336.127 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 76.28% complete, ETA 00:35:10
# Fork: 1 of 1
# Warmup Iteration   1: 20117565.641 ns/op
Iteration   1: 19938763.235 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  19938763.235 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 76.53% complete, ETA 00:34:47
# Fork: 1 of 1
# Warmup Iteration   1: 195111963.519 ns/op
Iteration   1: 190077246.774 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  190077246.774 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 76.79% complete, ETA 00:34:28
# Fork: 1 of 1
# Warmup Iteration   1: 54351.849 ns/op
Iteration   1: 54240.725 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  54240.725 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 77.04% complete, ETA 00:34:04
# Fork: 1 of 1
# Warmup Iteration   1: 57212.310 ns/op
Iteration   1: 54894.315 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  54894.315 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 77.30% complete, ETA 00:33:41
# Fork: 1 of 1
# Warmup Iteration   1: 84383.592 ns/op
Iteration   1: 85683.257 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  85683.257 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 77.55% complete, ETA 00:33:17
# Fork: 1 of 1
# Warmup Iteration   1: 305876.815 ns/op
Iteration   1: 299033.197 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  299033.197 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 77.81% complete, ETA 00:32:54
# Fork: 1 of 1
# Warmup Iteration   1: 2643186.417 ns/op
Iteration   1: 2574142.111 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  2574142.111 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 78.06% complete, ETA 00:32:31
# Fork: 1 of 1
# Warmup Iteration   1: 25789844.446 ns/op
Iteration   1: 25237113.562 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  25237113.562 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 78.32% complete, ETA 00:32:08
# Fork: 1 of 1
# Warmup Iteration   1: 251751040.850 ns/op
Iteration   1: 249308047.171 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  249308047.171 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 78.57% complete, ETA 00:31:48
# Fork: 1 of 1
# Warmup Iteration   1: 54753.401 ns/op
Iteration   1: 55336.578 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  55336.578 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 78.83% complete, ETA 00:31:25
# Fork: 1 of 1
# Warmup Iteration   1: 57401.392 ns/op
Iteration   1: 60310.001 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  60310.001 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 79.08% complete, ETA 00:31:02
# Fork: 1 of 1
# Warmup Iteration   1: 99335.099 ns/op
Iteration   1: 97073.129 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  97073.129 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 79.34% complete, ETA 00:30:38
# Fork: 1 of 1
# Warmup Iteration   1: 421475.747 ns/op
Iteration   1: 416053.509 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  416053.509 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 79.59% complete, ETA 00:30:15
# Fork: 1 of 1
# Warmup Iteration   1: 3766005.486 ns/op
Iteration   1: 3694486.983 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  3694486.983 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 79.85% complete, ETA 00:29:52
# Fork: 1 of 1
# Warmup Iteration   1: 37604041.643 ns/op
Iteration   1: 36844481.283 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  36844481.283 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 80.10% complete, ETA 00:29:29
# Fork: 1 of 1
# Warmup Iteration   1: 366826558.357 ns/op
Iteration   1: 360254811.893 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  360254811.893 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 80.36% complete, ETA 00:29:09
# Fork: 1 of 1
# Warmup Iteration   1: 57336.710 ns/op
Iteration   1: 53991.257 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  53991.257 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 80.61% complete, ETA 00:28:46
# Fork: 1 of 1
# Warmup Iteration   1: 64723.169 ns/op
Iteration   1: 61132.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  61132.000 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 80.87% complete, ETA 00:28:23
# Fork: 1 of 1
# Warmup Iteration   1: 123541.711 ns/op
Iteration   1: 121242.850 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  121242.850 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 81.12% complete, ETA 00:27:59
# Fork: 1 of 1
# Warmup Iteration   1: 772550.912 ns/op
Iteration   1: 758899.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  758899.090 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 81.38% complete, ETA 00:27:36
# Fork: 1 of 1
# Warmup Iteration   1: 7280055.863 ns/op
Iteration   1: 7163013.968 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  7163013.968 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 81.63% complete, ETA 00:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 70514885.092 ns/op
Iteration   1: 69495809.313 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  69495809.313 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 81.89% complete, ETA 00:26:50
# Fork: 1 of 1
# Warmup Iteration   1: 699147615.600 ns/op
Iteration   1: 694786816.067 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  694786816.067 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 82.14% complete, ETA 00:26:30
# Fork: 1 of 1
# Warmup Iteration   1: 56738.372 ns/op
Iteration   1: 55596.335 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  55596.335 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 82.40% complete, ETA 00:26:07
# Fork: 1 of 1
# Warmup Iteration   1: 69974.210 ns/op
Iteration   1: 71369.883 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  71369.883 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 82.65% complete, ETA 00:25:44
# Fork: 1 of 1
# Warmup Iteration   1: 181355.899 ns/op
Iteration   1: 178186.163 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  178186.163 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 82.91% complete, ETA 00:25:21
# Fork: 1 of 1
# Warmup Iteration   1: 1346870.063 ns/op
Iteration   1: 1331328.001 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1331328.001 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 83.16% complete, ETA 00:24:57
# Fork: 1 of 1
# Warmup Iteration   1: 12801606.485 ns/op
Iteration   1: 12738025.433 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  12738025.433 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 83.42% complete, ETA 00:24:34
# Fork: 1 of 1
# Warmup Iteration   1: 125902747.888 ns/op
Iteration   1: 124919350.815 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  124919350.815 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 83.67% complete, ETA 00:24:12
# Fork: 1 of 1
# Warmup Iteration   1: 1262743017.625 ns/op
Iteration   1: 1250047325.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1250047325.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 83.93% complete, ETA 00:23:51
# Fork: 1 of 1
# Warmup Iteration   1: 59890.501 ns/op
Iteration   1: 58983.942 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  58983.942 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 84.18% complete, ETA 00:23:28
# Fork: 1 of 1
# Warmup Iteration   1: 85504.568 ns/op
Iteration   1: 85931.046 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  85931.046 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 84.44% complete, ETA 00:23:05
# Fork: 1 of 1
# Warmup Iteration   1: 296000.582 ns/op
Iteration   1: 291228.788 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  291228.788 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 84.69% complete, ETA 00:22:42
# Fork: 1 of 1
# Warmup Iteration   1: 2504493.037 ns/op
Iteration   1: 2480576.824 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  2480576.824 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 84.95% complete, ETA 00:22:19
# Fork: 1 of 1
# Warmup Iteration   1: 24111014.723 ns/op
Iteration   1: 23877669.504 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  23877669.504 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 85.20% complete, ETA 00:21:55
# Fork: 1 of 1
# Warmup Iteration   1: 237651715.070 ns/op
Iteration   1: 236653716.605 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  236653716.605 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 85.46% complete, ETA 00:21:33
# Fork: 1 of 1
# Warmup Iteration   1: 2376493317.800 ns/op
Iteration   1: 2364811521.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  2364811521.200 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 85.71% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 53949.279 ns/op
Iteration   1: 53666.248 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  53666.248 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 85.97% complete, ETA 00:20:49
# Fork: 1 of 1
# Warmup Iteration   1: 55475.192 ns/op
Iteration   1: 53675.287 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  53675.287 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 86.22% complete, ETA 00:20:26
# Fork: 1 of 1
# Warmup Iteration   1: 74099.486 ns/op
Iteration   1: 76351.464 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  76351.464 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 86.48% complete, ETA 00:20:03
# Fork: 1 of 1
# Warmup Iteration   1: 208529.963 ns/op
Iteration   1: 198843.310 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  198843.310 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 86.73% complete, ETA 00:19:40
# Fork: 1 of 1
# Warmup Iteration   1: 1675809.259 ns/op
Iteration   1: 1596362.607 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1596362.607 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 86.99% complete, ETA 00:19:17
# Fork: 1 of 1
# Warmup Iteration   1: 16151524.055 ns/op
Iteration   1: 15650979.986 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  15650979.986 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 87.24% complete, ETA 00:18:54
# Fork: 1 of 1
# Warmup Iteration   1: 153184031.939 ns/op
Iteration   1: 149466177.731 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  149466177.731 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 87.50% complete, ETA 00:18:33
# Fork: 1 of 1
# Warmup Iteration   1: 53109.353 ns/op
Iteration   1: 52963.445 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  52963.445 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 87.76% complete, ETA 00:18:10
# Fork: 1 of 1
# Warmup Iteration   1: 58589.752 ns/op
Iteration   1: 56414.961 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  56414.961 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 88.01% complete, ETA 00:17:47
# Fork: 1 of 1
# Warmup Iteration   1: 76743.550 ns/op
Iteration   1: 75500.412 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  75500.412 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 88.27% complete, ETA 00:17:24
# Fork: 1 of 1
# Warmup Iteration   1: 218572.590 ns/op
Iteration   1: 211526.691 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  211526.691 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 88.52% complete, ETA 00:17:01
# Fork: 1 of 1
# Warmup Iteration   1: 1739430.791 ns/op
Iteration   1: 1667637.947 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1667637.947 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 88.78% complete, ETA 00:16:38
# Fork: 1 of 1
# Warmup Iteration   1: 17058312.676 ns/op
Iteration   1: 16586010.811 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  16586010.811 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 89.03% complete, ETA 00:16:15
# Fork: 1 of 1
# Warmup Iteration   1: 170886900.424 ns/op
Iteration   1: 166030179.967 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  166030179.967 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 89.29% complete, ETA 00:15:54
# Fork: 1 of 1
# Warmup Iteration   1: 55227.495 ns/op
Iteration   1: 52656.084 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  52656.084 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 89.54% complete, ETA 00:15:31
# Fork: 1 of 1
# Warmup Iteration   1: 60690.629 ns/op
Iteration   1: 56036.221 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  56036.221 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 89.80% complete, ETA 00:15:08
# Fork: 1 of 1
# Warmup Iteration   1: 77884.928 ns/op
Iteration   1: 81474.393 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  81474.393 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 90.05% complete, ETA 00:14:45
# Fork: 1 of 1
# Warmup Iteration   1: 250682.236 ns/op
Iteration   1: 244281.282 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  244281.282 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 90.31% complete, ETA 00:14:22
# Fork: 1 of 1
# Warmup Iteration   1: 2103727.403 ns/op
Iteration   1: 2054922.714 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2054922.714 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 90.56% complete, ETA 00:13:59
# Fork: 1 of 1
# Warmup Iteration   1: 20169278.190 ns/op
Iteration   1: 19910849.241 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  19910849.241 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 90.82% complete, ETA 00:13:37
# Fork: 1 of 1
# Warmup Iteration   1: 194373504.923 ns/op
Iteration   1: 192564175.481 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  192564175.481 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 91.07% complete, ETA 00:13:15
# Fork: 1 of 1
# Warmup Iteration   1: 54306.688 ns/op
Iteration   1: 53603.143 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  53603.143 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 91.33% complete, ETA 00:12:52
# Fork: 1 of 1
# Warmup Iteration   1: 58476.785 ns/op
Iteration   1: 55962.438 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  55962.438 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 91.58% complete, ETA 00:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 85907.853 ns/op
Iteration   1: 84645.111 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  84645.111 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 91.84% complete, ETA 00:12:06
# Fork: 1 of 1
# Warmup Iteration   1: 309340.129 ns/op
Iteration   1: 302556.370 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  302556.370 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 92.09% complete, ETA 00:11:43
# Fork: 1 of 1
# Warmup Iteration   1: 2702258.129 ns/op
Iteration   1: 2646371.084 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2646371.084 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 92.35% complete, ETA 00:11:20
# Fork: 1 of 1
# Warmup Iteration   1: 26306240.501 ns/op
Iteration   1: 25928678.080 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  25928678.080 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 92.60% complete, ETA 00:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 255323453.975 ns/op
Iteration   1: 247966110.610 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  247966110.610 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 92.86% complete, ETA 00:10:36
# Fork: 1 of 1
# Warmup Iteration   1: 53017.308 ns/op
Iteration   1: 53291.558 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  53291.558 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 93.11% complete, ETA 00:10:13
# Fork: 1 of 1
# Warmup Iteration   1: 62386.060 ns/op
Iteration   1: 61329.785 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  61329.785 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 93.37% complete, ETA 00:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 98942.538 ns/op
Iteration   1: 99118.057 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  99118.057 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 93.62% complete, ETA 00:09:27
# Fork: 1 of 1
# Warmup Iteration   1: 426923.406 ns/op
Iteration   1: 414341.809 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  414341.809 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 93.88% complete, ETA 00:09:04
# Fork: 1 of 1
# Warmup Iteration   1: 3804345.413 ns/op
Iteration   1: 3738681.713 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  3738681.713 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 94.13% complete, ETA 00:08:41
# Fork: 1 of 1
# Warmup Iteration   1: 37178890.026 ns/op
Iteration   1: 36318630.127 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  36318630.127 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 94.39% complete, ETA 00:08:19
# Fork: 1 of 1
# Warmup Iteration   1: 372194133.185 ns/op
Iteration   1: 361501358.893 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  361501358.893 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 94.64% complete, ETA 00:07:57
# Fork: 1 of 1
# Warmup Iteration   1: 56159.254 ns/op
Iteration   1: 55687.791 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  55687.791 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 94.90% complete, ETA 00:07:34
# Fork: 1 of 1
# Warmup Iteration   1: 64111.952 ns/op
Iteration   1: 64563.569 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  64563.569 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 95.15% complete, ETA 00:07:11
# Fork: 1 of 1
# Warmup Iteration   1: 124137.781 ns/op
Iteration   1: 122304.735 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  122304.735 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 95.41% complete, ETA 00:06:48
# Fork: 1 of 1
# Warmup Iteration   1: 776331.105 ns/op
Iteration   1: 760613.871 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  760613.871 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 95.66% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 7284894.978 ns/op
Iteration   1: 7159222.011 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  7159222.011 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 95.92% complete, ETA 00:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 70966525.567 ns/op
Iteration   1: 70225601.888 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  70225601.888 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 96.17% complete, ETA 00:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 705730353.133 ns/op
Iteration   1: 697062553.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  697062553.600 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 96.43% complete, ETA 00:05:18
# Fork: 1 of 1
# Warmup Iteration   1: 58951.628 ns/op
Iteration   1: 58679.893 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  58679.893 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 96.68% complete, ETA 00:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 72281.171 ns/op
Iteration   1: 72377.548 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  72377.548 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 96.94% complete, ETA 00:04:32
# Fork: 1 of 1
# Warmup Iteration   1: 182620.263 ns/op
Iteration   1: 178242.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  178242.625 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 97.19% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 1350947.392 ns/op
Iteration   1: 1324986.488 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1324986.488 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 97.45% complete, ETA 00:03:47
# Fork: 1 of 1
# Warmup Iteration   1: 12907258.059 ns/op
Iteration   1: 12734595.219 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  12734595.219 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 97.70% complete, ETA 00:03:24
# Fork: 1 of 1
# Warmup Iteration   1: 126851607.190 ns/op
Iteration   1: 125270438.888 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  125270438.888 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 97.96% complete, ETA 00:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 1270220782.000 ns/op
Iteration   1: 1263907844.875 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1263907844.875 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 98.21% complete, ETA 00:02:39
# Fork: 1 of 1
# Warmup Iteration   1: 61086.556 ns/op
Iteration   1: 59523.832 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  59523.832 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 98.47% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 85764.165 ns/op
Iteration   1: 83600.415 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  83600.415 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 98.72% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 297275.093 ns/op
Iteration   1: 292788.271 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  292788.271 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 98.98% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 2510889.821 ns/op
Iteration   1: 2480527.456 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2480527.456 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 99.23% complete, ETA 00:01:08
# Fork: 1 of 1
# Warmup Iteration   1: 24215431.625 ns/op
Iteration   1: 23855412.317 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  23855412.317 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 99.49% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 239188082.762 ns/op
Iteration   1: 236089387.605 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  236089387.605 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 99.74% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 2373387044.400 ns/op
Iteration   1: 2382008110.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2382008110.200 ns/op


# Run complete. Total time: 02:28:30

Benchmark                           (cpuTokens)  (lineCount)  Mode  Cnt           Score   Error  Units
ReadLinesBenchmark.baseline                   0            1  avgt                3.221          ns/op
ReadLinesBenchmark.baseline                   0           10  avgt               21.226          ns/op
ReadLinesBenchmark.baseline                   0          100  avgt              219.765          ns/op
ReadLinesBenchmark.baseline                   0         1000  avgt             2241.151          ns/op
ReadLinesBenchmark.baseline                   0        10000  avgt            22334.151          ns/op
ReadLinesBenchmark.baseline                   0       100000  avgt           226106.203          ns/op
ReadLinesBenchmark.baseline                   0      1000000  avgt          2252175.412          ns/op
ReadLinesBenchmark.baseline                  10            1  avgt               15.090          ns/op
ReadLinesBenchmark.baseline                  10           10  avgt              145.519          ns/op
ReadLinesBenchmark.baseline                  10          100  avgt             1379.295          ns/op
ReadLinesBenchmark.baseline                  10         1000  avgt            13986.726          ns/op
ReadLinesBenchmark.baseline                  10        10000  avgt           141393.117          ns/op
ReadLinesBenchmark.baseline                  10       100000  avgt          1361345.402          ns/op
ReadLinesBenchmark.baseline                  10      1000000  avgt         16691269.623          ns/op
ReadLinesBenchmark.baseline                  25            1  avgt               45.962          ns/op
ReadLinesBenchmark.baseline                  25           10  avgt              447.850          ns/op
ReadLinesBenchmark.baseline                  25          100  avgt             4426.151          ns/op
ReadLinesBenchmark.baseline                  25         1000  avgt            44581.702          ns/op
ReadLinesBenchmark.baseline                  25        10000  avgt           452141.284          ns/op
ReadLinesBenchmark.baseline                  25       100000  avgt          4471422.235          ns/op
ReadLinesBenchmark.baseline                  25      1000000  avgt         44603087.391          ns/op
ReadLinesBenchmark.baseline                  50            1  avgt              104.229          ns/op
ReadLinesBenchmark.baseline                  50           10  avgt             1030.290          ns/op
ReadLinesBenchmark.baseline                  50          100  avgt             9978.718          ns/op
ReadLinesBenchmark.baseline                  50         1000  avgt           102231.430          ns/op
ReadLinesBenchmark.baseline                  50        10000  avgt           999713.707          ns/op
ReadLinesBenchmark.baseline                  50       100000  avgt         10307630.912          ns/op
ReadLinesBenchmark.baseline                  50      1000000  avgt        103937041.557          ns/op
ReadLinesBenchmark.baseline                 100            1  avgt              215.004          ns/op
ReadLinesBenchmark.baseline                 100           10  avgt             2138.883          ns/op
ReadLinesBenchmark.baseline                 100          100  avgt            21387.156          ns/op
ReadLinesBenchmark.baseline                 100         1000  avgt           214272.532          ns/op
ReadLinesBenchmark.baseline                 100        10000  avgt          2135027.335          ns/op
ReadLinesBenchmark.baseline                 100       100000  avgt         21380517.647          ns/op
ReadLinesBenchmark.baseline                 100      1000000  avgt        213504175.383          ns/op
ReadLinesBenchmark.baseline                 250            1  avgt              546.486          ns/op
ReadLinesBenchmark.baseline                 250           10  avgt             5453.106          ns/op
ReadLinesBenchmark.baseline                 250          100  avgt            54553.627          ns/op
ReadLinesBenchmark.baseline                 250         1000  avgt           546365.737          ns/op
ReadLinesBenchmark.baseline                 250        10000  avgt          5455845.197          ns/op
ReadLinesBenchmark.baseline                 250       100000  avgt         54601290.332          ns/op
ReadLinesBenchmark.baseline                 250      1000000  avgt        545780566.789          ns/op
ReadLinesBenchmark.baseline                 500            1  avgt             1101.564          ns/op
ReadLinesBenchmark.baseline                 500           10  avgt            10996.569          ns/op
ReadLinesBenchmark.baseline                 500          100  avgt           109851.434          ns/op
ReadLinesBenchmark.baseline                 500         1000  avgt          1098250.543          ns/op
ReadLinesBenchmark.baseline                 500        10000  avgt         11045999.832          ns/op
ReadLinesBenchmark.baseline                 500       100000  avgt        109810414.641          ns/op
ReadLinesBenchmark.baseline                 500      1000000  avgt       1099521143.000          ns/op
ReadLinesBenchmark.baseline                1000            1  avgt             2210.813          ns/op
ReadLinesBenchmark.baseline                1000           10  avgt            22093.356          ns/op
ReadLinesBenchmark.baseline                1000          100  avgt           221537.722          ns/op
ReadLinesBenchmark.baseline                1000         1000  avgt          2213457.679          ns/op
ReadLinesBenchmark.baseline                1000        10000  avgt         22055543.467          ns/op
ReadLinesBenchmark.baseline                1000       100000  avgt        220907767.130          ns/op
ReadLinesBenchmark.baseline                1000      1000000  avgt       2221422284.800          ns/op
ReadLinesBenchmark.filesReadBytes             0            1  avgt            43821.800          ns/op
ReadLinesBenchmark.filesReadBytes             0           10  avgt            50931.453          ns/op
ReadLinesBenchmark.filesReadBytes             0          100  avgt            69194.187          ns/op
ReadLinesBenchmark.filesReadBytes             0         1000  avgt           226415.812          ns/op
ReadLinesBenchmark.filesReadBytes             0        10000  avgt          2266682.677          ns/op
ReadLinesBenchmark.filesReadBytes             0       100000  avgt         23489250.643          ns/op
ReadLinesBenchmark.filesReadBytes             0      1000000  avgt        334488935.100          ns/op
ReadLinesBenchmark.filesReadBytes            10            1  avgt            45248.149          ns/op
ReadLinesBenchmark.filesReadBytes            10           10  avgt            51415.622          ns/op
ReadLinesBenchmark.filesReadBytes            10          100  avgt            70929.151          ns/op
ReadLinesBenchmark.filesReadBytes            10         1000  avgt           240711.007          ns/op
ReadLinesBenchmark.filesReadBytes            10        10000  avgt          2415892.368          ns/op
ReadLinesBenchmark.filesReadBytes            10       100000  avgt         25601033.921          ns/op
ReadLinesBenchmark.filesReadBytes            10      1000000  avgt        349899497.931          ns/op
ReadLinesBenchmark.filesReadBytes            25            1  avgt            45215.437          ns/op
ReadLinesBenchmark.filesReadBytes            25           10  avgt            48492.729          ns/op
ReadLinesBenchmark.filesReadBytes            25          100  avgt            75819.259          ns/op
ReadLinesBenchmark.filesReadBytes            25         1000  avgt           270448.413          ns/op
ReadLinesBenchmark.filesReadBytes            25        10000  avgt          2695845.038          ns/op
ReadLinesBenchmark.filesReadBytes            25       100000  avgt         28535757.986          ns/op
ReadLinesBenchmark.filesReadBytes            25      1000000  avgt        281612093.500          ns/op
ReadLinesBenchmark.filesReadBytes            50            1  avgt            46078.879          ns/op
ReadLinesBenchmark.filesReadBytes            50           10  avgt            51700.624          ns/op
ReadLinesBenchmark.filesReadBytes            50          100  avgt            77877.666          ns/op
ReadLinesBenchmark.filesReadBytes            50         1000  avgt           331994.944          ns/op
ReadLinesBenchmark.filesReadBytes            50        10000  avgt          3342527.839          ns/op
ReadLinesBenchmark.filesReadBytes            50       100000  avgt         35847791.011          ns/op
ReadLinesBenchmark.filesReadBytes            50      1000000  avgt        457931527.909          ns/op
ReadLinesBenchmark.filesReadBytes           100            1  avgt            45353.960          ns/op
ReadLinesBenchmark.filesReadBytes           100           10  avgt            50465.771          ns/op
ReadLinesBenchmark.filesReadBytes           100          100  avgt            90966.971          ns/op
ReadLinesBenchmark.filesReadBytes           100         1000  avgt           448476.228          ns/op
ReadLinesBenchmark.filesReadBytes           100        10000  avgt          4479313.171          ns/op
ReadLinesBenchmark.filesReadBytes           100       100000  avgt         46916045.449          ns/op
ReadLinesBenchmark.filesReadBytes           100      1000000  avgt        569677472.778          ns/op
ReadLinesBenchmark.filesReadBytes           250            1  avgt            45716.621          ns/op
ReadLinesBenchmark.filesReadBytes           250           10  avgt            56575.921          ns/op
ReadLinesBenchmark.filesReadBytes           250          100  avgt           117562.599          ns/op
ReadLinesBenchmark.filesReadBytes           250         1000  avgt           792530.245          ns/op
ReadLinesBenchmark.filesReadBytes           250        10000  avgt          7804758.956          ns/op
ReadLinesBenchmark.filesReadBytes           250       100000  avgt         80463706.008          ns/op
ReadLinesBenchmark.filesReadBytes           250      1000000  avgt        928502100.545          ns/op
ReadLinesBenchmark.filesReadBytes           500            1  avgt            50946.344          ns/op
ReadLinesBenchmark.filesReadBytes           500           10  avgt            63856.445          ns/op
ReadLinesBenchmark.filesReadBytes           500          100  avgt           175383.455          ns/op
ReadLinesBenchmark.filesReadBytes           500         1000  avgt          1366345.213          ns/op
ReadLinesBenchmark.filesReadBytes           500        10000  avgt         13403616.867          ns/op
ReadLinesBenchmark.filesReadBytes           500       100000  avgt        135161854.892          ns/op
ReadLinesBenchmark.filesReadBytes           500      1000000  avgt       1552494746.286          ns/op
ReadLinesBenchmark.filesReadBytes          1000            1  avgt            51426.699          ns/op
ReadLinesBenchmark.filesReadBytes          1000           10  avgt            73980.215          ns/op
ReadLinesBenchmark.filesReadBytes          1000          100  avgt           289231.937          ns/op
ReadLinesBenchmark.filesReadBytes          1000         1000  avgt          2505766.137          ns/op
ReadLinesBenchmark.filesReadBytes          1000        10000  avgt         24525669.071          ns/op
ReadLinesBenchmark.filesReadBytes          1000       100000  avgt        246654090.000          ns/op
ReadLinesBenchmark.filesReadBytes          1000      1000000  avgt       2466036325.600          ns/op
ReadLinesBenchmark.filesReadBytes2            0            1  avgt            41018.318          ns/op
ReadLinesBenchmark.filesReadBytes2            0           10  avgt            46237.664          ns/op
ReadLinesBenchmark.filesReadBytes2            0          100  avgt            66721.179          ns/op
ReadLinesBenchmark.filesReadBytes2            0         1000  avgt           246314.779          ns/op
ReadLinesBenchmark.filesReadBytes2            0        10000  avgt          2489273.982          ns/op
ReadLinesBenchmark.filesReadBytes2            0       100000  avgt         24662792.788          ns/op
ReadLinesBenchmark.filesReadBytes2            0      1000000  avgt        335795975.567          ns/op
ReadLinesBenchmark.filesReadBytes2           10            1  avgt            40838.094          ns/op
ReadLinesBenchmark.filesReadBytes2           10           10  avgt            44490.291          ns/op
ReadLinesBenchmark.filesReadBytes2           10          100  avgt            67576.261          ns/op
ReadLinesBenchmark.filesReadBytes2           10         1000  avgt           256340.963          ns/op
ReadLinesBenchmark.filesReadBytes2           10        10000  avgt          2550987.838          ns/op
ReadLinesBenchmark.filesReadBytes2           10       100000  avgt         26699589.680          ns/op
ReadLinesBenchmark.filesReadBytes2           10      1000000  avgt        351943803.828          ns/op
ReadLinesBenchmark.filesReadBytes2           25            1  avgt            41804.162          ns/op
ReadLinesBenchmark.filesReadBytes2           25           10  avgt            46475.562          ns/op
ReadLinesBenchmark.filesReadBytes2           25          100  avgt            74557.736          ns/op
ReadLinesBenchmark.filesReadBytes2           25         1000  avgt           290276.376          ns/op
ReadLinesBenchmark.filesReadBytes2           25        10000  avgt          2842240.217          ns/op
ReadLinesBenchmark.filesReadBytes2           25       100000  avgt         29956355.979          ns/op
ReadLinesBenchmark.filesReadBytes2           25      1000000  avgt        311762511.939          ns/op
ReadLinesBenchmark.filesReadBytes2           50            1  avgt            44791.741          ns/op
ReadLinesBenchmark.filesReadBytes2           50           10  avgt            47371.300          ns/op
ReadLinesBenchmark.filesReadBytes2           50          100  avgt            79017.566          ns/op
ReadLinesBenchmark.filesReadBytes2           50         1000  avgt           353849.177          ns/op
ReadLinesBenchmark.filesReadBytes2           50        10000  avgt          3527662.261          ns/op
ReadLinesBenchmark.filesReadBytes2           50       100000  avgt         37002961.092          ns/op
ReadLinesBenchmark.filesReadBytes2           50      1000000  avgt        364167663.107          ns/op
ReadLinesBenchmark.filesReadBytes2          100            1  avgt            41622.312          ns/op
ReadLinesBenchmark.filesReadBytes2          100           10  avgt            53070.764          ns/op
ReadLinesBenchmark.filesReadBytes2          100          100  avgt            91914.314          ns/op
ReadLinesBenchmark.filesReadBytes2          100         1000  avgt           466043.762          ns/op
ReadLinesBenchmark.filesReadBytes2          100        10000  avgt          4682720.476          ns/op
ReadLinesBenchmark.filesReadBytes2          100       100000  avgt         48311464.193          ns/op
ReadLinesBenchmark.filesReadBytes2          100      1000000  avgt        481172474.286          ns/op
ReadLinesBenchmark.filesReadBytes2          250            1  avgt            42314.887          ns/op
ReadLinesBenchmark.filesReadBytes2          250           10  avgt            52716.460          ns/op
ReadLinesBenchmark.filesReadBytes2          250          100  avgt           115991.871          ns/op
ReadLinesBenchmark.filesReadBytes2          250         1000  avgt           812538.412          ns/op
ReadLinesBenchmark.filesReadBytes2          250        10000  avgt          8018716.490          ns/op
ReadLinesBenchmark.filesReadBytes2          250       100000  avgt         82029140.512          ns/op
ReadLinesBenchmark.filesReadBytes2          250      1000000  avgt        808830688.000          ns/op
ReadLinesBenchmark.filesReadBytes2          500            1  avgt            42687.285          ns/op
ReadLinesBenchmark.filesReadBytes2          500           10  avgt            61634.513          ns/op
ReadLinesBenchmark.filesReadBytes2          500          100  avgt           173299.996          ns/op
ReadLinesBenchmark.filesReadBytes2          500         1000  avgt          1386690.632          ns/op
ReadLinesBenchmark.filesReadBytes2          500        10000  avgt         13653188.426          ns/op
ReadLinesBenchmark.filesReadBytes2          500       100000  avgt        136786159.311          ns/op
ReadLinesBenchmark.filesReadBytes2          500      1000000  avgt       1356384155.500          ns/op
ReadLinesBenchmark.filesReadBytes2         1000            1  avgt            43470.985          ns/op
ReadLinesBenchmark.filesReadBytes2         1000           10  avgt            76428.098          ns/op
ReadLinesBenchmark.filesReadBytes2         1000          100  avgt           288115.748          ns/op
ReadLinesBenchmark.filesReadBytes2         1000         1000  avgt          2526144.232          ns/op
ReadLinesBenchmark.filesReadBytes2         1000        10000  avgt         24714974.785          ns/op
ReadLinesBenchmark.filesReadBytes2         1000       100000  avgt        248304300.805          ns/op
ReadLinesBenchmark.filesReadBytes2         1000      1000000  avgt       2471595713.400          ns/op
ReadLinesBenchmark.filesReadLines             0            1  avgt            51923.447          ns/op
ReadLinesBenchmark.filesReadLines             0           10  avgt            57910.978          ns/op
ReadLinesBenchmark.filesReadLines             0          100  avgt            75381.831          ns/op
ReadLinesBenchmark.filesReadLines             0         1000  avgt           204500.855          ns/op
ReadLinesBenchmark.filesReadLines             0        10000  avgt          1749829.398          ns/op
ReadLinesBenchmark.filesReadLines             0       100000  avgt         16994560.117          ns/op
ReadLinesBenchmark.filesReadLines             0      1000000  avgt        244335978.268          ns/op
ReadLinesBenchmark.filesReadLines            10            1  avgt            53729.089          ns/op
ReadLinesBenchmark.filesReadLines            10           10  avgt            56379.967          ns/op
ReadLinesBenchmark.filesReadLines            10          100  avgt            76705.535          ns/op
ReadLinesBenchmark.filesReadLines            10         1000  avgt           216932.808          ns/op
ReadLinesBenchmark.filesReadLines            10        10000  avgt          1853097.667          ns/op
ReadLinesBenchmark.filesReadLines            10       100000  avgt         18567806.622          ns/op
ReadLinesBenchmark.filesReadLines            10      1000000  avgt        257452288.077          ns/op
ReadLinesBenchmark.filesReadLines            25            1  avgt            52039.002          ns/op
ReadLinesBenchmark.filesReadLines            25           10  avgt            60398.778          ns/op
ReadLinesBenchmark.filesReadLines            25          100  avgt            81094.404          ns/op
ReadLinesBenchmark.filesReadLines            25         1000  avgt           248607.040          ns/op
ReadLinesBenchmark.filesReadLines            25        10000  avgt          2169048.997          ns/op
ReadLinesBenchmark.filesReadLines            25       100000  avgt         21867870.614          ns/op
ReadLinesBenchmark.filesReadLines            25      1000000  avgt        295273584.176          ns/op
ReadLinesBenchmark.filesReadLines            50            1  avgt            51978.094          ns/op
ReadLinesBenchmark.filesReadLines            50           10  avgt            59365.714          ns/op
ReadLinesBenchmark.filesReadLines            50          100  avgt            86727.138          ns/op
ReadLinesBenchmark.filesReadLines            50         1000  avgt           307682.474          ns/op
ReadLinesBenchmark.filesReadLines            50        10000  avgt          2821720.205          ns/op
ReadLinesBenchmark.filesReadLines            50       100000  avgt         28863976.268          ns/op
ReadLinesBenchmark.filesReadLines            50      1000000  avgt        383780421.370          ns/op
ReadLinesBenchmark.filesReadLines           100            1  avgt            50665.955          ns/op
ReadLinesBenchmark.filesReadLines           100           10  avgt            62095.289          ns/op
ReadLinesBenchmark.filesReadLines           100          100  avgt           100830.318          ns/op
ReadLinesBenchmark.filesReadLines           100         1000  avgt           423675.405          ns/op
ReadLinesBenchmark.filesReadLines           100        10000  avgt          3911429.770          ns/op
ReadLinesBenchmark.filesReadLines           100       100000  avgt         39752157.262          ns/op
ReadLinesBenchmark.filesReadLines           100      1000000  avgt        483500180.545          ns/op
ReadLinesBenchmark.filesReadLines           250            1  avgt            54833.362          ns/op
ReadLinesBenchmark.filesReadLines           250           10  avgt            63725.503          ns/op
ReadLinesBenchmark.filesReadLines           250          100  avgt           121858.302          ns/op
ReadLinesBenchmark.filesReadLines           250         1000  avgt           772324.108          ns/op
ReadLinesBenchmark.filesReadLines           250        10000  avgt          7299938.969          ns/op
ReadLinesBenchmark.filesReadLines           250       100000  avgt         73280073.642          ns/op
ReadLinesBenchmark.filesReadLines           250      1000000  avgt        819602369.231          ns/op
ReadLinesBenchmark.filesReadLines           500            1  avgt            56953.092          ns/op
ReadLinesBenchmark.filesReadLines           500           10  avgt            69826.846          ns/op
ReadLinesBenchmark.filesReadLines           500          100  avgt           178274.500          ns/op
ReadLinesBenchmark.filesReadLines           500         1000  avgt          1346029.607          ns/op
ReadLinesBenchmark.filesReadLines           500        10000  avgt         12899531.675          ns/op
ReadLinesBenchmark.filesReadLines           500       100000  avgt        128648975.564          ns/op
ReadLinesBenchmark.filesReadLines           500      1000000  avgt       1396776510.875          ns/op
ReadLinesBenchmark.filesReadLines          1000            1  avgt            60375.812          ns/op
ReadLinesBenchmark.filesReadLines          1000           10  avgt            84657.977          ns/op
ReadLinesBenchmark.filesReadLines          1000          100  avgt           293318.979          ns/op
ReadLinesBenchmark.filesReadLines          1000         1000  avgt          2485587.484          ns/op
ReadLinesBenchmark.filesReadLines          1000        10000  avgt         24081156.853          ns/op
ReadLinesBenchmark.filesReadLines          1000       100000  avgt        239627145.857          ns/op
ReadLinesBenchmark.filesReadLines          1000      1000000  avgt       2415045503.200          ns/op
ReadLinesBenchmark.forEachIndirect            0            1  avgt            53225.973          ns/op
ReadLinesBenchmark.forEachIndirect            0           10  avgt            53723.675          ns/op
ReadLinesBenchmark.forEachIndirect            0          100  avgt            74137.099          ns/op
ReadLinesBenchmark.forEachIndirect            0         1000  avgt           195395.121          ns/op
ReadLinesBenchmark.forEachIndirect            0        10000  avgt          1537294.016          ns/op
ReadLinesBenchmark.forEachIndirect            0       100000  avgt         15245977.160          ns/op
ReadLinesBenchmark.forEachIndirect            0      1000000  avgt        147220663.706          ns/op
ReadLinesBenchmark.forEachIndirect           10            1  avgt            52506.125          ns/op
ReadLinesBenchmark.forEachIndirect           10           10  avgt            54463.445          ns/op
ReadLinesBenchmark.forEachIndirect           10          100  avgt            75618.432          ns/op
ReadLinesBenchmark.forEachIndirect           10         1000  avgt           209653.212          ns/op
ReadLinesBenchmark.forEachIndirect           10        10000  avgt          1645934.398          ns/op
ReadLinesBenchmark.forEachIndirect           10       100000  avgt         16588993.076          ns/op
ReadLinesBenchmark.forEachIndirect           10      1000000  avgt        162945152.532          ns/op
ReadLinesBenchmark.forEachIndirect           25            1  avgt            50716.447          ns/op
ReadLinesBenchmark.forEachIndirect           25           10  avgt            57298.479          ns/op
ReadLinesBenchmark.forEachIndirect           25          100  avgt            80211.290          ns/op
ReadLinesBenchmark.forEachIndirect           25         1000  avgt           243744.934          ns/op
ReadLinesBenchmark.forEachIndirect           25        10000  avgt          1994263.012          ns/op
ReadLinesBenchmark.forEachIndirect           25       100000  avgt         19814583.840          ns/op
ReadLinesBenchmark.forEachIndirect           25      1000000  avgt        189924593.434          ns/op
ReadLinesBenchmark.forEachIndirect           50            1  avgt            51103.799          ns/op
ReadLinesBenchmark.forEachIndirect           50           10  avgt            59349.242          ns/op
ReadLinesBenchmark.forEachIndirect           50          100  avgt            88366.913          ns/op
ReadLinesBenchmark.forEachIndirect           50         1000  avgt           300195.140          ns/op
ReadLinesBenchmark.forEachIndirect           50        10000  avgt          2568981.647          ns/op
ReadLinesBenchmark.forEachIndirect           50       100000  avgt         25337664.808          ns/op
ReadLinesBenchmark.forEachIndirect           50      1000000  avgt        247181023.341          ns/op
ReadLinesBenchmark.forEachIndirect          100            1  avgt            52679.326          ns/op
ReadLinesBenchmark.forEachIndirect          100           10  avgt            60289.126          ns/op
ReadLinesBenchmark.forEachIndirect          100          100  avgt            98416.452          ns/op
ReadLinesBenchmark.forEachIndirect          100         1000  avgt           416993.324          ns/op
ReadLinesBenchmark.forEachIndirect          100        10000  avgt          3740413.162          ns/op
ReadLinesBenchmark.forEachIndirect          100       100000  avgt         36427865.338          ns/op
ReadLinesBenchmark.forEachIndirect          100      1000000  avgt        357835488.893          ns/op
ReadLinesBenchmark.forEachIndirect          250            1  avgt            55358.011          ns/op
ReadLinesBenchmark.forEachIndirect          250           10  avgt            65564.710          ns/op
ReadLinesBenchmark.forEachIndirect          250          100  avgt           120092.593          ns/op
ReadLinesBenchmark.forEachIndirect          250         1000  avgt           753844.594          ns/op
ReadLinesBenchmark.forEachIndirect          250        10000  avgt          7122540.881          ns/op
ReadLinesBenchmark.forEachIndirect          250       100000  avgt         70353690.923          ns/op
ReadLinesBenchmark.forEachIndirect          250      1000000  avgt        695554329.067          ns/op
ReadLinesBenchmark.forEachIndirect          500            1  avgt            58422.075          ns/op
ReadLinesBenchmark.forEachIndirect          500           10  avgt            72359.409          ns/op
ReadLinesBenchmark.forEachIndirect          500          100  avgt           178347.825          ns/op
ReadLinesBenchmark.forEachIndirect          500         1000  avgt          1327605.638          ns/op
ReadLinesBenchmark.forEachIndirect          500        10000  avgt         12772045.190          ns/op
ReadLinesBenchmark.forEachIndirect          500       100000  avgt        125344132.100          ns/op
ReadLinesBenchmark.forEachIndirect          500      1000000  avgt       1253838358.625          ns/op
ReadLinesBenchmark.forEachIndirect         1000            1  avgt            59973.193          ns/op
ReadLinesBenchmark.forEachIndirect         1000           10  avgt            82431.872          ns/op
ReadLinesBenchmark.forEachIndirect         1000          100  avgt           291043.636          ns/op
ReadLinesBenchmark.forEachIndirect         1000         1000  avgt          2478843.213          ns/op
ReadLinesBenchmark.forEachIndirect         1000        10000  avgt         23664311.170          ns/op
ReadLinesBenchmark.forEachIndirect         1000       100000  avgt        236124861.140          ns/op
ReadLinesBenchmark.forEachIndirect         1000      1000000  avgt       2371281821.600          ns/op
ReadLinesBenchmark.forEachInline              0            1  avgt            51160.398          ns/op
ReadLinesBenchmark.forEachInline              0           10  avgt            57930.078          ns/op
ReadLinesBenchmark.forEachInline              0          100  avgt            73242.644          ns/op
ReadLinesBenchmark.forEachInline              0         1000  avgt           195717.619          ns/op
ReadLinesBenchmark.forEachInline              0        10000  avgt          1575387.936          ns/op
ReadLinesBenchmark.forEachInline              0       100000  avgt         15173821.976          ns/op
ReadLinesBenchmark.forEachInline              0      1000000  avgt        152457862.500          ns/op
ReadLinesBenchmark.forEachInline             10            1  avgt            57273.335          ns/op
ReadLinesBenchmark.forEachInline             10           10  avgt            56987.088          ns/op
ReadLinesBenchmark.forEachInline             10          100  avgt            76510.436          ns/op
ReadLinesBenchmark.forEachInline             10         1000  avgt           209276.598          ns/op
ReadLinesBenchmark.forEachInline             10        10000  avgt          1654606.957          ns/op
ReadLinesBenchmark.forEachInline             10       100000  avgt         16478058.341          ns/op
ReadLinesBenchmark.forEachInline             10      1000000  avgt        160428608.048          ns/op
ReadLinesBenchmark.forEachInline             25            1  avgt            52312.872          ns/op
ReadLinesBenchmark.forEachInline             25           10  avgt            54000.205          ns/op
ReadLinesBenchmark.forEachInline             25          100  avgt            77497.818          ns/op
ReadLinesBenchmark.forEachInline             25         1000  avgt           241921.230          ns/op
ReadLinesBenchmark.forEachInline             25        10000  avgt          1983336.127          ns/op
ReadLinesBenchmark.forEachInline             25       100000  avgt         19938763.235          ns/op
ReadLinesBenchmark.forEachInline             25      1000000  avgt        190077246.774          ns/op
ReadLinesBenchmark.forEachInline             50            1  avgt            54240.725          ns/op
ReadLinesBenchmark.forEachInline             50           10  avgt            54894.315          ns/op
ReadLinesBenchmark.forEachInline             50          100  avgt            85683.257          ns/op
ReadLinesBenchmark.forEachInline             50         1000  avgt           299033.197          ns/op
ReadLinesBenchmark.forEachInline             50        10000  avgt          2574142.111          ns/op
ReadLinesBenchmark.forEachInline             50       100000  avgt         25237113.562          ns/op
ReadLinesBenchmark.forEachInline             50      1000000  avgt        249308047.171          ns/op
ReadLinesBenchmark.forEachInline            100            1  avgt            55336.578          ns/op
ReadLinesBenchmark.forEachInline            100           10  avgt            60310.001          ns/op
ReadLinesBenchmark.forEachInline            100          100  avgt            97073.129          ns/op
ReadLinesBenchmark.forEachInline            100         1000  avgt           416053.509          ns/op
ReadLinesBenchmark.forEachInline            100        10000  avgt          3694486.983          ns/op
ReadLinesBenchmark.forEachInline            100       100000  avgt         36844481.283          ns/op
ReadLinesBenchmark.forEachInline            100      1000000  avgt        360254811.893          ns/op
ReadLinesBenchmark.forEachInline            250            1  avgt            53991.257          ns/op
ReadLinesBenchmark.forEachInline            250           10  avgt            61132.000          ns/op
ReadLinesBenchmark.forEachInline            250          100  avgt           121242.850          ns/op
ReadLinesBenchmark.forEachInline            250         1000  avgt           758899.090          ns/op
ReadLinesBenchmark.forEachInline            250        10000  avgt          7163013.968          ns/op
ReadLinesBenchmark.forEachInline            250       100000  avgt         69495809.313          ns/op
ReadLinesBenchmark.forEachInline            250      1000000  avgt        694786816.067          ns/op
ReadLinesBenchmark.forEachInline            500            1  avgt            55596.335          ns/op
ReadLinesBenchmark.forEachInline            500           10  avgt            71369.883          ns/op
ReadLinesBenchmark.forEachInline            500          100  avgt           178186.163          ns/op
ReadLinesBenchmark.forEachInline            500         1000  avgt          1331328.001          ns/op
ReadLinesBenchmark.forEachInline            500        10000  avgt         12738025.433          ns/op
ReadLinesBenchmark.forEachInline            500       100000  avgt        124919350.815          ns/op
ReadLinesBenchmark.forEachInline            500      1000000  avgt       1250047325.500          ns/op
ReadLinesBenchmark.forEachInline           1000            1  avgt            58983.942          ns/op
ReadLinesBenchmark.forEachInline           1000           10  avgt            85931.046          ns/op
ReadLinesBenchmark.forEachInline           1000          100  avgt           291228.788          ns/op
ReadLinesBenchmark.forEachInline           1000         1000  avgt          2480576.824          ns/op
ReadLinesBenchmark.forEachInline           1000        10000  avgt         23877669.504          ns/op
ReadLinesBenchmark.forEachInline           1000       100000  avgt        236653716.605          ns/op
ReadLinesBenchmark.forEachInline           1000      1000000  avgt       2364811521.200          ns/op
ReadLinesBenchmark.forEachJava                0            1  avgt            53666.248          ns/op
ReadLinesBenchmark.forEachJava                0           10  avgt            53675.287          ns/op
ReadLinesBenchmark.forEachJava                0          100  avgt            76351.464          ns/op
ReadLinesBenchmark.forEachJava                0         1000  avgt           198843.310          ns/op
ReadLinesBenchmark.forEachJava                0        10000  avgt          1596362.607          ns/op
ReadLinesBenchmark.forEachJava                0       100000  avgt         15650979.986          ns/op
ReadLinesBenchmark.forEachJava                0      1000000  avgt        149466177.731          ns/op
ReadLinesBenchmark.forEachJava               10            1  avgt            52963.445          ns/op
ReadLinesBenchmark.forEachJava               10           10  avgt            56414.961          ns/op
ReadLinesBenchmark.forEachJava               10          100  avgt            75500.412          ns/op
ReadLinesBenchmark.forEachJava               10         1000  avgt           211526.691          ns/op
ReadLinesBenchmark.forEachJava               10        10000  avgt          1667637.947          ns/op
ReadLinesBenchmark.forEachJava               10       100000  avgt         16586010.811          ns/op
ReadLinesBenchmark.forEachJava               10      1000000  avgt        166030179.967          ns/op
ReadLinesBenchmark.forEachJava               25            1  avgt            52656.084          ns/op
ReadLinesBenchmark.forEachJava               25           10  avgt            56036.221          ns/op
ReadLinesBenchmark.forEachJava               25          100  avgt            81474.393          ns/op
ReadLinesBenchmark.forEachJava               25         1000  avgt           244281.282          ns/op
ReadLinesBenchmark.forEachJava               25        10000  avgt          2054922.714          ns/op
ReadLinesBenchmark.forEachJava               25       100000  avgt         19910849.241          ns/op
ReadLinesBenchmark.forEachJava               25      1000000  avgt        192564175.481          ns/op
ReadLinesBenchmark.forEachJava               50            1  avgt            53603.143          ns/op
ReadLinesBenchmark.forEachJava               50           10  avgt            55962.438          ns/op
ReadLinesBenchmark.forEachJava               50          100  avgt            84645.111          ns/op
ReadLinesBenchmark.forEachJava               50         1000  avgt           302556.370          ns/op
ReadLinesBenchmark.forEachJava               50        10000  avgt          2646371.084          ns/op
ReadLinesBenchmark.forEachJava               50       100000  avgt         25928678.080          ns/op
ReadLinesBenchmark.forEachJava               50      1000000  avgt        247966110.610          ns/op
ReadLinesBenchmark.forEachJava              100            1  avgt            53291.558          ns/op
ReadLinesBenchmark.forEachJava              100           10  avgt            61329.785          ns/op
ReadLinesBenchmark.forEachJava              100          100  avgt            99118.057          ns/op
ReadLinesBenchmark.forEachJava              100         1000  avgt           414341.809          ns/op
ReadLinesBenchmark.forEachJava              100        10000  avgt          3738681.713          ns/op
ReadLinesBenchmark.forEachJava              100       100000  avgt         36318630.127          ns/op
ReadLinesBenchmark.forEachJava              100      1000000  avgt        361501358.893          ns/op
ReadLinesBenchmark.forEachJava              250            1  avgt            55687.791          ns/op
ReadLinesBenchmark.forEachJava              250           10  avgt            64563.569          ns/op
ReadLinesBenchmark.forEachJava              250          100  avgt           122304.735          ns/op
ReadLinesBenchmark.forEachJava              250         1000  avgt           760613.871          ns/op
ReadLinesBenchmark.forEachJava              250        10000  avgt          7159222.011          ns/op
ReadLinesBenchmark.forEachJava              250       100000  avgt         70225601.888          ns/op
ReadLinesBenchmark.forEachJava              250      1000000  avgt        697062553.600          ns/op
ReadLinesBenchmark.forEachJava              500            1  avgt            58679.893          ns/op
ReadLinesBenchmark.forEachJava              500           10  avgt            72377.548          ns/op
ReadLinesBenchmark.forEachJava              500          100  avgt           178242.625          ns/op
ReadLinesBenchmark.forEachJava              500         1000  avgt          1324986.488          ns/op
ReadLinesBenchmark.forEachJava              500        10000  avgt         12734595.219          ns/op
ReadLinesBenchmark.forEachJava              500       100000  avgt        125270438.888          ns/op
ReadLinesBenchmark.forEachJava              500      1000000  avgt       1263907844.875          ns/op
ReadLinesBenchmark.forEachJava             1000            1  avgt            59523.832          ns/op
ReadLinesBenchmark.forEachJava             1000           10  avgt            83600.415          ns/op
ReadLinesBenchmark.forEachJava             1000          100  avgt           292788.271          ns/op
ReadLinesBenchmark.forEachJava             1000         1000  avgt          2480527.456          ns/op
ReadLinesBenchmark.forEachJava             1000        10000  avgt         23855412.317          ns/op
ReadLinesBenchmark.forEachJava             1000       100000  avgt        236089387.605          ns/op
ReadLinesBenchmark.forEachJava             1000      1000000  avgt       2382008110.200          ns/op

Benchmark result is saved to jmh.json
