# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 0.00% complete, ETA 02:10:40
# Fork: 1 of 1
# Warmup Iteration   1: 2.994 ns/op
Iteration   1: 3.240 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  3.240 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 0.26% complete, ETA 02:12:57
# Fork: 1 of 1
# Warmup Iteration   1: 20.835 ns/op
Iteration   1: 20.698 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  20.698 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 0.51% complete, ETA 02:12:44
# Fork: 1 of 1
# Warmup Iteration   1: 212.604 ns/op
Iteration   1: 211.501 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  211.501 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 0.77% complete, ETA 02:12:29
# Fork: 1 of 1
# Warmup Iteration   1: 2057.480 ns/op
Iteration   1: 2212.626 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2212.626 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 1.02% complete, ETA 02:12:16
# Fork: 1 of 1
# Warmup Iteration   1: 21872.164 ns/op
Iteration   1: 22111.824 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22111.824 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 1.28% complete, ETA 02:12:17
# Fork: 1 of 1
# Warmup Iteration   1: 220351.368 ns/op
Iteration   1: 225958.017 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  225958.017 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 1.53% complete, ETA 02:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 2349369.472 ns/op
Iteration   1: 2203678.906 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2203678.906 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 1.79% complete, ETA 02:24:46
# Fork: 1 of 1
# Warmup Iteration   1: 15.027 ns/op
Iteration   1: 15.060 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  15.060 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 2.04% complete, ETA 02:22:42
# Fork: 1 of 1
# Warmup Iteration   1: 145.126 ns/op
Iteration   1: 144.748 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  144.748 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 2.30% complete, ETA 02:21:01
# Fork: 1 of 1
# Warmup Iteration   1: 1372.319 ns/op
Iteration   1: 1369.933 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1369.933 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 2.55% complete, ETA 02:19:37
# Fork: 1 of 1
# Warmup Iteration   1: 13744.621 ns/op
Iteration   1: 13804.184 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  13804.184 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 2.81% complete, ETA 02:18:25
# Fork: 1 of 1
# Warmup Iteration   1: 137738.931 ns/op
Iteration   1: 139955.976 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  139955.976 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 3.06% complete, ETA 02:17:30
# Fork: 1 of 1
# Warmup Iteration   1: 1411160.129 ns/op
Iteration   1: 1366520.380 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1366520.380 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 3.32% complete, ETA 02:17:14
# Fork: 1 of 1
# Warmup Iteration   1: 14229220.287 ns/op
Iteration   1: 14246706.255 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  14246706.255 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 3.57% complete, ETA 02:22:09
# Fork: 1 of 1
# Warmup Iteration   1: 45.990 ns/op
Iteration   1: 45.883 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  45.883 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 3.83% complete, ETA 02:20:53
# Fork: 1 of 1
# Warmup Iteration   1: 448.452 ns/op
Iteration   1: 449.118 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  449.118 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 4.08% complete, ETA 02:19:44
# Fork: 1 of 1
# Warmup Iteration   1: 4419.569 ns/op
Iteration   1: 4416.930 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  4416.930 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 4.34% complete, ETA 02:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 44447.273 ns/op
Iteration   1: 44253.427 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  44253.427 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 4.59% complete, ETA 02:17:44
# Fork: 1 of 1
# Warmup Iteration   1: 442607.563 ns/op
Iteration   1: 440468.856 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  440468.856 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 4.85% complete, ETA 02:16:54
# Fork: 1 of 1
# Warmup Iteration   1: 4460831.556 ns/op
Iteration   1: 4457448.130 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  4457448.130 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 5.10% complete, ETA 02:16:30
# Fork: 1 of 1
# Warmup Iteration   1: 44665444.094 ns/op
Iteration   1: 44580715.853 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  44580715.853 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 5.36% complete, ETA 02:19:30
# Fork: 1 of 1
# Warmup Iteration   1: 104.036 ns/op
Iteration   1: 104.256 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  104.256 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 5.61% complete, ETA 02:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 1031.608 ns/op
Iteration   1: 1030.945 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1030.945 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 5.87% complete, ETA 02:17:36
# Fork: 1 of 1
# Warmup Iteration   1: 10234.561 ns/op
Iteration   1: 10231.567 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  10231.567 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 6.12% complete, ETA 02:16:45
# Fork: 1 of 1
# Warmup Iteration   1: 102755.381 ns/op
Iteration   1: 102896.698 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  102896.698 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 6.38% complete, ETA 02:15:57
# Fork: 1 of 1
# Warmup Iteration   1: 1028243.200 ns/op
Iteration   1: 1026183.404 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1026183.404 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 6.63% complete, ETA 02:15:13
# Fork: 1 of 1
# Warmup Iteration   1: 10302992.683 ns/op
Iteration   1: 10287418.372 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  10287418.372 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 6.89% complete, ETA 02:14:48
# Fork: 1 of 1
# Warmup Iteration   1: 102442845.214 ns/op
Iteration   1: 103168830.052 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  103168830.052 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 7.14% complete, ETA 02:16:51
# Fork: 1 of 1
# Warmup Iteration   1: 214.783 ns/op
Iteration   1: 214.885 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  214.885 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 7.40% complete, ETA 02:16:02
# Fork: 1 of 1
# Warmup Iteration   1: 2146.087 ns/op
Iteration   1: 2140.836 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2140.836 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 7.65% complete, ETA 02:15:15
# Fork: 1 of 1
# Warmup Iteration   1: 21346.438 ns/op
Iteration   1: 21305.699 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21305.699 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 7.91% complete, ETA 02:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 214138.394 ns/op
Iteration   1: 213155.318 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213155.318 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 8.16% complete, ETA 02:13:46
# Fork: 1 of 1
# Warmup Iteration   1: 2139086.226 ns/op
Iteration   1: 2132979.542 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2132979.542 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 8.42% complete, ETA 02:13:06
# Fork: 1 of 1
# Warmup Iteration   1: 21388744.545 ns/op
Iteration   1: 21353005.648 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  21353005.648 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 8.67% complete, ETA 02:12:41
# Fork: 1 of 1
# Warmup Iteration   1: 213875400.936 ns/op
Iteration   1: 213666392.532 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  213666392.532 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 8.93% complete, ETA 02:14:13
# Fork: 1 of 1
# Warmup Iteration   1: 548.118 ns/op
Iteration   1: 547.564 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  547.564 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 9.18% complete, ETA 02:13:29
# Fork: 1 of 1
# Warmup Iteration   1: 5468.261 ns/op
Iteration   1: 5459.651 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  5459.651 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 9.44% complete, ETA 02:12:47
# Fork: 1 of 1
# Warmup Iteration   1: 54721.688 ns/op
Iteration   1: 54594.365 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  54594.365 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 9.69% complete, ETA 02:12:06
# Fork: 1 of 1
# Warmup Iteration   1: 547520.941 ns/op
Iteration   1: 545647.854 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  545647.854 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 9.95% complete, ETA 02:11:26
# Fork: 1 of 1
# Warmup Iteration   1: 5472009.301 ns/op
Iteration   1: 5464932.319 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  5464932.319 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 10.20% complete, ETA 02:10:49
# Fork: 1 of 1
# Warmup Iteration   1: 54610966.495 ns/op
Iteration   1: 54769219.836 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  54769219.836 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 10.46% complete, ETA 02:10:24
# Fork: 1 of 1
# Warmup Iteration   1: 547491137.474 ns/op
Iteration   1: 546802697.789 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  546802697.789 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 10.71% complete, ETA 02:11:40
# Fork: 1 of 1
# Warmup Iteration   1: 1102.736 ns/op
Iteration   1: 1100.456 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1100.456 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 10.97% complete, ETA 02:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 11013.470 ns/op
Iteration   1: 11023.256 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  11023.256 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 11.22% complete, ETA 02:10:21
# Fork: 1 of 1
# Warmup Iteration   1: 110077.297 ns/op
Iteration   1: 110067.777 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  110067.777 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 11.48% complete, ETA 02:09:43
# Fork: 1 of 1
# Warmup Iteration   1: 1102453.194 ns/op
Iteration   1: 1100333.108 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1100333.108 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 11.73% complete, ETA 02:09:06
# Fork: 1 of 1
# Warmup Iteration   1: 11010065.176 ns/op
Iteration   1: 10993165.705 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  10993165.705 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 11.99% complete, ETA 02:08:31
# Fork: 1 of 1
# Warmup Iteration   1: 110826220.648 ns/op
Iteration   1: 110110029.220 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  110110029.220 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 12.24% complete, ETA 02:08:07
# Fork: 1 of 1
# Warmup Iteration   1: 1102043128.800 ns/op
Iteration   1: 1098687177.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  1098687177.800 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 12.50% complete, ETA 02:09:17
# Fork: 1 of 1
# Warmup Iteration   1: 2212.998 ns/op
Iteration   1: 2218.197 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2218.197 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 12.76% complete, ETA 02:08:39
# Fork: 1 of 1
# Warmup Iteration   1: 22098.702 ns/op
Iteration   1: 22083.092 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22083.092 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 13.01% complete, ETA 02:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 221143.326 ns/op
Iteration   1: 220696.241 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  220696.241 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 13.27% complete, ETA 02:07:26
# Fork: 1 of 1
# Warmup Iteration   1: 2213586.722 ns/op
Iteration   1: 2205672.442 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2205672.442 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 13.52% complete, ETA 02:06:51
# Fork: 1 of 1
# Warmup Iteration   1: 22060190.696 ns/op
Iteration   1: 22040651.289 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  22040651.289 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 13.78% complete, ETA 02:06:18
# Fork: 1 of 1
# Warmup Iteration   1: 221048130.130 ns/op
Iteration   1: 220735818.587 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  220735818.587 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.baseline
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 14.03% complete, ETA 02:05:54
# Fork: 1 of 1
# Warmup Iteration   1: 2214299067.800 ns/op
Iteration   1: 2208179043.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.baseline":
  2208179043.600 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 14.29% complete, ETA 02:06:50
# Fork: 1 of 1
# Warmup Iteration   1: 3549.468 ns/op
Iteration   1: 3391.090 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3391.090 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 14.54% complete, ETA 02:06:14
# Fork: 1 of 1
# Warmup Iteration   1: 5328.020 ns/op
Iteration   1: 5087.148 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  5087.148 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 14.80% complete, ETA 02:05:40
# Fork: 1 of 1
# Warmup Iteration   1: 21707.105 ns/op
Iteration   1: 21262.073 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  21262.073 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 15.05% complete, ETA 02:05:05
# Fork: 1 of 1
# Warmup Iteration   1: 190524.556 ns/op
Iteration   1: 181349.628 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  181349.628 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 15.31% complete, ETA 02:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 2269938.814 ns/op
Iteration   1: 2200693.962 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2200693.962 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 15.56% complete, ETA 02:03:59
# Fork: 1 of 1
# Warmup Iteration   1: 24708031.793 ns/op
Iteration   1: 23886921.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  23886921.200 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 15.82% complete, ETA 02:03:34
# Fork: 1 of 1
# Warmup Iteration   1: 411308339.920 ns/op
Iteration   1: 336278917.065 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  336278917.065 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 16.07% complete, ETA 02:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 3605.388 ns/op
Iteration   1: 3433.885 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3433.885 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 16.33% complete, ETA 02:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 5418.551 ns/op
Iteration   1: 5132.018 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  5132.018 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 16.58% complete, ETA 02:03:05
# Fork: 1 of 1
# Warmup Iteration   1: 22747.765 ns/op
Iteration   1: 21675.038 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  21675.038 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 16.84% complete, ETA 02:02:32
# Fork: 1 of 1
# Warmup Iteration   1: 204082.900 ns/op
Iteration   1: 194088.497 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  194088.497 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 17.09% complete, ETA 02:01:59
# Fork: 1 of 1
# Warmup Iteration   1: 2455016.976 ns/op
Iteration   1: 2365993.735 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2365993.735 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 17.35% complete, ETA 02:01:28
# Fork: 1 of 1
# Warmup Iteration   1: 26000680.216 ns/op
Iteration   1: 25051394.408 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  25051394.408 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 17.60% complete, ETA 02:01:03
# Fork: 1 of 1
# Warmup Iteration   1: 257476441.000 ns/op
Iteration   1: 251640845.925 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  251640845.925 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 17.86% complete, ETA 02:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 3614.677 ns/op
Iteration   1: 3428.719 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3428.719 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 18.11% complete, ETA 02:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 5739.338 ns/op
Iteration   1: 5487.523 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  5487.523 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 18.37% complete, ETA 02:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 25776.087 ns/op
Iteration   1: 24678.612 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  24678.612 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 18.62% complete, ETA 01:59:54
# Fork: 1 of 1
# Warmup Iteration   1: 234427.289 ns/op
Iteration   1: 225008.409 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  225008.409 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 18.88% complete, ETA 01:59:23
# Fork: 1 of 1
# Warmup Iteration   1: 2709587.537 ns/op
Iteration   1: 2629391.896 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2629391.896 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 19.13% complete, ETA 01:58:53
# Fork: 1 of 1
# Warmup Iteration   1: 29452693.203 ns/op
Iteration   1: 28601052.280 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  28601052.280 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 19.39% complete, ETA 01:58:28
# Fork: 1 of 1
# Warmup Iteration   1: 461874059.545 ns/op
Iteration   1: 382247995.704 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  382247995.704 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 19.64% complete, ETA 01:58:52
# Fork: 1 of 1
# Warmup Iteration   1: 3714.307 ns/op
Iteration   1: 3524.453 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3524.453 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 19.90% complete, ETA 01:58:20
# Fork: 1 of 1
# Warmup Iteration   1: 6420.944 ns/op
Iteration   1: 6149.055 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  6149.055 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 20.15% complete, ETA 01:57:49
# Fork: 1 of 1
# Warmup Iteration   1: 32390.842 ns/op
Iteration   1: 31342.288 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  31342.288 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 20.41% complete, ETA 01:57:18
# Fork: 1 of 1
# Warmup Iteration   1: 295324.768 ns/op
Iteration   1: 285197.316 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  285197.316 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 20.66% complete, ETA 01:56:48
# Fork: 1 of 1
# Warmup Iteration   1: 3348262.570 ns/op
Iteration   1: 3273842.721 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3273842.721 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 20.92% complete, ETA 01:56:18
# Fork: 1 of 1
# Warmup Iteration   1: 36271995.062 ns/op
Iteration   1: 35557065.457 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  35557065.457 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 21.17% complete, ETA 01:55:54
# Fork: 1 of 1
# Warmup Iteration   1: 548467614.632 ns/op
Iteration   1: 447855577.652 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  447855577.652 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 21.43% complete, ETA 01:56:14
# Fork: 1 of 1
# Warmup Iteration   1: 3808.655 ns/op
Iteration   1: 3635.008 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3635.008 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 21.68% complete, ETA 01:55:43
# Fork: 1 of 1
# Warmup Iteration   1: 7468.904 ns/op
Iteration   1: 7197.672 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  7197.672 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 21.94% complete, ETA 01:55:13
# Fork: 1 of 1
# Warmup Iteration   1: 43332.513 ns/op
Iteration   1: 42298.132 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  42298.132 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 22.19% complete, ETA 01:54:43
# Fork: 1 of 1
# Warmup Iteration   1: 408965.614 ns/op
Iteration   1: 396058.335 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  396058.335 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 22.45% complete, ETA 01:54:13
# Fork: 1 of 1
# Warmup Iteration   1: 4467933.469 ns/op
Iteration   1: 4373730.648 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  4373730.648 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 22.70% complete, ETA 01:53:44
# Fork: 1 of 1
# Warmup Iteration   1: 47680876.786 ns/op
Iteration   1: 46724407.428 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  46724407.428 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 22.96% complete, ETA 01:53:20
# Fork: 1 of 1
# Warmup Iteration   1: 473728982.591 ns/op
Iteration   1: 464335304.682 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  464335304.682 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 23.21% complete, ETA 01:53:35
# Fork: 1 of 1
# Warmup Iteration   1: 4109.445 ns/op
Iteration   1: 3955.729 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  3955.729 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 23.47% complete, ETA 01:53:06
# Fork: 1 of 1
# Warmup Iteration   1: 10915.933 ns/op
Iteration   1: 10622.681 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  10622.681 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 23.72% complete, ETA 01:52:36
# Fork: 1 of 1
# Warmup Iteration   1: 77195.131 ns/op
Iteration   1: 75877.707 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  75877.707 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 23.98% complete, ETA 01:52:07
# Fork: 1 of 1
# Warmup Iteration   1: 746618.725 ns/op
Iteration   1: 731190.606 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  731190.606 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 24.23% complete, ETA 01:51:37
# Fork: 1 of 1
# Warmup Iteration   1: 7873024.363 ns/op
Iteration   1: 7763030.106 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  7763030.106 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 24.49% complete, ETA 01:51:09
# Fork: 1 of 1
# Warmup Iteration   1: 81879118.472 ns/op
Iteration   1: 80431308.568 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  80431308.568 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 24.74% complete, ETA 01:50:45
# Fork: 1 of 1
# Warmup Iteration   1: 814305098.154 ns/op
Iteration   1: 795106876.923 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  795106876.923 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 25.00% complete, ETA 01:50:58
# Fork: 1 of 1
# Warmup Iteration   1: 4741.806 ns/op
Iteration   1: 4571.494 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  4571.494 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 25.26% complete, ETA 01:50:29
# Fork: 1 of 1
# Warmup Iteration   1: 16409.018 ns/op
Iteration   1: 16178.767 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  16178.767 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 25.51% complete, ETA 01:50:00
# Fork: 1 of 1
# Warmup Iteration   1: 133332.079 ns/op
Iteration   1: 131711.155 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  131711.155 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 25.77% complete, ETA 01:49:31
# Fork: 1 of 1
# Warmup Iteration   1: 1318189.708 ns/op
Iteration   1: 1294056.280 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  1294056.280 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 26.02% complete, ETA 01:49:03
# Fork: 1 of 1
# Warmup Iteration   1: 13497661.491 ns/op
Iteration   1: 13267792.918 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  13267792.918 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 26.28% complete, ETA 01:48:35
# Fork: 1 of 1
# Warmup Iteration   1: 137486732.822 ns/op
Iteration   1: 135452242.865 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  135452242.865 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 26.53% complete, ETA 01:48:10
# Fork: 1 of 1
# Warmup Iteration   1: 1377547137.000 ns/op
Iteration   1: 1347631329.125 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  1347631329.125 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 26.79% complete, ETA 01:48:22
# Fork: 1 of 1
# Warmup Iteration   1: 5797.610 ns/op
Iteration   1: 5613.155 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  5613.155 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 27.04% complete, ETA 01:47:54
# Fork: 1 of 1
# Warmup Iteration   1: 27826.801 ns/op
Iteration   1: 27389.319 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  27389.319 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 27.30% complete, ETA 01:47:25
# Fork: 1 of 1
# Warmup Iteration   1: 246061.824 ns/op
Iteration   1: 243300.410 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  243300.410 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 27.55% complete, ETA 01:46:57
# Fork: 1 of 1
# Warmup Iteration   1: 2440131.686 ns/op
Iteration   1: 2410236.975 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2410236.975 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 27.81% complete, ETA 01:46:29
# Fork: 1 of 1
# Warmup Iteration   1: 24703616.486 ns/op
Iteration   1: 24370243.146 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  24370243.146 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 28.06% complete, ETA 01:46:02
# Fork: 1 of 1
# Warmup Iteration   1: 250829780.700 ns/op
Iteration   1: 246809068.195 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  246809068.195 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 28.32% complete, ETA 01:45:38
# Fork: 1 of 1
# Warmup Iteration   1: 2522158013.750 ns/op
Iteration   1: 2465194943.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes":
  2465194943.200 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 28.57% complete, ETA 01:45:49
# Fork: 1 of 1
# Warmup Iteration   1: 2305.029 ns/op
Iteration   1: 2195.387 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2195.387 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 28.83% complete, ETA 01:45:21
# Fork: 1 of 1
# Warmup Iteration   1: 3952.045 ns/op
Iteration   1: 3835.287 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  3835.287 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 29.08% complete, ETA 01:44:53
# Fork: 1 of 1
# Warmup Iteration   1: 19777.618 ns/op
Iteration   1: 19321.771 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  19321.771 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 29.34% complete, ETA 01:44:25
# Fork: 1 of 1
# Warmup Iteration   1: 204320.487 ns/op
Iteration   1: 201303.964 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  201303.964 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 29.59% complete, ETA 01:43:57
# Fork: 1 of 1
# Warmup Iteration   1: 2410460.693 ns/op
Iteration   1: 2365355.351 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2365355.351 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 29.85% complete, ETA 01:43:30
# Fork: 1 of 1
# Warmup Iteration   1: 25209861.806 ns/op
Iteration   1: 24877851.542 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  24877851.542 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 30.10% complete, ETA 01:43:06
# Fork: 1 of 1
# Warmup Iteration   1: 258514745.256 ns/op
Iteration   1: 292547420.257 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  292547420.257 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 30.36% complete, ETA 01:43:09
# Fork: 1 of 1
# Warmup Iteration   1: 2311.022 ns/op
Iteration   1: 2210.838 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2210.838 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 30.61% complete, ETA 01:42:41
# Fork: 1 of 1
# Warmup Iteration   1: 4528.871 ns/op
Iteration   1: 4364.547 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  4364.547 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 30.87% complete, ETA 01:42:14
# Fork: 1 of 1
# Warmup Iteration   1: 21204.586 ns/op
Iteration   1: 20699.770 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  20699.770 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 31.12% complete, ETA 01:41:46
# Fork: 1 of 1
# Warmup Iteration   1: 214718.790 ns/op
Iteration   1: 210483.902 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  210483.902 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 31.38% complete, ETA 01:41:19
# Fork: 1 of 1
# Warmup Iteration   1: 2527528.113 ns/op
Iteration   1: 2490833.401 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2490833.401 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 31.63% complete, ETA 01:40:52
# Fork: 1 of 1
# Warmup Iteration   1: 26999777.881 ns/op
Iteration   1: 26412294.931 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  26412294.931 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 31.89% complete, ETA 01:40:28
# Fork: 1 of 1
# Warmup Iteration   1: 278363790.324 ns/op
Iteration   1: 307977592.091 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  307977592.091 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 32.14% complete, ETA 01:40:30
# Fork: 1 of 1
# Warmup Iteration   1: 2338.622 ns/op
Iteration   1: 2226.337 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2226.337 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 32.40% complete, ETA 01:40:02
# Fork: 1 of 1
# Warmup Iteration   1: 4411.862 ns/op
Iteration   1: 4272.791 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  4272.791 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 32.65% complete, ETA 01:39:35
# Fork: 1 of 1
# Warmup Iteration   1: 24808.708 ns/op
Iteration   1: 24186.946 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  24186.946 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 32.91% complete, ETA 01:39:08
# Fork: 1 of 1
# Warmup Iteration   1: 247103.573 ns/op
Iteration   1: 243246.101 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  243246.101 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 33.16% complete, ETA 01:38:41
# Fork: 1 of 1
# Warmup Iteration   1: 2897279.583 ns/op
Iteration   1: 2838823.136 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2838823.136 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 33.42% complete, ETA 01:38:15
# Fork: 1 of 1
# Warmup Iteration   1: 30480917.173 ns/op
Iteration   1: 29973473.111 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  29973473.111 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 33.67% complete, ETA 01:37:51
# Fork: 1 of 1
# Warmup Iteration   1: 315300321.406 ns/op
Iteration   1: 306944823.758 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  306944823.758 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 33.93% complete, ETA 01:37:50
# Fork: 1 of 1
# Warmup Iteration   1: 2465.980 ns/op
Iteration   1: 2335.080 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2335.080 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 34.18% complete, ETA 01:37:23
# Fork: 1 of 1
# Warmup Iteration   1: 5311.977 ns/op
Iteration   1: 5116.256 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  5116.256 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 34.44% complete, ETA 01:36:56
# Fork: 1 of 1
# Warmup Iteration   1: 30504.239 ns/op
Iteration   1: 30050.390 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  30050.390 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 34.69% complete, ETA 01:36:29
# Fork: 1 of 1
# Warmup Iteration   1: 307218.098 ns/op
Iteration   1: 303280.501 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  303280.501 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 34.95% complete, ETA 01:36:03
# Fork: 1 of 1
# Warmup Iteration   1: 3477021.591 ns/op
Iteration   1: 3415399.847 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  3415399.847 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 35.20% complete, ETA 01:35:37
# Fork: 1 of 1
# Warmup Iteration   1: 36935981.834 ns/op
Iteration   1: 36378260.778 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  36378260.778 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 35.46% complete, ETA 01:35:13
# Fork: 1 of 1
# Warmup Iteration   1: 579648767.944 ns/op
Iteration   1: 452800873.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  452800873.000 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 35.71% complete, ETA 01:35:11
# Fork: 1 of 1
# Warmup Iteration   1: 2705.761 ns/op
Iteration   1: 2577.026 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2577.026 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 35.97% complete, ETA 01:34:45
# Fork: 1 of 1
# Warmup Iteration   1: 6293.232 ns/op
Iteration   1: 6113.511 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  6113.511 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 36.22% complete, ETA 01:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 41968.017 ns/op
Iteration   1: 41178.936 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  41178.936 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 36.48% complete, ETA 01:33:52
# Fork: 1 of 1
# Warmup Iteration   1: 422149.657 ns/op
Iteration   1: 416223.449 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  416223.449 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 36.73% complete, ETA 01:33:25
# Fork: 1 of 1
# Warmup Iteration   1: 4641280.793 ns/op
Iteration   1: 4569204.181 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  4569204.181 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 36.99% complete, ETA 01:32:59
# Fork: 1 of 1
# Warmup Iteration   1: 48406088.870 ns/op
Iteration   1: 48070187.555 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  48070187.555 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 37.24% complete, ETA 01:32:36
# Fork: 1 of 1
# Warmup Iteration   1: 700721124.000 ns/op
Iteration   1: 569224971.722 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  569224971.722 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 37.50% complete, ETA 01:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 2919.051 ns/op
Iteration   1: 2738.008 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2738.008 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 37.76% complete, ETA 01:32:06
# Fork: 1 of 1
# Warmup Iteration   1: 9748.518 ns/op
Iteration   1: 9560.864 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  9560.864 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 38.01% complete, ETA 01:31:40
# Fork: 1 of 1
# Warmup Iteration   1: 75444.832 ns/op
Iteration   1: 74348.049 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  74348.049 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 38.27% complete, ETA 01:31:14
# Fork: 1 of 1
# Warmup Iteration   1: 762786.900 ns/op
Iteration   1: 749512.288 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  749512.288 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 38.52% complete, ETA 01:30:48
# Fork: 1 of 1
# Warmup Iteration   1: 7953711.037 ns/op
Iteration   1: 7823308.167 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  7823308.167 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 38.78% complete, ETA 01:30:22
# Fork: 1 of 1
# Warmup Iteration   1: 82655640.213 ns/op
Iteration   1: 81519107.244 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  81519107.244 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 39.03% complete, ETA 01:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 1078407723.300 ns/op
Iteration   1: 928396494.545 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  928396494.545 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 39.29% complete, ETA 01:29:54
# Fork: 1 of 1
# Warmup Iteration   1: 3422.309 ns/op
Iteration   1: 3298.506 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  3298.506 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 39.54% complete, ETA 01:29:28
# Fork: 1 of 1
# Warmup Iteration   1: 15269.032 ns/op
Iteration   1: 14994.248 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  14994.248 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 39.80% complete, ETA 01:29:02
# Fork: 1 of 1
# Warmup Iteration   1: 132054.886 ns/op
Iteration   1: 130684.654 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  130684.654 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 40.05% complete, ETA 01:28:36
# Fork: 1 of 1
# Warmup Iteration   1: 1330316.116 ns/op
Iteration   1: 1312576.496 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  1312576.496 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 40.31% complete, ETA 01:28:10
# Fork: 1 of 1
# Warmup Iteration   1: 13657810.632 ns/op
Iteration   1: 13452438.294 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  13452438.294 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 40.56% complete, ETA 01:27:45
# Fork: 1 of 1
# Warmup Iteration   1: 138385885.027 ns/op
Iteration   1: 136434611.270 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  136434611.270 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 40.82% complete, ETA 01:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 1754692248.833 ns/op
Iteration   1: 1509242050.857 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  1509242050.857 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 41.07% complete, ETA 01:27:16
# Fork: 1 of 1
# Warmup Iteration   1: 5126.727 ns/op
Iteration   1: 4940.719 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  4940.719 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 41.33% complete, ETA 01:26:50
# Fork: 1 of 1
# Warmup Iteration   1: 26524.118 ns/op
Iteration   1: 26122.711 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  26122.711 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 41.58% complete, ETA 01:26:24
# Fork: 1 of 1
# Warmup Iteration   1: 245130.752 ns/op
Iteration   1: 242549.149 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  242549.149 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 41.84% complete, ETA 01:25:59
# Fork: 1 of 1
# Warmup Iteration   1: 2454345.135 ns/op
Iteration   1: 2428150.771 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2428150.771 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 42.09% complete, ETA 01:25:33
# Fork: 1 of 1
# Warmup Iteration   1: 24858733.787 ns/op
Iteration   1: 24534000.260 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  24534000.260 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 42.35% complete, ETA 01:25:08
# Fork: 1 of 1
# Warmup Iteration   1: 251658057.000 ns/op
Iteration   1: 247232069.317 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  247232069.317 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 42.60% complete, ETA 01:24:45
# Fork: 1 of 1
# Warmup Iteration   1: 2623978355.000 ns/op
Iteration   1: 2470255457.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadBytes2":
  2470255457.800 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 42.86% complete, ETA 01:24:40
# Fork: 1 of 1
# Warmup Iteration   1: 4726.764 ns/op
Iteration   1: 4481.808 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  4481.808 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 43.11% complete, ETA 01:24:15
# Fork: 1 of 1
# Warmup Iteration   1: 5995.150 ns/op
Iteration   1: 5631.325 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  5631.325 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 43.37% complete, ETA 01:23:49
# Fork: 1 of 1
# Warmup Iteration   1: 20578.864 ns/op
Iteration   1: 19422.821 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  19422.821 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 43.62% complete, ETA 01:23:24
# Fork: 1 of 1
# Warmup Iteration   1: 164763.750 ns/op
Iteration   1: 155601.914 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  155601.914 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 43.88% complete, ETA 01:22:58
# Fork: 1 of 1
# Warmup Iteration   1: 1740761.895 ns/op
Iteration   1: 1663978.317 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1663978.317 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 44.13% complete, ETA 01:22:33
# Fork: 1 of 1
# Warmup Iteration   1: 17605599.786 ns/op
Iteration   1: 16965522.215 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  16965522.215 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 44.39% complete, ETA 01:22:10
# Fork: 1 of 1
# Warmup Iteration   1: 266892270.868 ns/op
Iteration   1: 247430200.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  247430200.000 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 44.64% complete, ETA 01:22:01
# Fork: 1 of 1
# Warmup Iteration   1: 4704.149 ns/op
Iteration   1: 4438.257 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  4438.257 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 44.90% complete, ETA 01:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 6110.300 ns/op
Iteration   1: 5793.986 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  5793.986 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 45.15% complete, ETA 01:21:10
# Fork: 1 of 1
# Warmup Iteration   1: 21442.784 ns/op
Iteration   1: 20399.516 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  20399.516 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 45.41% complete, ETA 01:20:45
# Fork: 1 of 1
# Warmup Iteration   1: 174763.118 ns/op
Iteration   1: 165791.593 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  165791.593 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 45.66% complete, ETA 01:20:20
# Fork: 1 of 1
# Warmup Iteration   1: 1845441.348 ns/op
Iteration   1: 1756152.811 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1756152.811 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 45.92% complete, ETA 01:19:55
# Fork: 1 of 1
# Warmup Iteration   1: 19131842.411 ns/op
Iteration   1: 18435988.617 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  18435988.617 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 46.17% complete, ETA 01:19:31
# Fork: 1 of 1
# Warmup Iteration   1: 250079210.452 ns/op
Iteration   1: 264264078.737 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  264264078.737 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 46.43% complete, ETA 01:19:22
# Fork: 1 of 1
# Warmup Iteration   1: 4744.721 ns/op
Iteration   1: 4480.269 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  4480.269 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 46.68% complete, ETA 01:18:56
# Fork: 1 of 1
# Warmup Iteration   1: 6469.110 ns/op
Iteration   1: 6145.681 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  6145.681 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 46.94% complete, ETA 01:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 24805.835 ns/op
Iteration   1: 23748.813 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  23748.813 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 47.19% complete, ETA 01:18:06
# Fork: 1 of 1
# Warmup Iteration   1: 208124.040 ns/op
Iteration   1: 197445.727 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  197445.727 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 47.45% complete, ETA 01:17:41
# Fork: 1 of 1
# Warmup Iteration   1: 2194987.709 ns/op
Iteration   1: 2114306.118 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2114306.118 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 47.70% complete, ETA 01:17:16
# Fork: 1 of 1
# Warmup Iteration   1: 22315189.782 ns/op
Iteration   1: 21612627.419 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  21612627.419 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 47.96% complete, ETA 01:16:53
# Fork: 1 of 1
# Warmup Iteration   1: 303764670.606 ns/op
Iteration   1: 297271984.824 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  297271984.824 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 48.21% complete, ETA 01:16:42
# Fork: 1 of 1
# Warmup Iteration   1: 4754.704 ns/op
Iteration   1: 4528.764 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  4528.764 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 48.47% complete, ETA 01:16:17
# Fork: 1 of 1
# Warmup Iteration   1: 6969.009 ns/op
Iteration   1: 6668.491 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  6668.491 ns/op


# JMH 1.17.4 (released 332 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 48.72% complete, ETA 01:15:52
# Fork: 1 of 1
# Warmup Iteration   1: 30585.741 ns/op
Iteration   1: 29684.359 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  29684.359 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 48.98% complete, ETA 01:15:27
# Fork: 1 of 1
# Warmup Iteration   1: 263963.284 ns/op
Iteration   1: 254608.846 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  254608.846 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 49.23% complete, ETA 01:15:02
# Fork: 1 of 1
# Warmup Iteration   1: 2812870.024 ns/op
Iteration   1: 2730866.640 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2730866.640 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 49.49% complete, ETA 01:14:38
# Fork: 1 of 1
# Warmup Iteration   1: 29446117.026 ns/op
Iteration   1: 28728303.971 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  28728303.971 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 49.74% complete, ETA 01:14:14
# Fork: 1 of 1
# Warmup Iteration   1: 388578850.077 ns/op
Iteration   1: 366586149.750 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  366586149.750 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 50.00% complete, ETA 01:14:03
# Fork: 1 of 1
# Warmup Iteration   1: 4914.486 ns/op
Iteration   1: 4651.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  4651.176 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 50.26% complete, ETA 01:13:38
# Fork: 1 of 1
# Warmup Iteration   1: 8043.535 ns/op
Iteration   1: 7751.718 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  7751.718 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 50.51% complete, ETA 01:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 42325.397 ns/op
Iteration   1: 41225.084 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  41225.084 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 50.77% complete, ETA 01:12:48
# Fork: 1 of 1
# Warmup Iteration   1: 377420.483 ns/op
Iteration   1: 366864.614 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  366864.614 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 51.02% complete, ETA 01:12:24
# Fork: 1 of 1
# Warmup Iteration   1: 3900783.477 ns/op
Iteration   1: 3832796.736 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  3832796.736 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 51.28% complete, ETA 01:11:59
# Fork: 1 of 1
# Warmup Iteration   1: 40585888.279 ns/op
Iteration   1: 39715151.143 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  39715151.143 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 51.53% complete, ETA 01:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 493900721.476 ns/op
Iteration   1: 486982888.227 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  486982888.227 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 51.79% complete, ETA 01:11:24
# Fork: 1 of 1
# Warmup Iteration   1: 5436.066 ns/op
Iteration   1: 5168.367 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  5168.367 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 52.04% complete, ETA 01:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 11466.987 ns/op
Iteration   1: 11164.894 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  11164.894 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 52.30% complete, ETA 01:10:35
# Fork: 1 of 1
# Warmup Iteration   1: 75657.003 ns/op
Iteration   1: 74674.302 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  74674.302 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 52.55% complete, ETA 01:10:10
# Fork: 1 of 1
# Warmup Iteration   1: 716572.505 ns/op
Iteration   1: 704625.438 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  704625.438 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 52.81% complete, ETA 01:09:46
# Fork: 1 of 1
# Warmup Iteration   1: 7329539.234 ns/op
Iteration   1: 7165054.595 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  7165054.595 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 53.06% complete, ETA 01:09:21
# Fork: 1 of 1
# Warmup Iteration   1: 74918919.694 ns/op
Iteration   1: 73635568.985 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  73635568.985 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 53.32% complete, ETA 01:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 856928230.917 ns/op
Iteration   1: 826045977.923 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  826045977.923 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 53.57% complete, ETA 01:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 5815.898 ns/op
Iteration   1: 5556.427 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  5556.427 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 53.83% complete, ETA 01:08:21
# Fork: 1 of 1
# Warmup Iteration   1: 17189.848 ns/op
Iteration   1: 16828.733 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  16828.733 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 54.08% complete, ETA 01:07:57
# Fork: 1 of 1
# Warmup Iteration   1: 132464.199 ns/op
Iteration   1: 130253.186 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  130253.186 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 54.34% complete, ETA 01:07:32
# Fork: 1 of 1
# Warmup Iteration   1: 1281033.787 ns/op
Iteration   1: 1258173.568 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1258173.568 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 54.59% complete, ETA 01:07:08
# Fork: 1 of 1
# Warmup Iteration   1: 12947111.805 ns/op
Iteration   1: 12710052.114 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  12710052.114 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 54.85% complete, ETA 01:06:44
# Fork: 1 of 1
# Warmup Iteration   1: 130517744.701 ns/op
Iteration   1: 128410448.474 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  128410448.474 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 55.10% complete, ETA 01:06:20
# Fork: 1 of 1
# Warmup Iteration   1: 1408555287.375 ns/op
Iteration   1: 1323526875.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  1323526875.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 55.36% complete, ETA 01:06:08
# Fork: 1 of 1
# Warmup Iteration   1: 6980.941 ns/op
Iteration   1: 6736.227 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  6736.227 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 55.61% complete, ETA 01:05:44
# Fork: 1 of 1
# Warmup Iteration   1: 28411.362 ns/op
Iteration   1: 27986.022 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  27986.022 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 55.87% complete, ETA 01:05:19
# Fork: 1 of 1
# Warmup Iteration   1: 245296.086 ns/op
Iteration   1: 241976.240 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  241976.240 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 56.12% complete, ETA 01:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 2408673.962 ns/op
Iteration   1: 2376043.344 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2376043.344 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 56.38% complete, ETA 01:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 24162081.684 ns/op
Iteration   1: 23818041.055 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  23818041.055 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 56.63% complete, ETA 01:04:06
# Fork: 1 of 1
# Warmup Iteration   1: 243773071.762 ns/op
Iteration   1: 242312776.595 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  242312776.595 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 56.89% complete, ETA 01:03:44
# Fork: 1 of 1
# Warmup Iteration   1: 2608867316.750 ns/op
Iteration   1: 2407840869.400 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.filesReadLines":
  2407840869.400 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 57.14% complete, ETA 01:03:31
# Fork: 1 of 1
# Warmup Iteration   1: 4598.757 ns/op
Iteration   1: 4383.231 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4383.231 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 57.40% complete, ETA 01:03:07
# Fork: 1 of 1
# Warmup Iteration   1: 5897.140 ns/op
Iteration   1: 5633.898 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  5633.898 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 57.65% complete, ETA 01:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 19915.434 ns/op
Iteration   1: 18863.305 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  18863.305 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 57.91% complete, ETA 01:02:18
# Fork: 1 of 1
# Warmup Iteration   1: 154931.155 ns/op
Iteration   1: 147086.250 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  147086.250 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 58.16% complete, ETA 01:01:54
# Fork: 1 of 1
# Warmup Iteration   1: 1523313.058 ns/op
Iteration   1: 1458111.562 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1458111.562 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 58.42% complete, ETA 01:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 15830851.163 ns/op
Iteration   1: 15249452.155 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  15249452.155 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 58.67% complete, ETA 01:01:06
# Fork: 1 of 1
# Warmup Iteration   1: 151924455.515 ns/op
Iteration   1: 149000790.176 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  149000790.176 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 58.93% complete, ETA 01:00:51
# Fork: 1 of 1
# Warmup Iteration   1: 4661.499 ns/op
Iteration   1: 4408.296 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4408.296 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 59.18% complete, ETA 01:00:27
# Fork: 1 of 1
# Warmup Iteration   1: 5915.737 ns/op
Iteration   1: 5679.501 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  5679.501 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 59.44% complete, ETA 01:00:03
# Fork: 1 of 1
# Warmup Iteration   1: 20807.926 ns/op
Iteration   1: 19935.295 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  19935.295 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 59.69% complete, ETA 00:59:39
# Fork: 1 of 1
# Warmup Iteration   1: 166509.634 ns/op
Iteration   1: 160567.365 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  160567.365 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 59.95% complete, ETA 00:59:15
# Fork: 1 of 1
# Warmup Iteration   1: 1624774.681 ns/op
Iteration   1: 1570275.039 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1570275.039 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 60.20% complete, ETA 00:58:51
# Fork: 1 of 1
# Warmup Iteration   1: 17005075.985 ns/op
Iteration   1: 16569411.546 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  16569411.546 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 60.46% complete, ETA 00:58:28
# Fork: 1 of 1
# Warmup Iteration   1: 168275108.583 ns/op
Iteration   1: 163054490.468 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  163054490.468 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 60.71% complete, ETA 00:58:12
# Fork: 1 of 1
# Warmup Iteration   1: 4678.258 ns/op
Iteration   1: 4467.906 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4467.906 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 60.97% complete, ETA 00:57:48
# Fork: 1 of 1
# Warmup Iteration   1: 6256.802 ns/op
Iteration   1: 6013.935 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  6013.935 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 61.22% complete, ETA 00:57:24
# Fork: 1 of 1
# Warmup Iteration   1: 24125.449 ns/op
Iteration   1: 23334.422 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  23334.422 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 61.48% complete, ETA 00:57:00
# Fork: 1 of 1
# Warmup Iteration   1: 197592.425 ns/op
Iteration   1: 191961.999 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  191961.999 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 61.73% complete, ETA 00:56:36
# Fork: 1 of 1
# Warmup Iteration   1: 1959551.382 ns/op
Iteration   1: 1873464.955 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1873464.955 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 61.99% complete, ETA 00:56:12
# Fork: 1 of 1
# Warmup Iteration   1: 20132249.588 ns/op
Iteration   1: 19692786.429 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  19692786.429 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 62.24% complete, ETA 00:55:49
# Fork: 1 of 1
# Warmup Iteration   1: 199206530.020 ns/op
Iteration   1: 194544186.115 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  194544186.115 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 62.50% complete, ETA 00:55:33
# Fork: 1 of 1
# Warmup Iteration   1: 4819.294 ns/op
Iteration   1: 4599.330 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4599.330 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 62.76% complete, ETA 00:55:09
# Fork: 1 of 1
# Warmup Iteration   1: 6882.458 ns/op
Iteration   1: 6588.498 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  6588.498 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 63.01% complete, ETA 00:54:45
# Fork: 1 of 1
# Warmup Iteration   1: 29695.380 ns/op
Iteration   1: 28765.366 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  28765.366 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 63.27% complete, ETA 00:54:21
# Fork: 1 of 1
# Warmup Iteration   1: 255314.873 ns/op
Iteration   1: 249614.091 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  249614.091 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 63.52% complete, ETA 00:53:57
# Fork: 1 of 1
# Warmup Iteration   1: 2546275.741 ns/op
Iteration   1: 2498688.679 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  2498688.679 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 63.78% complete, ETA 00:53:33
# Fork: 1 of 1
# Warmup Iteration   1: 25724031.941 ns/op
Iteration   1: 25312974.657 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  25312974.657 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 64.03% complete, ETA 00:53:10
# Fork: 1 of 1
# Warmup Iteration   1: 258256233.718 ns/op
Iteration   1: 249867415.707 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  249867415.707 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 64.29% complete, ETA 00:52:54
# Fork: 1 of 1
# Warmup Iteration   1: 4840.474 ns/op
Iteration   1: 4624.018 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4624.018 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 64.54% complete, ETA 00:52:30
# Fork: 1 of 1
# Warmup Iteration   1: 8053.449 ns/op
Iteration   1: 7755.203 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  7755.203 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 64.80% complete, ETA 00:52:06
# Fork: 1 of 1
# Warmup Iteration   1: 40769.307 ns/op
Iteration   1: 39929.564 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  39929.564 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 65.05% complete, ETA 00:51:42
# Fork: 1 of 1
# Warmup Iteration   1: 369019.338 ns/op
Iteration   1: 361519.534 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  361519.534 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 65.31% complete, ETA 00:51:19
# Fork: 1 of 1
# Warmup Iteration   1: 3690517.752 ns/op
Iteration   1: 3635919.744 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  3635919.744 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 65.56% complete, ETA 00:50:55
# Fork: 1 of 1
# Warmup Iteration   1: 36838157.717 ns/op
Iteration   1: 36157245.245 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  36157245.245 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 65.82% complete, ETA 00:50:32
# Fork: 1 of 1
# Warmup Iteration   1: 370474663.963 ns/op
Iteration   1: 362776825.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  362776825.000 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 66.07% complete, ETA 00:50:15
# Fork: 1 of 1
# Warmup Iteration   1: 5230.736 ns/op
Iteration   1: 4998.656 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  4998.656 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 66.33% complete, ETA 00:49:51
# Fork: 1 of 1
# Warmup Iteration   1: 11504.030 ns/op
Iteration   1: 11170.971 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  11170.971 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 66.58% complete, ETA 00:49:27
# Fork: 1 of 1
# Warmup Iteration   1: 74976.644 ns/op
Iteration   1: 73946.227 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  73946.227 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 66.84% complete, ETA 00:49:03
# Fork: 1 of 1
# Warmup Iteration   1: 706921.885 ns/op
Iteration   1: 698506.922 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  698506.922 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 67.09% complete, ETA 00:48:40
# Fork: 1 of 1
# Warmup Iteration   1: 7035647.733 ns/op
Iteration   1: 6913545.615 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  6913545.615 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 67.35% complete, ETA 00:48:16
# Fork: 1 of 1
# Warmup Iteration   1: 70250926.343 ns/op
Iteration   1: 69501707.868 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  69501707.868 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 67.60% complete, ETA 00:47:53
# Fork: 1 of 1
# Warmup Iteration   1: 704796400.067 ns/op
Iteration   1: 691855586.333 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  691855586.333 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 67.86% complete, ETA 00:47:36
# Fork: 1 of 1
# Warmup Iteration   1: 5829.567 ns/op
Iteration   1: 5553.534 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  5553.534 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 68.11% complete, ETA 00:47:12
# Fork: 1 of 1
# Warmup Iteration   1: 17036.564 ns/op
Iteration   1: 16821.412 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  16821.412 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 68.37% complete, ETA 00:46:49
# Fork: 1 of 1
# Warmup Iteration   1: 131750.733 ns/op
Iteration   1: 129582.075 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  129582.075 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 68.62% complete, ETA 00:46:25
# Fork: 1 of 1
# Warmup Iteration   1: 1273415.761 ns/op
Iteration   1: 1253863.351 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1253863.351 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 68.88% complete, ETA 00:46:01
# Fork: 1 of 1
# Warmup Iteration   1: 12715287.174 ns/op
Iteration   1: 12538356.627 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  12538356.627 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 69.13% complete, ETA 00:45:38
# Fork: 1 of 1
# Warmup Iteration   1: 126508170.138 ns/op
Iteration   1: 125047023.888 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  125047023.888 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 69.39% complete, ETA 00:45:15
# Fork: 1 of 1
# Warmup Iteration   1: 1265630935.375 ns/op
Iteration   1: 1247422042.333 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  1247422042.333 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 69.64% complete, ETA 00:44:58
# Fork: 1 of 1
# Warmup Iteration   1: 6860.625 ns/op
Iteration   1: 6614.483 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  6614.483 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 69.90% complete, ETA 00:44:34
# Fork: 1 of 1
# Warmup Iteration   1: 28145.806 ns/op
Iteration   1: 27793.422 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  27793.422 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 70.15% complete, ETA 00:44:10
# Fork: 1 of 1
# Warmup Iteration   1: 244065.218 ns/op
Iteration   1: 241017.950 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  241017.950 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 70.41% complete, ETA 00:43:47
# Fork: 1 of 1
# Warmup Iteration   1: 2389403.803 ns/op
Iteration   1: 2364950.393 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  2364950.393 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 70.66% complete, ETA 00:43:23
# Fork: 1 of 1
# Warmup Iteration   1: 23874813.270 ns/op
Iteration   1: 23639103.627 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  23639103.627 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 70.92% complete, ETA 00:43:00
# Fork: 1 of 1
# Warmup Iteration   1: 237683113.419 ns/op
Iteration   1: 236683344.419 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  236683344.419 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 71.17% complete, ETA 00:42:37
# Fork: 1 of 1
# Warmup Iteration   1: 2385427524.600 ns/op
Iteration   1: 2360937278.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachIndirect":
  2360937278.600 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 71.43% complete, ETA 00:42:20
# Fork: 1 of 1
# Warmup Iteration   1: 4813.852 ns/op
Iteration   1: 4558.318 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4558.318 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 71.68% complete, ETA 00:41:57
# Fork: 1 of 1
# Warmup Iteration   1: 5841.895 ns/op
Iteration   1: 5554.248 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  5554.248 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 71.94% complete, ETA 00:41:33
# Fork: 1 of 1
# Warmup Iteration   1: 19639.182 ns/op
Iteration   1: 18400.029 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  18400.029 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 72.19% complete, ETA 00:41:10
# Fork: 1 of 1
# Warmup Iteration   1: 155359.143 ns/op
Iteration   1: 148033.044 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  148033.044 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 72.45% complete, ETA 00:40:46
# Fork: 1 of 1
# Warmup Iteration   1: 1555860.666 ns/op
Iteration   1: 1486187.468 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1486187.468 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 72.70% complete, ETA 00:40:23
# Fork: 1 of 1
# Warmup Iteration   1: 15818833.648 ns/op
Iteration   1: 15213282.067 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  15213282.067 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 72.96% complete, ETA 00:40:00
# Fork: 1 of 1
# Warmup Iteration   1: 160029971.857 ns/op
Iteration   1: 154669713.123 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  154669713.123 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 73.21% complete, ETA 00:39:41
# Fork: 1 of 1
# Warmup Iteration   1: 4663.448 ns/op
Iteration   1: 4408.746 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4408.746 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 73.47% complete, ETA 00:39:18
# Fork: 1 of 1
# Warmup Iteration   1: 5900.818 ns/op
Iteration   1: 5675.086 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  5675.086 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 73.72% complete, ETA 00:38:54
# Fork: 1 of 1
# Warmup Iteration   1: 20857.675 ns/op
Iteration   1: 19920.035 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  19920.035 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 73.98% complete, ETA 00:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 168061.358 ns/op
Iteration   1: 161175.739 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  161175.739 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 74.23% complete, ETA 00:38:07
# Fork: 1 of 1
# Warmup Iteration   1: 1623859.861 ns/op
Iteration   1: 1564976.044 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1564976.044 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 74.49% complete, ETA 00:37:44
# Fork: 1 of 1
# Warmup Iteration   1: 16953680.649 ns/op
Iteration   1: 16464086.877 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  16464086.877 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 74.74% complete, ETA 00:37:21
# Fork: 1 of 1
# Warmup Iteration   1: 164642208.934 ns/op
Iteration   1: 161092514.714 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  161092514.714 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 75.00% complete, ETA 00:37:02
# Fork: 1 of 1
# Warmup Iteration   1: 4641.997 ns/op
Iteration   1: 4408.851 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4408.851 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 75.26% complete, ETA 00:36:39
# Fork: 1 of 1
# Warmup Iteration   1: 6291.327 ns/op
Iteration   1: 6039.969 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  6039.969 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 75.51% complete, ETA 00:36:15
# Fork: 1 of 1
# Warmup Iteration   1: 24130.609 ns/op
Iteration   1: 23154.642 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  23154.642 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 75.77% complete, ETA 00:35:52
# Fork: 1 of 1
# Warmup Iteration   1: 197376.984 ns/op
Iteration   1: 190676.923 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  190676.923 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 76.02% complete, ETA 00:35:29
# Fork: 1 of 1
# Warmup Iteration   1: 1976793.723 ns/op
Iteration   1: 1927089.230 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1927089.230 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 76.28% complete, ETA 00:35:05
# Fork: 1 of 1
# Warmup Iteration   1: 19851372.853 ns/op
Iteration   1: 19481273.889 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  19481273.889 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 76.53% complete, ETA 00:34:42
# Fork: 1 of 1
# Warmup Iteration   1: 200307934.600 ns/op
Iteration   1: 194294032.173 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  194294032.173 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 76.79% complete, ETA 00:34:23
# Fork: 1 of 1
# Warmup Iteration   1: 4663.929 ns/op
Iteration   1: 4454.404 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4454.404 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 77.04% complete, ETA 00:34:00
# Fork: 1 of 1
# Warmup Iteration   1: 6866.379 ns/op
Iteration   1: 6578.621 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  6578.621 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 77.30% complete, ETA 00:33:36
# Fork: 1 of 1
# Warmup Iteration   1: 29487.664 ns/op
Iteration   1: 28588.195 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  28588.195 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 77.55% complete, ETA 00:33:13
# Fork: 1 of 1
# Warmup Iteration   1: 254775.994 ns/op
Iteration   1: 249313.850 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  249313.850 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 77.81% complete, ETA 00:32:50
# Fork: 1 of 1
# Warmup Iteration   1: 2506448.810 ns/op
Iteration   1: 2465134.267 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  2465134.267 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 78.06% complete, ETA 00:32:27
# Fork: 1 of 1
# Warmup Iteration   1: 25751616.817 ns/op
Iteration   1: 25102986.822 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  25102986.822 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 78.32% complete, ETA 00:32:04
# Fork: 1 of 1
# Warmup Iteration   1: 253721604.575 ns/op
Iteration   1: 247673928.463 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  247673928.463 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 78.57% complete, ETA 00:31:44
# Fork: 1 of 1
# Warmup Iteration   1: 4790.756 ns/op
Iteration   1: 4568.148 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4568.148 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 78.83% complete, ETA 00:31:21
# Fork: 1 of 1
# Warmup Iteration   1: 7961.507 ns/op
Iteration   1: 7683.612 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  7683.612 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 79.08% complete, ETA 00:30:58
# Fork: 1 of 1
# Warmup Iteration   1: 40967.745 ns/op
Iteration   1: 40046.792 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  40046.792 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 79.34% complete, ETA 00:30:34
# Fork: 1 of 1
# Warmup Iteration   1: 366163.771 ns/op
Iteration   1: 358369.322 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  358369.322 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 79.59% complete, ETA 00:30:11
# Fork: 1 of 1
# Warmup Iteration   1: 3666901.237 ns/op
Iteration   1: 3604846.401 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  3604846.401 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 79.85% complete, ETA 00:29:48
# Fork: 1 of 1
# Warmup Iteration   1: 37084004.396 ns/op
Iteration   1: 36494077.087 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  36494077.087 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 80.10% complete, ETA 00:29:25
# Fork: 1 of 1
# Warmup Iteration   1: 369861955.893 ns/op
Iteration   1: 363129330.857 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  363129330.857 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 80.36% complete, ETA 00:29:05
# Fork: 1 of 1
# Warmup Iteration   1: 5208.602 ns/op
Iteration   1: 4918.954 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  4918.954 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 80.61% complete, ETA 00:28:42
# Fork: 1 of 1
# Warmup Iteration   1: 11374.843 ns/op
Iteration   1: 11094.593 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  11094.593 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 80.87% complete, ETA 00:28:19
# Fork: 1 of 1
# Warmup Iteration   1: 74785.020 ns/op
Iteration   1: 73249.042 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  73249.042 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 81.12% complete, ETA 00:27:56
# Fork: 1 of 1
# Warmup Iteration   1: 708658.305 ns/op
Iteration   1: 697457.190 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  697457.190 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 81.38% complete, ETA 00:27:33
# Fork: 1 of 1
# Warmup Iteration   1: 7009678.512 ns/op
Iteration   1: 6913566.627 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  6913566.627 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 81.63% complete, ETA 00:27:10
# Fork: 1 of 1
# Warmup Iteration   1: 70271877.636 ns/op
Iteration   1: 69498434.910 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  69498434.910 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 81.89% complete, ETA 00:26:47
# Fork: 1 of 1
# Warmup Iteration   1: 701881175.733 ns/op
Iteration   1: 690754575.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  690754575.800 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 82.14% complete, ETA 00:26:27
# Fork: 1 of 1
# Warmup Iteration   1: 5940.622 ns/op
Iteration   1: 5669.871 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  5669.871 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 82.40% complete, ETA 00:26:04
# Fork: 1 of 1
# Warmup Iteration   1: 17063.342 ns/op
Iteration   1: 16794.799 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  16794.799 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 82.65% complete, ETA 00:25:40
# Fork: 1 of 1
# Warmup Iteration   1: 131680.709 ns/op
Iteration   1: 129734.701 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  129734.701 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 82.91% complete, ETA 00:25:17
# Fork: 1 of 1
# Warmup Iteration   1: 1270582.762 ns/op
Iteration   1: 1254432.254 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1254432.254 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 83.16% complete, ETA 00:24:54
# Fork: 1 of 1
# Warmup Iteration   1: 12635680.525 ns/op
Iteration   1: 12471334.633 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  12471334.633 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 83.42% complete, ETA 00:24:31
# Fork: 1 of 1
# Warmup Iteration   1: 126249034.775 ns/op
Iteration   1: 125355186.475 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  125355186.475 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 83.67% complete, ETA 00:24:08
# Fork: 1 of 1
# Warmup Iteration   1: 1269274636.500 ns/op
Iteration   1: 1250448433.875 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  1250448433.875 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 83.93% complete, ETA 00:23:48
# Fork: 1 of 1
# Warmup Iteration   1: 6936.267 ns/op
Iteration   1: 6699.407 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  6699.407 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 84.18% complete, ETA 00:23:25
# Fork: 1 of 1
# Warmup Iteration   1: 28269.707 ns/op
Iteration   1: 27859.514 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  27859.514 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 84.44% complete, ETA 00:23:02
# Fork: 1 of 1
# Warmup Iteration   1: 243531.900 ns/op
Iteration   1: 240927.970 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  240927.970 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 84.69% complete, ETA 00:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 2385231.491 ns/op
Iteration   1: 2368571.400 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  2368571.400 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 84.95% complete, ETA 00:22:16
# Fork: 1 of 1
# Warmup Iteration   1: 23856698.412 ns/op
Iteration   1: 23599395.625 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  23599395.625 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 85.20% complete, ETA 00:21:53
# Fork: 1 of 1
# Warmup Iteration   1: 237904069.767 ns/op
Iteration   1: 235788196.465 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  235788196.465 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 85.46% complete, ETA 00:21:30
# Fork: 1 of 1
# Warmup Iteration   1: 2381917453.200 ns/op
Iteration   1: 2363802379.600 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachInline":
  2363802379.600 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 1)

# Run progress: 85.71% complete, ETA 00:21:10
# Fork: 1 of 1
# Warmup Iteration   1: 4685.105 ns/op
Iteration   1: 4440.100 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4440.100 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 10)

# Run progress: 85.97% complete, ETA 00:20:47
# Fork: 1 of 1
# Warmup Iteration   1: 5917.146 ns/op
Iteration   1: 5636.606 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5636.606 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 100)

# Run progress: 86.22% complete, ETA 00:20:24
# Fork: 1 of 1
# Warmup Iteration   1: 20028.081 ns/op
Iteration   1: 18881.713 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  18881.713 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 1000)

# Run progress: 86.48% complete, ETA 00:20:01
# Fork: 1 of 1
# Warmup Iteration   1: 156884.444 ns/op
Iteration   1: 148865.517 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  148865.517 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 10000)

# Run progress: 86.73% complete, ETA 00:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 1526081.732 ns/op
Iteration   1: 1457593.822 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1457593.822 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 100000)

# Run progress: 86.99% complete, ETA 00:19:15
# Fork: 1 of 1
# Warmup Iteration   1: 15871148.626 ns/op
Iteration   1: 15467719.119 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  15467719.119 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 0, lineCount = 1000000)

# Run progress: 87.24% complete, ETA 00:18:52
# Fork: 1 of 1
# Warmup Iteration   1: 159949218.762 ns/op
Iteration   1: 157072226.438 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  157072226.438 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 1)

# Run progress: 87.50% complete, ETA 00:18:31
# Fork: 1 of 1
# Warmup Iteration   1: 4663.409 ns/op
Iteration   1: 4430.322 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4430.322 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 10)

# Run progress: 87.76% complete, ETA 00:18:08
# Fork: 1 of 1
# Warmup Iteration   1: 5996.702 ns/op
Iteration   1: 5675.042 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5675.042 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 100)

# Run progress: 88.01% complete, ETA 00:17:45
# Fork: 1 of 1
# Warmup Iteration   1: 21654.932 ns/op
Iteration   1: 20646.366 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  20646.366 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 1000)

# Run progress: 88.27% complete, ETA 00:17:22
# Fork: 1 of 1
# Warmup Iteration   1: 170368.864 ns/op
Iteration   1: 162773.842 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  162773.842 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 10000)

# Run progress: 88.52% complete, ETA 00:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 1695008.256 ns/op
Iteration   1: 1623675.567 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1623675.567 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 100000)

# Run progress: 88.78% complete, ETA 00:16:36
# Fork: 1 of 1
# Warmup Iteration   1: 17016806.929 ns/op
Iteration   1: 16561444.586 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  16561444.586 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 10, lineCount = 1000000)

# Run progress: 89.03% complete, ETA 00:16:13
# Fork: 1 of 1
# Warmup Iteration   1: 173192436.293 ns/op
Iteration   1: 167820841.917 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  167820841.917 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 1)

# Run progress: 89.29% complete, ETA 00:15:52
# Fork: 1 of 1
# Warmup Iteration   1: 4799.787 ns/op
Iteration   1: 4558.639 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4558.639 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 10)

# Run progress: 89.54% complete, ETA 00:15:29
# Fork: 1 of 1
# Warmup Iteration   1: 6353.223 ns/op
Iteration   1: 6065.860 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  6065.860 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 100)

# Run progress: 89.80% complete, ETA 00:15:06
# Fork: 1 of 1
# Warmup Iteration   1: 24226.745 ns/op
Iteration   1: 23333.990 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  23333.990 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 1000)

# Run progress: 90.05% complete, ETA 00:14:43
# Fork: 1 of 1
# Warmup Iteration   1: 201113.007 ns/op
Iteration   1: 198124.784 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  198124.784 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 10000)

# Run progress: 90.31% complete, ETA 00:14:20
# Fork: 1 of 1
# Warmup Iteration   1: 1999260.119 ns/op
Iteration   1: 1913904.024 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1913904.024 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 100000)

# Run progress: 90.56% complete, ETA 00:13:57
# Fork: 1 of 1
# Warmup Iteration   1: 20159557.642 ns/op
Iteration   1: 19705618.902 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  19705618.902 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 25, lineCount = 1000000)

# Run progress: 90.82% complete, ETA 00:13:35
# Fork: 1 of 1
# Warmup Iteration   1: 196827404.412 ns/op
Iteration   1: 194224764.000 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  194224764.000 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 1)

# Run progress: 91.07% complete, ETA 00:13:13
# Fork: 1 of 1
# Warmup Iteration   1: 4793.776 ns/op
Iteration   1: 4543.637 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4543.637 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 10)

# Run progress: 91.33% complete, ETA 00:12:50
# Fork: 1 of 1
# Warmup Iteration   1: 6956.093 ns/op
Iteration   1: 6611.792 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  6611.792 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 100)

# Run progress: 91.58% complete, ETA 00:12:27
# Fork: 1 of 1
# Warmup Iteration   1: 30118.630 ns/op
Iteration   1: 28985.326 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  28985.326 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 1000)

# Run progress: 91.84% complete, ETA 00:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 258076.426 ns/op
Iteration   1: 250005.696 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  250005.696 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 10000)

# Run progress: 92.09% complete, ETA 00:11:42
# Fork: 1 of 1
# Warmup Iteration   1: 2541756.666 ns/op
Iteration   1: 2490296.628 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2490296.628 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 100000)

# Run progress: 92.35% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 25698308.067 ns/op
Iteration   1: 25163961.837 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  25163961.837 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 50, lineCount = 1000000)

# Run progress: 92.60% complete, ETA 00:10:56
# Fork: 1 of 1
# Warmup Iteration   1: 259537986.385 ns/op
Iteration   1: 252932928.450 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  252932928.450 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 1)

# Run progress: 92.86% complete, ETA 00:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 4916.755 ns/op
Iteration   1: 4634.596 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  4634.596 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 10)

# Run progress: 93.11% complete, ETA 00:10:12
# Fork: 1 of 1
# Warmup Iteration   1: 8033.423 ns/op
Iteration   1: 7719.378 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  7719.378 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 100)

# Run progress: 93.37% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 41949.722 ns/op
Iteration   1: 40734.806 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  40734.806 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 1000)

# Run progress: 93.62% complete, ETA 00:09:26
# Fork: 1 of 1
# Warmup Iteration   1: 369339.598 ns/op
Iteration   1: 361189.771 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  361189.771 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 10000)

# Run progress: 93.88% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 3677361.367 ns/op
Iteration   1: 3608409.039 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  3608409.039 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 100000)

# Run progress: 94.13% complete, ETA 00:08:40
# Fork: 1 of 1
# Warmup Iteration   1: 37029075.605 ns/op
Iteration   1: 36101878.968 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  36101878.968 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 100, lineCount = 1000000)

# Run progress: 94.39% complete, ETA 00:08:18
# Fork: 1 of 1
# Warmup Iteration   1: 372958224.593 ns/op
Iteration   1: 364755198.500 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  364755198.500 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 1)

# Run progress: 94.64% complete, ETA 00:07:56
# Fork: 1 of 1
# Warmup Iteration   1: 5309.132 ns/op
Iteration   1: 5062.140 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5062.140 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 10)

# Run progress: 94.90% complete, ETA 00:07:33
# Fork: 1 of 1
# Warmup Iteration   1: 11530.007 ns/op
Iteration   1: 11188.384 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  11188.384 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 100)

# Run progress: 95.15% complete, ETA 00:07:10
# Fork: 1 of 1
# Warmup Iteration   1: 75534.379 ns/op
Iteration   1: 73662.367 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  73662.367 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 1000)

# Run progress: 95.41% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 712952.797 ns/op
Iteration   1: 698819.200 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  698819.200 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 10000)

# Run progress: 95.66% complete, ETA 00:06:25
# Fork: 1 of 1
# Warmup Iteration   1: 7053182.744 ns/op
Iteration   1: 6912333.159 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  6912333.159 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 100000)

# Run progress: 95.92% complete, ETA 00:06:02
# Fork: 1 of 1
# Warmup Iteration   1: 70552269.077 ns/op
Iteration   1: 69458095.250 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  69458095.250 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 250, lineCount = 1000000)

# Run progress: 96.17% complete, ETA 00:05:39
# Fork: 1 of 1
# Warmup Iteration   1: 710469253.067 ns/op
Iteration   1: 698528530.533 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  698528530.533 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 1)

# Run progress: 96.43% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 5799.767 ns/op
Iteration   1: 5524.407 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  5524.407 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 10)

# Run progress: 96.68% complete, ETA 00:04:54
# Fork: 1 of 1
# Warmup Iteration   1: 17112.109 ns/op
Iteration   1: 16837.136 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  16837.136 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 100)

# Run progress: 96.94% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 131791.010 ns/op
Iteration   1: 130067.532 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  130067.532 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 1000)

# Run progress: 97.19% complete, ETA 00:04:09
# Fork: 1 of 1
# Warmup Iteration   1: 1273560.863 ns/op
Iteration   1: 1257998.843 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1257998.843 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 10000)

# Run progress: 97.45% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 12751804.912 ns/op
Iteration   1: 12525867.770 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  12525867.770 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 100000)

# Run progress: 97.70% complete, ETA 00:03:23
# Fork: 1 of 1
# Warmup Iteration   1: 126593645.788 ns/op
Iteration   1: 124702958.975 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  124702958.975 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 500, lineCount = 1000000)

# Run progress: 97.96% complete, ETA 00:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 1268255725.625 ns/op
Iteration   1: 1247266298.667 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  1247266298.667 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 1)

# Run progress: 98.21% complete, ETA 00:02:38
# Fork: 1 of 1
# Warmup Iteration   1: 7052.074 ns/op
Iteration   1: 6752.695 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  6752.695 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 10)

# Run progress: 98.47% complete, ETA 00:02:16
# Fork: 1 of 1
# Warmup Iteration   1: 28202.638 ns/op
Iteration   1: 27813.362 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  27813.362 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 100)

# Run progress: 98.72% complete, ETA 00:01:53
# Fork: 1 of 1
# Warmup Iteration   1: 245153.845 ns/op
Iteration   1: 241616.867 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  241616.867 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 1000)

# Run progress: 98.98% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 2390884.256 ns/op
Iteration   1: 2369202.914 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2369202.914 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 10000)

# Run progress: 99.23% complete, ETA 00:01:07
# Fork: 1 of 1
# Warmup Iteration   1: 23879640.482 ns/op
Iteration   1: 23609254.309 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  23609254.309 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 100000)

# Run progress: 99.49% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 239113150.238 ns/op
Iteration   1: 235772617.953 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  235772617.953 ns/op


# JMH 1.17.4 (released 333 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 1 iterations, 10 s each
# Measurement: 1 iterations, 10 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava
# Parameters: (cpuTokens = 1000, lineCount = 1000000)

# Run progress: 99.74% complete, ETA 00:00:22
# Fork: 1 of 1
# Warmup Iteration   1: 2381558647.800 ns/op
Iteration   1: 2358293178.800 ns/op


Result "com.komanov.readlines.jmh.ReadLinesBenchmark.forEachJava":
  2358293178.800 ns/op


# Run complete. Total time: 02:28:11

Benchmark                           (cpuTokens)  (lineCount)  Mode  Cnt           Score   Error  Units
ReadLinesBenchmark.baseline                   0            1  avgt                3.240          ns/op
ReadLinesBenchmark.baseline                   0           10  avgt               20.698          ns/op
ReadLinesBenchmark.baseline                   0          100  avgt              211.501          ns/op
ReadLinesBenchmark.baseline                   0         1000  avgt             2212.626          ns/op
ReadLinesBenchmark.baseline                   0        10000  avgt            22111.824          ns/op
ReadLinesBenchmark.baseline                   0       100000  avgt           225958.017          ns/op
ReadLinesBenchmark.baseline                   0      1000000  avgt          2203678.906          ns/op
ReadLinesBenchmark.baseline                  10            1  avgt               15.060          ns/op
ReadLinesBenchmark.baseline                  10           10  avgt              144.748          ns/op
ReadLinesBenchmark.baseline                  10          100  avgt             1369.933          ns/op
ReadLinesBenchmark.baseline                  10         1000  avgt            13804.184          ns/op
ReadLinesBenchmark.baseline                  10        10000  avgt           139955.976          ns/op
ReadLinesBenchmark.baseline                  10       100000  avgt          1366520.380          ns/op
ReadLinesBenchmark.baseline                  10      1000000  avgt         14246706.255          ns/op
ReadLinesBenchmark.baseline                  25            1  avgt               45.883          ns/op
ReadLinesBenchmark.baseline                  25           10  avgt              449.118          ns/op
ReadLinesBenchmark.baseline                  25          100  avgt             4416.930          ns/op
ReadLinesBenchmark.baseline                  25         1000  avgt            44253.427          ns/op
ReadLinesBenchmark.baseline                  25        10000  avgt           440468.856          ns/op
ReadLinesBenchmark.baseline                  25       100000  avgt          4457448.130          ns/op
ReadLinesBenchmark.baseline                  25      1000000  avgt         44580715.853          ns/op
ReadLinesBenchmark.baseline                  50            1  avgt              104.256          ns/op
ReadLinesBenchmark.baseline                  50           10  avgt             1030.945          ns/op
ReadLinesBenchmark.baseline                  50          100  avgt            10231.567          ns/op
ReadLinesBenchmark.baseline                  50         1000  avgt           102896.698          ns/op
ReadLinesBenchmark.baseline                  50        10000  avgt          1026183.404          ns/op
ReadLinesBenchmark.baseline                  50       100000  avgt         10287418.372          ns/op
ReadLinesBenchmark.baseline                  50      1000000  avgt        103168830.052          ns/op
ReadLinesBenchmark.baseline                 100            1  avgt              214.885          ns/op
ReadLinesBenchmark.baseline                 100           10  avgt             2140.836          ns/op
ReadLinesBenchmark.baseline                 100          100  avgt            21305.699          ns/op
ReadLinesBenchmark.baseline                 100         1000  avgt           213155.318          ns/op
ReadLinesBenchmark.baseline                 100        10000  avgt          2132979.542          ns/op
ReadLinesBenchmark.baseline                 100       100000  avgt         21353005.648          ns/op
ReadLinesBenchmark.baseline                 100      1000000  avgt        213666392.532          ns/op
ReadLinesBenchmark.baseline                 250            1  avgt              547.564          ns/op
ReadLinesBenchmark.baseline                 250           10  avgt             5459.651          ns/op
ReadLinesBenchmark.baseline                 250          100  avgt            54594.365          ns/op
ReadLinesBenchmark.baseline                 250         1000  avgt           545647.854          ns/op
ReadLinesBenchmark.baseline                 250        10000  avgt          5464932.319          ns/op
ReadLinesBenchmark.baseline                 250       100000  avgt         54769219.836          ns/op
ReadLinesBenchmark.baseline                 250      1000000  avgt        546802697.789          ns/op
ReadLinesBenchmark.baseline                 500            1  avgt             1100.456          ns/op
ReadLinesBenchmark.baseline                 500           10  avgt            11023.256          ns/op
ReadLinesBenchmark.baseline                 500          100  avgt           110067.777          ns/op
ReadLinesBenchmark.baseline                 500         1000  avgt          1100333.108          ns/op
ReadLinesBenchmark.baseline                 500        10000  avgt         10993165.705          ns/op
ReadLinesBenchmark.baseline                 500       100000  avgt        110110029.220          ns/op
ReadLinesBenchmark.baseline                 500      1000000  avgt       1098687177.800          ns/op
ReadLinesBenchmark.baseline                1000            1  avgt             2218.197          ns/op
ReadLinesBenchmark.baseline                1000           10  avgt            22083.092          ns/op
ReadLinesBenchmark.baseline                1000          100  avgt           220696.241          ns/op
ReadLinesBenchmark.baseline                1000         1000  avgt          2205672.442          ns/op
ReadLinesBenchmark.baseline                1000        10000  avgt         22040651.289          ns/op
ReadLinesBenchmark.baseline                1000       100000  avgt        220735818.587          ns/op
ReadLinesBenchmark.baseline                1000      1000000  avgt       2208179043.600          ns/op
ReadLinesBenchmark.filesReadBytes             0            1  avgt             3391.090          ns/op
ReadLinesBenchmark.filesReadBytes             0           10  avgt             5087.148          ns/op
ReadLinesBenchmark.filesReadBytes             0          100  avgt            21262.073          ns/op
ReadLinesBenchmark.filesReadBytes             0         1000  avgt           181349.628          ns/op
ReadLinesBenchmark.filesReadBytes             0        10000  avgt          2200693.962          ns/op
ReadLinesBenchmark.filesReadBytes             0       100000  avgt         23886921.200          ns/op
ReadLinesBenchmark.filesReadBytes             0      1000000  avgt        336278917.065          ns/op
ReadLinesBenchmark.filesReadBytes            10            1  avgt             3433.885          ns/op
ReadLinesBenchmark.filesReadBytes            10           10  avgt             5132.018          ns/op
ReadLinesBenchmark.filesReadBytes            10          100  avgt            21675.038          ns/op
ReadLinesBenchmark.filesReadBytes            10         1000  avgt           194088.497          ns/op
ReadLinesBenchmark.filesReadBytes            10        10000  avgt          2365993.735          ns/op
ReadLinesBenchmark.filesReadBytes            10       100000  avgt         25051394.408          ns/op
ReadLinesBenchmark.filesReadBytes            10      1000000  avgt        251640845.925          ns/op
ReadLinesBenchmark.filesReadBytes            25            1  avgt             3428.719          ns/op
ReadLinesBenchmark.filesReadBytes            25           10  avgt             5487.523          ns/op
ReadLinesBenchmark.filesReadBytes            25          100  avgt            24678.612          ns/op
ReadLinesBenchmark.filesReadBytes            25         1000  avgt           225008.409          ns/op
ReadLinesBenchmark.filesReadBytes            25        10000  avgt          2629391.896          ns/op
ReadLinesBenchmark.filesReadBytes            25       100000  avgt         28601052.280          ns/op
ReadLinesBenchmark.filesReadBytes            25      1000000  avgt        382247995.704          ns/op
ReadLinesBenchmark.filesReadBytes            50            1  avgt             3524.453          ns/op
ReadLinesBenchmark.filesReadBytes            50           10  avgt             6149.055          ns/op
ReadLinesBenchmark.filesReadBytes            50          100  avgt            31342.288          ns/op
ReadLinesBenchmark.filesReadBytes            50         1000  avgt           285197.316          ns/op
ReadLinesBenchmark.filesReadBytes            50        10000  avgt          3273842.721          ns/op
ReadLinesBenchmark.filesReadBytes            50       100000  avgt         35557065.457          ns/op
ReadLinesBenchmark.filesReadBytes            50      1000000  avgt        447855577.652          ns/op
ReadLinesBenchmark.filesReadBytes           100            1  avgt             3635.008          ns/op
ReadLinesBenchmark.filesReadBytes           100           10  avgt             7197.672          ns/op
ReadLinesBenchmark.filesReadBytes           100          100  avgt            42298.132          ns/op
ReadLinesBenchmark.filesReadBytes           100         1000  avgt           396058.335          ns/op
ReadLinesBenchmark.filesReadBytes           100        10000  avgt          4373730.648          ns/op
ReadLinesBenchmark.filesReadBytes           100       100000  avgt         46724407.428          ns/op
ReadLinesBenchmark.filesReadBytes           100      1000000  avgt        464335304.682          ns/op
ReadLinesBenchmark.filesReadBytes           250            1  avgt             3955.729          ns/op
ReadLinesBenchmark.filesReadBytes           250           10  avgt            10622.681          ns/op
ReadLinesBenchmark.filesReadBytes           250          100  avgt            75877.707          ns/op
ReadLinesBenchmark.filesReadBytes           250         1000  avgt           731190.606          ns/op
ReadLinesBenchmark.filesReadBytes           250        10000  avgt          7763030.106          ns/op
ReadLinesBenchmark.filesReadBytes           250       100000  avgt         80431308.568          ns/op
ReadLinesBenchmark.filesReadBytes           250      1000000  avgt        795106876.923          ns/op
ReadLinesBenchmark.filesReadBytes           500            1  avgt             4571.494          ns/op
ReadLinesBenchmark.filesReadBytes           500           10  avgt            16178.767          ns/op
ReadLinesBenchmark.filesReadBytes           500          100  avgt           131711.155          ns/op
ReadLinesBenchmark.filesReadBytes           500         1000  avgt          1294056.280          ns/op
ReadLinesBenchmark.filesReadBytes           500        10000  avgt         13267792.918          ns/op
ReadLinesBenchmark.filesReadBytes           500       100000  avgt        135452242.865          ns/op
ReadLinesBenchmark.filesReadBytes           500      1000000  avgt       1347631329.125          ns/op
ReadLinesBenchmark.filesReadBytes          1000            1  avgt             5613.155          ns/op
ReadLinesBenchmark.filesReadBytes          1000           10  avgt            27389.319          ns/op
ReadLinesBenchmark.filesReadBytes          1000          100  avgt           243300.410          ns/op
ReadLinesBenchmark.filesReadBytes          1000         1000  avgt          2410236.975          ns/op
ReadLinesBenchmark.filesReadBytes          1000        10000  avgt         24370243.146          ns/op
ReadLinesBenchmark.filesReadBytes          1000       100000  avgt        246809068.195          ns/op
ReadLinesBenchmark.filesReadBytes          1000      1000000  avgt       2465194943.200          ns/op
ReadLinesBenchmark.filesReadBytes2            0            1  avgt             2195.387          ns/op
ReadLinesBenchmark.filesReadBytes2            0           10  avgt             3835.287          ns/op
ReadLinesBenchmark.filesReadBytes2            0          100  avgt            19321.771          ns/op
ReadLinesBenchmark.filesReadBytes2            0         1000  avgt           201303.964          ns/op
ReadLinesBenchmark.filesReadBytes2            0        10000  avgt          2365355.351          ns/op
ReadLinesBenchmark.filesReadBytes2            0       100000  avgt         24877851.542          ns/op
ReadLinesBenchmark.filesReadBytes2            0      1000000  avgt        292547420.257          ns/op
ReadLinesBenchmark.filesReadBytes2           10            1  avgt             2210.838          ns/op
ReadLinesBenchmark.filesReadBytes2           10           10  avgt             4364.547          ns/op
ReadLinesBenchmark.filesReadBytes2           10          100  avgt            20699.770          ns/op
ReadLinesBenchmark.filesReadBytes2           10         1000  avgt           210483.902          ns/op
ReadLinesBenchmark.filesReadBytes2           10        10000  avgt          2490833.401          ns/op
ReadLinesBenchmark.filesReadBytes2           10       100000  avgt         26412294.931          ns/op
ReadLinesBenchmark.filesReadBytes2           10      1000000  avgt        307977592.091          ns/op
ReadLinesBenchmark.filesReadBytes2           25            1  avgt             2226.337          ns/op
ReadLinesBenchmark.filesReadBytes2           25           10  avgt             4272.791          ns/op
ReadLinesBenchmark.filesReadBytes2           25          100  avgt            24186.946          ns/op
ReadLinesBenchmark.filesReadBytes2           25         1000  avgt           243246.101          ns/op
ReadLinesBenchmark.filesReadBytes2           25        10000  avgt          2838823.136          ns/op
ReadLinesBenchmark.filesReadBytes2           25       100000  avgt         29973473.111          ns/op
ReadLinesBenchmark.filesReadBytes2           25      1000000  avgt        306944823.758          ns/op
ReadLinesBenchmark.filesReadBytes2           50            1  avgt             2335.080          ns/op
ReadLinesBenchmark.filesReadBytes2           50           10  avgt             5116.256          ns/op
ReadLinesBenchmark.filesReadBytes2           50          100  avgt            30050.390          ns/op
ReadLinesBenchmark.filesReadBytes2           50         1000  avgt           303280.501          ns/op
ReadLinesBenchmark.filesReadBytes2           50        10000  avgt          3415399.847          ns/op
ReadLinesBenchmark.filesReadBytes2           50       100000  avgt         36378260.778          ns/op
ReadLinesBenchmark.filesReadBytes2           50      1000000  avgt        452800873.000          ns/op
ReadLinesBenchmark.filesReadBytes2          100            1  avgt             2577.026          ns/op
ReadLinesBenchmark.filesReadBytes2          100           10  avgt             6113.511          ns/op
ReadLinesBenchmark.filesReadBytes2          100          100  avgt            41178.936          ns/op
ReadLinesBenchmark.filesReadBytes2          100         1000  avgt           416223.449          ns/op
ReadLinesBenchmark.filesReadBytes2          100        10000  avgt          4569204.181          ns/op
ReadLinesBenchmark.filesReadBytes2          100       100000  avgt         48070187.555          ns/op
ReadLinesBenchmark.filesReadBytes2          100      1000000  avgt        569224971.722          ns/op
ReadLinesBenchmark.filesReadBytes2          250            1  avgt             2738.008          ns/op
ReadLinesBenchmark.filesReadBytes2          250           10  avgt             9560.864          ns/op
ReadLinesBenchmark.filesReadBytes2          250          100  avgt            74348.049          ns/op
ReadLinesBenchmark.filesReadBytes2          250         1000  avgt           749512.288          ns/op
ReadLinesBenchmark.filesReadBytes2          250        10000  avgt          7823308.167          ns/op
ReadLinesBenchmark.filesReadBytes2          250       100000  avgt         81519107.244          ns/op
ReadLinesBenchmark.filesReadBytes2          250      1000000  avgt        928396494.545          ns/op
ReadLinesBenchmark.filesReadBytes2          500            1  avgt             3298.506          ns/op
ReadLinesBenchmark.filesReadBytes2          500           10  avgt            14994.248          ns/op
ReadLinesBenchmark.filesReadBytes2          500          100  avgt           130684.654          ns/op
ReadLinesBenchmark.filesReadBytes2          500         1000  avgt          1312576.496          ns/op
ReadLinesBenchmark.filesReadBytes2          500        10000  avgt         13452438.294          ns/op
ReadLinesBenchmark.filesReadBytes2          500       100000  avgt        136434611.270          ns/op
ReadLinesBenchmark.filesReadBytes2          500      1000000  avgt       1509242050.857          ns/op
ReadLinesBenchmark.filesReadBytes2         1000            1  avgt             4940.719          ns/op
ReadLinesBenchmark.filesReadBytes2         1000           10  avgt            26122.711          ns/op
ReadLinesBenchmark.filesReadBytes2         1000          100  avgt           242549.149          ns/op
ReadLinesBenchmark.filesReadBytes2         1000         1000  avgt          2428150.771          ns/op
ReadLinesBenchmark.filesReadBytes2         1000        10000  avgt         24534000.260          ns/op
ReadLinesBenchmark.filesReadBytes2         1000       100000  avgt        247232069.317          ns/op
ReadLinesBenchmark.filesReadBytes2         1000      1000000  avgt       2470255457.800          ns/op
ReadLinesBenchmark.filesReadLines             0            1  avgt             4481.808          ns/op
ReadLinesBenchmark.filesReadLines             0           10  avgt             5631.325          ns/op
ReadLinesBenchmark.filesReadLines             0          100  avgt            19422.821          ns/op
ReadLinesBenchmark.filesReadLines             0         1000  avgt           155601.914          ns/op
ReadLinesBenchmark.filesReadLines             0        10000  avgt          1663978.317          ns/op
ReadLinesBenchmark.filesReadLines             0       100000  avgt         16965522.215          ns/op
ReadLinesBenchmark.filesReadLines             0      1000000  avgt        247430200.000          ns/op
ReadLinesBenchmark.filesReadLines            10            1  avgt             4438.257          ns/op
ReadLinesBenchmark.filesReadLines            10           10  avgt             5793.986          ns/op
ReadLinesBenchmark.filesReadLines            10          100  avgt            20399.516          ns/op
ReadLinesBenchmark.filesReadLines            10         1000  avgt           165791.593          ns/op
ReadLinesBenchmark.filesReadLines            10        10000  avgt          1756152.811          ns/op
ReadLinesBenchmark.filesReadLines            10       100000  avgt         18435988.617          ns/op
ReadLinesBenchmark.filesReadLines            10      1000000  avgt        264264078.737          ns/op
ReadLinesBenchmark.filesReadLines            25            1  avgt             4480.269          ns/op
ReadLinesBenchmark.filesReadLines            25           10  avgt             6145.681          ns/op
ReadLinesBenchmark.filesReadLines            25          100  avgt            23748.813          ns/op
ReadLinesBenchmark.filesReadLines            25         1000  avgt           197445.727          ns/op
ReadLinesBenchmark.filesReadLines            25        10000  avgt          2114306.118          ns/op
ReadLinesBenchmark.filesReadLines            25       100000  avgt         21612627.419          ns/op
ReadLinesBenchmark.filesReadLines            25      1000000  avgt        297271984.824          ns/op
ReadLinesBenchmark.filesReadLines            50            1  avgt             4528.764          ns/op
ReadLinesBenchmark.filesReadLines            50           10  avgt             6668.491          ns/op
ReadLinesBenchmark.filesReadLines            50          100  avgt            29684.359          ns/op
ReadLinesBenchmark.filesReadLines            50         1000  avgt           254608.846          ns/op
ReadLinesBenchmark.filesReadLines            50        10000  avgt          2730866.640          ns/op
ReadLinesBenchmark.filesReadLines            50       100000  avgt         28728303.971          ns/op
ReadLinesBenchmark.filesReadLines            50      1000000  avgt        366586149.750          ns/op
ReadLinesBenchmark.filesReadLines           100            1  avgt             4651.176          ns/op
ReadLinesBenchmark.filesReadLines           100           10  avgt             7751.718          ns/op
ReadLinesBenchmark.filesReadLines           100          100  avgt            41225.084          ns/op
ReadLinesBenchmark.filesReadLines           100         1000  avgt           366864.614          ns/op
ReadLinesBenchmark.filesReadLines           100        10000  avgt          3832796.736          ns/op
ReadLinesBenchmark.filesReadLines           100       100000  avgt         39715151.143          ns/op
ReadLinesBenchmark.filesReadLines           100      1000000  avgt        486982888.227          ns/op
ReadLinesBenchmark.filesReadLines           250            1  avgt             5168.367          ns/op
ReadLinesBenchmark.filesReadLines           250           10  avgt            11164.894          ns/op
ReadLinesBenchmark.filesReadLines           250          100  avgt            74674.302          ns/op
ReadLinesBenchmark.filesReadLines           250         1000  avgt           704625.438          ns/op
ReadLinesBenchmark.filesReadLines           250        10000  avgt          7165054.595          ns/op
ReadLinesBenchmark.filesReadLines           250       100000  avgt         73635568.985          ns/op
ReadLinesBenchmark.filesReadLines           250      1000000  avgt        826045977.923          ns/op
ReadLinesBenchmark.filesReadLines           500            1  avgt             5556.427          ns/op
ReadLinesBenchmark.filesReadLines           500           10  avgt            16828.733          ns/op
ReadLinesBenchmark.filesReadLines           500          100  avgt           130253.186          ns/op
ReadLinesBenchmark.filesReadLines           500         1000  avgt          1258173.568          ns/op
ReadLinesBenchmark.filesReadLines           500        10000  avgt         12710052.114          ns/op
ReadLinesBenchmark.filesReadLines           500       100000  avgt        128410448.474          ns/op
ReadLinesBenchmark.filesReadLines           500      1000000  avgt       1323526875.500          ns/op
ReadLinesBenchmark.filesReadLines          1000            1  avgt             6736.227          ns/op
ReadLinesBenchmark.filesReadLines          1000           10  avgt            27986.022          ns/op
ReadLinesBenchmark.filesReadLines          1000          100  avgt           241976.240          ns/op
ReadLinesBenchmark.filesReadLines          1000         1000  avgt          2376043.344          ns/op
ReadLinesBenchmark.filesReadLines          1000        10000  avgt         23818041.055          ns/op
ReadLinesBenchmark.filesReadLines          1000       100000  avgt        242312776.595          ns/op
ReadLinesBenchmark.filesReadLines          1000      1000000  avgt       2407840869.400          ns/op
ReadLinesBenchmark.forEachIndirect            0            1  avgt             4383.231          ns/op
ReadLinesBenchmark.forEachIndirect            0           10  avgt             5633.898          ns/op
ReadLinesBenchmark.forEachIndirect            0          100  avgt            18863.305          ns/op
ReadLinesBenchmark.forEachIndirect            0         1000  avgt           147086.250          ns/op
ReadLinesBenchmark.forEachIndirect            0        10000  avgt          1458111.562          ns/op
ReadLinesBenchmark.forEachIndirect            0       100000  avgt         15249452.155          ns/op
ReadLinesBenchmark.forEachIndirect            0      1000000  avgt        149000790.176          ns/op
ReadLinesBenchmark.forEachIndirect           10            1  avgt             4408.296          ns/op
ReadLinesBenchmark.forEachIndirect           10           10  avgt             5679.501          ns/op
ReadLinesBenchmark.forEachIndirect           10          100  avgt            19935.295          ns/op
ReadLinesBenchmark.forEachIndirect           10         1000  avgt           160567.365          ns/op
ReadLinesBenchmark.forEachIndirect           10        10000  avgt          1570275.039          ns/op
ReadLinesBenchmark.forEachIndirect           10       100000  avgt         16569411.546          ns/op
ReadLinesBenchmark.forEachIndirect           10      1000000  avgt        163054490.468          ns/op
ReadLinesBenchmark.forEachIndirect           25            1  avgt             4467.906          ns/op
ReadLinesBenchmark.forEachIndirect           25           10  avgt             6013.935          ns/op
ReadLinesBenchmark.forEachIndirect           25          100  avgt            23334.422          ns/op
ReadLinesBenchmark.forEachIndirect           25         1000  avgt           191961.999          ns/op
ReadLinesBenchmark.forEachIndirect           25        10000  avgt          1873464.955          ns/op
ReadLinesBenchmark.forEachIndirect           25       100000  avgt         19692786.429          ns/op
ReadLinesBenchmark.forEachIndirect           25      1000000  avgt        194544186.115          ns/op
ReadLinesBenchmark.forEachIndirect           50            1  avgt             4599.330          ns/op
ReadLinesBenchmark.forEachIndirect           50           10  avgt             6588.498          ns/op
ReadLinesBenchmark.forEachIndirect           50          100  avgt            28765.366          ns/op
ReadLinesBenchmark.forEachIndirect           50         1000  avgt           249614.091          ns/op
ReadLinesBenchmark.forEachIndirect           50        10000  avgt          2498688.679          ns/op
ReadLinesBenchmark.forEachIndirect           50       100000  avgt         25312974.657          ns/op
ReadLinesBenchmark.forEachIndirect           50      1000000  avgt        249867415.707          ns/op
ReadLinesBenchmark.forEachIndirect          100            1  avgt             4624.018          ns/op
ReadLinesBenchmark.forEachIndirect          100           10  avgt             7755.203          ns/op
ReadLinesBenchmark.forEachIndirect          100          100  avgt            39929.564          ns/op
ReadLinesBenchmark.forEachIndirect          100         1000  avgt           361519.534          ns/op
ReadLinesBenchmark.forEachIndirect          100        10000  avgt          3635919.744          ns/op
ReadLinesBenchmark.forEachIndirect          100       100000  avgt         36157245.245          ns/op
ReadLinesBenchmark.forEachIndirect          100      1000000  avgt        362776825.000          ns/op
ReadLinesBenchmark.forEachIndirect          250            1  avgt             4998.656          ns/op
ReadLinesBenchmark.forEachIndirect          250           10  avgt            11170.971          ns/op
ReadLinesBenchmark.forEachIndirect          250          100  avgt            73946.227          ns/op
ReadLinesBenchmark.forEachIndirect          250         1000  avgt           698506.922          ns/op
ReadLinesBenchmark.forEachIndirect          250        10000  avgt          6913545.615          ns/op
ReadLinesBenchmark.forEachIndirect          250       100000  avgt         69501707.868          ns/op
ReadLinesBenchmark.forEachIndirect          250      1000000  avgt        691855586.333          ns/op
ReadLinesBenchmark.forEachIndirect          500            1  avgt             5553.534          ns/op
ReadLinesBenchmark.forEachIndirect          500           10  avgt            16821.412          ns/op
ReadLinesBenchmark.forEachIndirect          500          100  avgt           129582.075          ns/op
ReadLinesBenchmark.forEachIndirect          500         1000  avgt          1253863.351          ns/op
ReadLinesBenchmark.forEachIndirect          500        10000  avgt         12538356.627          ns/op
ReadLinesBenchmark.forEachIndirect          500       100000  avgt        125047023.888          ns/op
ReadLinesBenchmark.forEachIndirect          500      1000000  avgt       1247422042.333          ns/op
ReadLinesBenchmark.forEachIndirect         1000            1  avgt             6614.483          ns/op
ReadLinesBenchmark.forEachIndirect         1000           10  avgt            27793.422          ns/op
ReadLinesBenchmark.forEachIndirect         1000          100  avgt           241017.950          ns/op
ReadLinesBenchmark.forEachIndirect         1000         1000  avgt          2364950.393          ns/op
ReadLinesBenchmark.forEachIndirect         1000        10000  avgt         23639103.627          ns/op
ReadLinesBenchmark.forEachIndirect         1000       100000  avgt        236683344.419          ns/op
ReadLinesBenchmark.forEachIndirect         1000      1000000  avgt       2360937278.600          ns/op
ReadLinesBenchmark.forEachInline              0            1  avgt             4558.318          ns/op
ReadLinesBenchmark.forEachInline              0           10  avgt             5554.248          ns/op
ReadLinesBenchmark.forEachInline              0          100  avgt            18400.029          ns/op
ReadLinesBenchmark.forEachInline              0         1000  avgt           148033.044          ns/op
ReadLinesBenchmark.forEachInline              0        10000  avgt          1486187.468          ns/op
ReadLinesBenchmark.forEachInline              0       100000  avgt         15213282.067          ns/op
ReadLinesBenchmark.forEachInline              0      1000000  avgt        154669713.123          ns/op
ReadLinesBenchmark.forEachInline             10            1  avgt             4408.746          ns/op
ReadLinesBenchmark.forEachInline             10           10  avgt             5675.086          ns/op
ReadLinesBenchmark.forEachInline             10          100  avgt            19920.035          ns/op
ReadLinesBenchmark.forEachInline             10         1000  avgt           161175.739          ns/op
ReadLinesBenchmark.forEachInline             10        10000  avgt          1564976.044          ns/op
ReadLinesBenchmark.forEachInline             10       100000  avgt         16464086.877          ns/op
ReadLinesBenchmark.forEachInline             10      1000000  avgt        161092514.714          ns/op
ReadLinesBenchmark.forEachInline             25            1  avgt             4408.851          ns/op
ReadLinesBenchmark.forEachInline             25           10  avgt             6039.969          ns/op
ReadLinesBenchmark.forEachInline             25          100  avgt            23154.642          ns/op
ReadLinesBenchmark.forEachInline             25         1000  avgt           190676.923          ns/op
ReadLinesBenchmark.forEachInline             25        10000  avgt          1927089.230          ns/op
ReadLinesBenchmark.forEachInline             25       100000  avgt         19481273.889          ns/op
ReadLinesBenchmark.forEachInline             25      1000000  avgt        194294032.173          ns/op
ReadLinesBenchmark.forEachInline             50            1  avgt             4454.404          ns/op
ReadLinesBenchmark.forEachInline             50           10  avgt             6578.621          ns/op
ReadLinesBenchmark.forEachInline             50          100  avgt            28588.195          ns/op
ReadLinesBenchmark.forEachInline             50         1000  avgt           249313.850          ns/op
ReadLinesBenchmark.forEachInline             50        10000  avgt          2465134.267          ns/op
ReadLinesBenchmark.forEachInline             50       100000  avgt         25102986.822          ns/op
ReadLinesBenchmark.forEachInline             50      1000000  avgt        247673928.463          ns/op
ReadLinesBenchmark.forEachInline            100            1  avgt             4568.148          ns/op
ReadLinesBenchmark.forEachInline            100           10  avgt             7683.612          ns/op
ReadLinesBenchmark.forEachInline            100          100  avgt            40046.792          ns/op
ReadLinesBenchmark.forEachInline            100         1000  avgt           358369.322          ns/op
ReadLinesBenchmark.forEachInline            100        10000  avgt          3604846.401          ns/op
ReadLinesBenchmark.forEachInline            100       100000  avgt         36494077.087          ns/op
ReadLinesBenchmark.forEachInline            100      1000000  avgt        363129330.857          ns/op
ReadLinesBenchmark.forEachInline            250            1  avgt             4918.954          ns/op
ReadLinesBenchmark.forEachInline            250           10  avgt            11094.593          ns/op
ReadLinesBenchmark.forEachInline            250          100  avgt            73249.042          ns/op
ReadLinesBenchmark.forEachInline            250         1000  avgt           697457.190          ns/op
ReadLinesBenchmark.forEachInline            250        10000  avgt          6913566.627          ns/op
ReadLinesBenchmark.forEachInline            250       100000  avgt         69498434.910          ns/op
ReadLinesBenchmark.forEachInline            250      1000000  avgt        690754575.800          ns/op
ReadLinesBenchmark.forEachInline            500            1  avgt             5669.871          ns/op
ReadLinesBenchmark.forEachInline            500           10  avgt            16794.799          ns/op
ReadLinesBenchmark.forEachInline            500          100  avgt           129734.701          ns/op
ReadLinesBenchmark.forEachInline            500         1000  avgt          1254432.254          ns/op
ReadLinesBenchmark.forEachInline            500        10000  avgt         12471334.633          ns/op
ReadLinesBenchmark.forEachInline            500       100000  avgt        125355186.475          ns/op
ReadLinesBenchmark.forEachInline            500      1000000  avgt       1250448433.875          ns/op
ReadLinesBenchmark.forEachInline           1000            1  avgt             6699.407          ns/op
ReadLinesBenchmark.forEachInline           1000           10  avgt            27859.514          ns/op
ReadLinesBenchmark.forEachInline           1000          100  avgt           240927.970          ns/op
ReadLinesBenchmark.forEachInline           1000         1000  avgt          2368571.400          ns/op
ReadLinesBenchmark.forEachInline           1000        10000  avgt         23599395.625          ns/op
ReadLinesBenchmark.forEachInline           1000       100000  avgt        235788196.465          ns/op
ReadLinesBenchmark.forEachInline           1000      1000000  avgt       2363802379.600          ns/op
ReadLinesBenchmark.forEachJava                0            1  avgt             4440.100          ns/op
ReadLinesBenchmark.forEachJava                0           10  avgt             5636.606          ns/op
ReadLinesBenchmark.forEachJava                0          100  avgt            18881.713          ns/op
ReadLinesBenchmark.forEachJava                0         1000  avgt           148865.517          ns/op
ReadLinesBenchmark.forEachJava                0        10000  avgt          1457593.822          ns/op
ReadLinesBenchmark.forEachJava                0       100000  avgt         15467719.119          ns/op
ReadLinesBenchmark.forEachJava                0      1000000  avgt        157072226.438          ns/op
ReadLinesBenchmark.forEachJava               10            1  avgt             4430.322          ns/op
ReadLinesBenchmark.forEachJava               10           10  avgt             5675.042          ns/op
ReadLinesBenchmark.forEachJava               10          100  avgt            20646.366          ns/op
ReadLinesBenchmark.forEachJava               10         1000  avgt           162773.842          ns/op
ReadLinesBenchmark.forEachJava               10        10000  avgt          1623675.567          ns/op
ReadLinesBenchmark.forEachJava               10       100000  avgt         16561444.586          ns/op
ReadLinesBenchmark.forEachJava               10      1000000  avgt        167820841.917          ns/op
ReadLinesBenchmark.forEachJava               25            1  avgt             4558.639          ns/op
ReadLinesBenchmark.forEachJava               25           10  avgt             6065.860          ns/op
ReadLinesBenchmark.forEachJava               25          100  avgt            23333.990          ns/op
ReadLinesBenchmark.forEachJava               25         1000  avgt           198124.784          ns/op
ReadLinesBenchmark.forEachJava               25        10000  avgt          1913904.024          ns/op
ReadLinesBenchmark.forEachJava               25       100000  avgt         19705618.902          ns/op
ReadLinesBenchmark.forEachJava               25      1000000  avgt        194224764.000          ns/op
ReadLinesBenchmark.forEachJava               50            1  avgt             4543.637          ns/op
ReadLinesBenchmark.forEachJava               50           10  avgt             6611.792          ns/op
ReadLinesBenchmark.forEachJava               50          100  avgt            28985.326          ns/op
ReadLinesBenchmark.forEachJava               50         1000  avgt           250005.696          ns/op
ReadLinesBenchmark.forEachJava               50        10000  avgt          2490296.628          ns/op
ReadLinesBenchmark.forEachJava               50       100000  avgt         25163961.837          ns/op
ReadLinesBenchmark.forEachJava               50      1000000  avgt        252932928.450          ns/op
ReadLinesBenchmark.forEachJava              100            1  avgt             4634.596          ns/op
ReadLinesBenchmark.forEachJava              100           10  avgt             7719.378          ns/op
ReadLinesBenchmark.forEachJava              100          100  avgt            40734.806          ns/op
ReadLinesBenchmark.forEachJava              100         1000  avgt           361189.771          ns/op
ReadLinesBenchmark.forEachJava              100        10000  avgt          3608409.039          ns/op
ReadLinesBenchmark.forEachJava              100       100000  avgt         36101878.968          ns/op
ReadLinesBenchmark.forEachJava              100      1000000  avgt        364755198.500          ns/op
ReadLinesBenchmark.forEachJava              250            1  avgt             5062.140          ns/op
ReadLinesBenchmark.forEachJava              250           10  avgt            11188.384          ns/op
ReadLinesBenchmark.forEachJava              250          100  avgt            73662.367          ns/op
ReadLinesBenchmark.forEachJava              250         1000  avgt           698819.200          ns/op
ReadLinesBenchmark.forEachJava              250        10000  avgt          6912333.159          ns/op
ReadLinesBenchmark.forEachJava              250       100000  avgt         69458095.250          ns/op
ReadLinesBenchmark.forEachJava              250      1000000  avgt        698528530.533          ns/op
ReadLinesBenchmark.forEachJava              500            1  avgt             5524.407          ns/op
ReadLinesBenchmark.forEachJava              500           10  avgt            16837.136          ns/op
ReadLinesBenchmark.forEachJava              500          100  avgt           130067.532          ns/op
ReadLinesBenchmark.forEachJava              500         1000  avgt          1257998.843          ns/op
ReadLinesBenchmark.forEachJava              500        10000  avgt         12525867.770          ns/op
ReadLinesBenchmark.forEachJava              500       100000  avgt        124702958.975          ns/op
ReadLinesBenchmark.forEachJava              500      1000000  avgt       1247266298.667          ns/op
ReadLinesBenchmark.forEachJava             1000            1  avgt             6752.695          ns/op
ReadLinesBenchmark.forEachJava             1000           10  avgt            27813.362          ns/op
ReadLinesBenchmark.forEachJava             1000          100  avgt           241616.867          ns/op
ReadLinesBenchmark.forEachJava             1000         1000  avgt          2369202.914          ns/op
ReadLinesBenchmark.forEachJava             1000        10000  avgt         23609254.309          ns/op
ReadLinesBenchmark.forEachJava             1000       100000  avgt        235772617.953          ns/op
ReadLinesBenchmark.forEachJava             1000      1000000  avgt       2358293178.800          ns/op

Benchmark result is saved to jmh.json
