# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 02:55:00
# Fork: 1 of 1
# Warmup Iteration   1: 53095.097 ns/op
# Warmup Iteration   2: 21578.964 ns/op
Iteration   1: 21515.513 ns/op
Iteration   2: 19784.579 ns/op
Iteration   3: 20292.036 ns/op
Iteration   4: 21914.426 ns/op
Iteration   5: 22533.421 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21207.995 ±(99.9%) 4396.931 ns/op [Average]
  (min, avg, max) = (19784.579, 21207.995, 22533.421), stdev = 1141.869
  CI (99.9%): [16811.064, 25604.926] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.33% complete, ETA 03:10:25
# Fork: 1 of 1
# Warmup Iteration   1: 87834.229 ns/op
# Warmup Iteration   2: 44183.524 ns/op
Iteration   1: 44279.416 ns/op
Iteration   2: 43827.561 ns/op
Iteration   3: 44632.181 ns/op
Iteration   4: 43330.084 ns/op
Iteration   5: 45255.141 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  44264.877 ±(99.9%) 2843.245 ns/op [Average]
  (min, avg, max) = (43330.084, 44264.877, 45255.141), stdev = 738.382
  CI (99.9%): [41421.632, 47108.121] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.67% complete, ETA 03:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 148146.728 ns/op
# Warmup Iteration   2: 90266.070 ns/op
Iteration   1: 87822.198 ns/op
Iteration   2: 87793.803 ns/op
Iteration   3: 83521.634 ns/op
Iteration   4: 84780.929 ns/op
Iteration   5: 85916.884 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  85967.090 ±(99.9%) 7247.005 ns/op [Average]
  (min, avg, max) = (83521.634, 85967.090, 87822.198), stdev = 1882.024
  CI (99.9%): [78720.085, 93214.095] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 1.00% complete, ETA 03:11:21
# Fork: 1 of 1
# Warmup Iteration   1: 968493.432 ns/op
# Warmup Iteration   2: 231436.586 ns/op
Iteration   1: 216975.278 ns/op
Iteration   2: 197169.340 ns/op
Iteration   3: 194699.144 ns/op
Iteration   4: 200257.790 ns/op
Iteration   5: 199831.966 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  201786.704 ±(99.9%) 33811.467 ns/op [Average]
  (min, avg, max) = (194699.144, 201786.704, 216975.278), stdev = 8780.731
  CI (99.9%): [167975.237, 235598.171] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 1.33% complete, ETA 03:10:08
# Fork: 1 of 1
# Warmup Iteration   1: 8718320.304 ns/op
# Warmup Iteration   2: 1821862.883 ns/op
Iteration   1: 1599001.320 ns/op
Iteration   2: 1596930.516 ns/op
Iteration   3: 1543527.755 ns/op
Iteration   4: 1542925.800 ns/op
Iteration   5: 1558671.306 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1568211.339 ±(99.9%) 107412.676 ns/op [Average]
  (min, avg, max) = (1542925.800, 1568211.339, 1599001.320), stdev = 27894.731
  CI (99.9%): [1460798.663, 1675624.016] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 1.67% complete, ETA 03:10:15
# Fork: 1 of 1
# Warmup Iteration   1: 31223.862 ns/op
# Warmup Iteration   2: 9300.722 ns/op
Iteration   1: 5966.944 ns/op
Iteration   2: 5954.447 ns/op
Iteration   3: 6284.483 ns/op
Iteration   4: 5950.371 ns/op
Iteration   5: 6076.731 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6046.595 ±(99.9%) 549.960 ns/op [Average]
  (min, avg, max) = (5950.371, 6046.595, 6284.483), stdev = 142.823
  CI (99.9%): [5496.635, 6596.555] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 2.00% complete, ETA 03:09:29
# Fork: 1 of 1
# Warmup Iteration   1: 71845.941 ns/op
# Warmup Iteration   2: 14574.731 ns/op
Iteration   1: 13276.365 ns/op
Iteration   2: 12931.525 ns/op
Iteration   3: 13595.194 ns/op
Iteration   4: 12621.226 ns/op
Iteration   5: 12614.290 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  13007.720 ±(99.9%) 1641.913 ns/op [Average]
  (min, avg, max) = (12614.290, 13007.720, 13595.194), stdev = 426.399
  CI (99.9%): [11365.807, 14649.633] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 2.33% complete, ETA 03:08:33
# Fork: 1 of 1
# Warmup Iteration   1: 74409.255 ns/op
# Warmup Iteration   2: 35479.242 ns/op
Iteration   1: 25533.457 ns/op
Iteration   2: 22992.903 ns/op
Iteration   3: 23015.996 ns/op
Iteration   4: 23524.147 ns/op
Iteration   5: 23079.992 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  23629.299 ±(99.9%) 4182.760 ns/op [Average]
  (min, avg, max) = (22992.903, 23629.299, 25533.457), stdev = 1086.249
  CI (99.9%): [19446.539, 27812.059] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 2.67% complete, ETA 03:07:53
# Fork: 1 of 1
# Warmup Iteration   1: 335081.323 ns/op
# Warmup Iteration   2: 59107.875 ns/op
Iteration   1: 52596.059 ns/op
Iteration   2: 49839.759 ns/op
Iteration   3: 51451.123 ns/op
Iteration   4: 51196.769 ns/op
Iteration   5: 57367.886 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  52490.319 ±(99.9%) 11156.989 ns/op [Average]
  (min, avg, max) = (49839.759, 52490.319, 57367.886), stdev = 2897.435
  CI (99.9%): [41333.330, 63647.308] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 3.00% complete, ETA 03:07:07
# Fork: 1 of 1
# Warmup Iteration   1: 2058231.547 ns/op
# Warmup Iteration   2: 537032.224 ns/op
Iteration   1: 488761.804 ns/op
Iteration   2: 469239.039 ns/op
Iteration   3: 480374.138 ns/op
Iteration   4: 473714.344 ns/op
Iteration   5: 492057.292 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  480829.323 ±(99.9%) 37241.736 ns/op [Average]
  (min, avg, max) = (469239.039, 480829.323, 492057.292), stdev = 9671.560
  CI (99.9%): [443587.588, 518071.059] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 3.33% complete, ETA 03:06:30
# Fork: 1 of 1
# Warmup Iteration   1: 48159.780 ns/op
# Warmup Iteration   2: 11089.264 ns/op
Iteration   1: 8548.422 ns/op
Iteration   2: 8052.254 ns/op
Iteration   3: 8471.831 ns/op
Iteration   4: 8757.006 ns/op
Iteration   5: 8056.197 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8377.142 ±(99.9%) 1204.146 ns/op [Average]
  (min, avg, max) = (8052.254, 8377.142, 8757.006), stdev = 312.713
  CI (99.9%): [7172.996, 9581.288] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 3.67% complete, ETA 03:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 118236.559 ns/op
# Warmup Iteration   2: 20593.725 ns/op
Iteration   1: 18105.277 ns/op
Iteration   2: 16905.230 ns/op
Iteration   3: 16445.664 ns/op
Iteration   4: 16516.570 ns/op
Iteration   5: 18689.630 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  17332.474 ±(99.9%) 3885.987 ns/op [Average]
  (min, avg, max) = (16445.664, 17332.474, 18689.630), stdev = 1009.179
  CI (99.9%): [13446.487, 21218.462] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 4.00% complete, ETA 03:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 243969.834 ns/op
# Warmup Iteration   2: 38193.295 ns/op
Iteration   1: 32249.409 ns/op
Iteration   2: 31974.095 ns/op
Iteration   3: 32293.177 ns/op
Iteration   4: 32060.299 ns/op
Iteration   5: 31722.566 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  32059.909 ±(99.9%) 885.416 ns/op [Average]
  (min, avg, max) = (31722.566, 32059.909, 32293.177), stdev = 229.940
  CI (99.9%): [31174.494, 32945.325] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 4.33% complete, ETA 03:04:40
# Fork: 1 of 1
# Warmup Iteration   1: 304513.498 ns/op
# Warmup Iteration   2: 66086.951 ns/op
Iteration   1: 67155.669 ns/op
Iteration   2: 60048.109 ns/op
Iteration   3: 60984.011 ns/op
Iteration   4: 62257.963 ns/op
Iteration   5: 60526.694 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  62194.489 ±(99.9%) 11138.796 ns/op [Average]
  (min, avg, max) = (60048.109, 62194.489, 67155.669), stdev = 2892.710
  CI (99.9%): [51055.693, 73333.285] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 4.67% complete, ETA 03:04:12
# Fork: 1 of 1
# Warmup Iteration   1: 3968875.134 ns/op
# Warmup Iteration   2: 1151060.659 ns/op
Iteration   1: 688477.598 ns/op
Iteration   2: 678697.204 ns/op
Iteration   3: 695882.192 ns/op
Iteration   4: 714042.016 ns/op
Iteration   5: 689232.255 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  693266.253 ±(99.9%) 50571.761 ns/op [Average]
  (min, avg, max) = (678697.204, 693266.253, 714042.016), stdev = 13133.326
  CI (99.9%): [642694.492, 743838.014] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 5.00% complete, ETA 03:03:29
# Fork: 1 of 1
# Warmup Iteration   1: 49540.220 ns/op
# Warmup Iteration   2: 10325.140 ns/op
Iteration   1: 8757.818 ns/op
Iteration   2: 8490.127 ns/op
Iteration   3: 9010.240 ns/op
Iteration   4: 9090.352 ns/op
Iteration   5: 8841.439 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8837.995 ±(99.9%) 904.707 ns/op [Average]
  (min, avg, max) = (8490.127, 8837.995, 9090.352), stdev = 234.950
  CI (99.9%): [7933.288, 9742.703] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 5.33% complete, ETA 03:02:56
# Fork: 1 of 1
# Warmup Iteration   1: 77111.590 ns/op
# Warmup Iteration   2: 21013.947 ns/op
Iteration   1: 18927.188 ns/op
Iteration   2: 19318.092 ns/op
Iteration   3: 19039.364 ns/op
Iteration   4: 18095.772 ns/op
Iteration   5: 18899.553 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18855.994 ±(99.9%) 1756.231 ns/op [Average]
  (min, avg, max) = (18095.772, 18855.994, 19318.092), stdev = 456.087
  CI (99.9%): [17099.763, 20612.224] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 5.67% complete, ETA 03:02:13
# Fork: 1 of 1
# Warmup Iteration   1: 126405.004 ns/op
# Warmup Iteration   2: 53352.521 ns/op
Iteration   1: 34930.779 ns/op
Iteration   2: 36176.033 ns/op
Iteration   3: 34682.233 ns/op
Iteration   4: 35578.890 ns/op
Iteration   5: 36332.873 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  35540.161 ±(99.9%) 2817.564 ns/op [Average]
  (min, avg, max) = (34682.233, 35540.161, 36332.873), stdev = 731.712
  CI (99.9%): [32722.598, 38357.725] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 6.00% complete, ETA 03:01:26
# Fork: 1 of 1
# Warmup Iteration   1: 347144.039 ns/op
# Warmup Iteration   2: 98331.217 ns/op
Iteration   1: 71207.782 ns/op
Iteration   2: 71910.699 ns/op
Iteration   3: 76326.970 ns/op
Iteration   4: 72320.077 ns/op
Iteration   5: 79177.923 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  74188.690 ±(99.9%) 13203.760 ns/op [Average]
  (min, avg, max) = (71207.782, 74188.690, 79177.923), stdev = 3428.974
  CI (99.9%): [60984.931, 87392.450] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 6.33% complete, ETA 03:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 3045019.677 ns/op
# Warmup Iteration   2: 848313.550 ns/op
Iteration   1: 754575.085 ns/op
Iteration   2: 733212.975 ns/op
Iteration   3: 825406.445 ns/op
Iteration   4: 770672.639 ns/op
Iteration   5: 711271.869 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  759027.803 ±(99.9%) 166833.203 ns/op [Average]
  (min, avg, max) = (711271.869, 759027.803, 825406.445), stdev = 43326.053
  CI (99.9%): [592194.599, 925861.006] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 6.67% complete, ETA 03:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 68408.458 ns/op
# Warmup Iteration   2: 10680.912 ns/op
Iteration   1: 9855.087 ns/op
Iteration   2: 9993.411 ns/op
Iteration   3: 9651.921 ns/op
Iteration   4: 9957.923 ns/op
Iteration   5: 9737.674 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  9839.203 ±(99.9%) 556.379 ns/op [Average]
  (min, avg, max) = (9651.921, 9839.203, 9993.411), stdev = 144.490
  CI (99.9%): [9282.824, 10395.583] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 7.00% complete, ETA 02:59:41
# Fork: 1 of 1
# Warmup Iteration   1: 163677.759 ns/op
# Warmup Iteration   2: 23352.559 ns/op
Iteration   1: 21461.432 ns/op
Iteration   2: 20488.380 ns/op
Iteration   3: 21306.289 ns/op
Iteration   4: 20677.684 ns/op
Iteration   5: 21004.735 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  20987.704 ±(99.9%) 1577.873 ns/op [Average]
  (min, avg, max) = (20488.380, 20987.704, 21461.432), stdev = 409.769
  CI (99.9%): [19409.831, 22565.577] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 7.33% complete, ETA 02:58:55
# Fork: 1 of 1
# Warmup Iteration   1: 132519.407 ns/op
# Warmup Iteration   2: 43031.404 ns/op
Iteration   1: 40041.643 ns/op
Iteration   2: 41100.687 ns/op
Iteration   3: 42805.526 ns/op
Iteration   4: 42604.160 ns/op
Iteration   5: 40281.961 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41366.795 ±(99.9%) 4948.012 ns/op [Average]
  (min, avg, max) = (40041.643, 41366.795, 42805.526), stdev = 1284.983
  CI (99.9%): [36418.783, 46314.807] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 7.67% complete, ETA 02:58:13
# Fork: 1 of 1
# Warmup Iteration   1: 697149.209 ns/op
# Warmup Iteration   2: 94046.258 ns/op
Iteration   1: 85916.488 ns/op
Iteration   2: 84300.197 ns/op
Iteration   3: 84995.960 ns/op
Iteration   4: 88689.909 ns/op
Iteration   5: 92805.024 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  87341.515 ±(99.9%) 13401.408 ns/op [Average]
  (min, avg, max) = (84300.197, 87341.515, 92805.024), stdev = 3480.303
  CI (99.9%): [73940.107, 100742.924] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 8.00% complete, ETA 02:57:32
# Fork: 1 of 1
# Warmup Iteration   1: 4644029.987 ns/op
# Warmup Iteration   2: 1082777.370 ns/op
Iteration   1: 915248.427 ns/op
Iteration   2: 727646.272 ns/op
Iteration   3: 801005.028 ns/op
Iteration   4: 811226.229 ns/op
Iteration   5: 802244.186 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  811474.028 ±(99.9%) 258244.963 ns/op [Average]
  (min, avg, max) = (727646.272, 811474.028, 915248.427), stdev = 67065.397
  CI (99.9%): [553229.065, 1069718.992] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 8.33% complete, ETA 02:56:58
# Fork: 1 of 1
# Warmup Iteration   1: 352836.375 ns/op
# Warmup Iteration   2: 188058.617 ns/op
Iteration   1: 137867.067 ns/op
Iteration   2: 138472.744 ns/op
Iteration   3: 133728.315 ns/op
Iteration   4: 135440.185 ns/op
Iteration   5: 133778.508 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  135857.364 ±(99.9%) 8590.399 ns/op [Average]
  (min, avg, max) = (133728.315, 135857.364, 138472.744), stdev = 2230.899
  CI (99.9%): [127266.965, 144447.763] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 8.67% complete, ETA 02:56:17
# Fork: 1 of 1
# Warmup Iteration   1: 1123325.241 ns/op
# Warmup Iteration   2: 416923.082 ns/op
Iteration   1: 302779.918 ns/op
Iteration   2: 272520.941 ns/op
Iteration   3: 263265.166 ns/op
Iteration   4: 242143.767 ns/op
Iteration   5: 220789.448 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  260299.848 ±(99.9%) 119516.128 ns/op [Average]
  (min, avg, max) = (220789.448, 260299.848, 302779.918), stdev = 31037.959
  CI (99.9%): [140783.720, 379815.976] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 9.00% complete, ETA 02:55:39
# Fork: 1 of 1
# Warmup Iteration   1: 1885598.085 ns/op
# Warmup Iteration   2: 697670.322 ns/op
Iteration   1: 536610.692 ns/op
Iteration   2: 536173.254 ns/op
Iteration   3: 624979.912 ns/op
Iteration   4: 543673.575 ns/op
Iteration   5: 606655.268 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  569618.540 ±(99.9%) 164700.544 ns/op [Average]
  (min, avg, max) = (536173.254, 569618.540, 624979.912), stdev = 42772.208
  CI (99.9%): [404917.997, 734319.084] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 9.33% complete, ETA 02:54:55
# Fork: 1 of 1
# Warmup Iteration   1: 5084983.315 ns/op
# Warmup Iteration   2: 2350120.026 ns/op
Iteration   1: 1393448.593 ns/op
Iteration   2: 1383160.922 ns/op
Iteration   3: 1400407.096 ns/op
Iteration   4: 1374873.653 ns/op
Iteration   5: 1354449.495 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1381267.952 ±(99.9%) 68838.671 ns/op [Average]
  (min, avg, max) = (1354449.495, 1381267.952, 1400407.096), stdev = 17877.184
  CI (99.9%): [1312429.280, 1450106.623] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 9.67% complete, ETA 02:54:18
# Fork: 1 of 1
# Warmup Iteration   1: 41260511.025 ns/op
# Warmup Iteration   2: 12178600.855 ns/op
Iteration   1: 10651702.320 ns/op
Iteration   2: 11131816.305 ns/op
Iteration   3: 11100927.375 ns/op
Iteration   4: 11414674.024 ns/op
Iteration   5: 11367393.920 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11133302.789 ±(99.9%) 1166303.121 ns/op [Average]
  (min, avg, max) = (10651702.320, 11133302.789, 11414674.024), stdev = 302885.217
  CI (99.9%): [9966999.668, 12299605.909] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 10.00% complete, ETA 02:53:43
# Fork: 1 of 1
# Warmup Iteration   1: 316934.826 ns/op
# Warmup Iteration   2: 149323.161 ns/op
Iteration   1: 105727.973 ns/op
Iteration   2: 105424.405 ns/op
Iteration   3: 89186.258 ns/op
Iteration   4: 87179.190 ns/op
Iteration   5: 89984.799 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  95500.525 ±(99.9%) 35637.803 ns/op [Average]
  (min, avg, max) = (87179.190, 95500.525, 105727.973), stdev = 9255.024
  CI (99.9%): [59862.722, 131138.328] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 10.33% complete, ETA 02:53:02
# Fork: 1 of 1
# Warmup Iteration   1: 515830.627 ns/op
# Warmup Iteration   2: 294446.376 ns/op
Iteration   1: 206495.463 ns/op
Iteration   2: 191083.688 ns/op
Iteration   3: 193360.049 ns/op
Iteration   4: 185889.684 ns/op
Iteration   5: 185977.746 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  192561.326 ±(99.9%) 32493.815 ns/op [Average]
  (min, avg, max) = (185889.684, 192561.326, 206495.463), stdev = 8438.541
  CI (99.9%): [160067.510, 225055.141] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 10.67% complete, ETA 02:52:19
# Fork: 1 of 1
# Warmup Iteration   1: 1458624.208 ns/op
# Warmup Iteration   2: 764169.396 ns/op
Iteration   1: 460697.337 ns/op
Iteration   2: 426188.614 ns/op
Iteration   3: 426647.619 ns/op
Iteration   4: 425909.655 ns/op
Iteration   5: 369001.152 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  421688.875 ±(99.9%) 127134.070 ns/op [Average]
  (min, avg, max) = (369001.152, 421688.875, 460697.337), stdev = 33016.314
  CI (99.9%): [294554.805, 548822.945] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 11.00% complete, ETA 02:51:40
# Fork: 1 of 1
# Warmup Iteration   1: 4480477.547 ns/op
# Warmup Iteration   2: 1571186.969 ns/op
Iteration   1: 930140.405 ns/op
Iteration   2: 909386.468 ns/op
Iteration   3: 963571.979 ns/op
Iteration   4: 1011916.321 ns/op
Iteration   5: 1035239.759 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  970050.987 ±(99.9%) 204821.123 ns/op [Average]
  (min, avg, max) = (909386.468, 970050.987, 1035239.759), stdev = 53191.395
  CI (99.9%): [765229.863, 1174872.110] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 11.33% complete, ETA 02:50:59
# Fork: 1 of 1
# Warmup Iteration   1: 31627236.613 ns/op
# Warmup Iteration   2: 12616352.927 ns/op
Iteration   1: 9374164.919 ns/op
Iteration   2: 9577782.448 ns/op
Iteration   3: 9492286.416 ns/op
Iteration   4: 9188735.701 ns/op
Iteration   5: 9085749.707 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  9343743.838 ±(99.9%) 789975.592 ns/op [Average]
  (min, avg, max) = (9085749.707, 9343743.838, 9577782.448), stdev = 205154.153
  CI (99.9%): [8553768.246, 10133719.430] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 11.67% complete, ETA 02:50:22
# Fork: 1 of 1
# Warmup Iteration   1: 17090.616 ns/op
# Warmup Iteration   2: 6079.381 ns/op
Iteration   1: 6262.275 ns/op
Iteration   2: 6669.271 ns/op
Iteration   3: 6575.849 ns/op
Iteration   4: 7009.613 ns/op
Iteration   5: 7061.369 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6715.675 ±(99.9%) 1267.178 ns/op [Average]
  (min, avg, max) = (6262.275, 6715.675, 7061.369), stdev = 329.082
  CI (99.9%): [5448.497, 7982.854] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 12.00% complete, ETA 02:49:53
# Fork: 1 of 1
# Warmup Iteration   1: 69071.380 ns/op
# Warmup Iteration   2: 13716.825 ns/op
Iteration   1: 12762.395 ns/op
Iteration   2: 11621.057 ns/op
Iteration   3: 11251.872 ns/op
Iteration   4: 11703.627 ns/op
Iteration   5: 11658.769 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11799.544 ±(99.9%) 2184.966 ns/op [Average]
  (min, avg, max) = (11251.872, 11799.544, 12762.395), stdev = 567.429
  CI (99.9%): [9614.578, 13984.510] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 12.33% complete, ETA 02:49:13
# Fork: 1 of 1
# Warmup Iteration   1: 97655.163 ns/op
# Warmup Iteration   2: 24388.023 ns/op
Iteration   1: 21247.147 ns/op
Iteration   2: 19441.639 ns/op
Iteration   3: 19066.267 ns/op
Iteration   4: 21105.945 ns/op
Iteration   5: 21195.449 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  20411.290 ±(99.9%) 4104.783 ns/op [Average]
  (min, avg, max) = (19066.267, 20411.290, 21247.147), stdev = 1065.999
  CI (99.9%): [16306.507, 24516.072] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 12.67% complete, ETA 02:48:32
# Fork: 1 of 1
# Warmup Iteration   1: 178003.399 ns/op
# Warmup Iteration   2: 45846.976 ns/op
Iteration   1: 44178.523 ns/op
Iteration   2: 42632.331 ns/op
Iteration   3: 42989.449 ns/op
Iteration   4: 43055.543 ns/op
Iteration   5: 44772.174 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  43525.604 ±(99.9%) 3490.409 ns/op [Average]
  (min, avg, max) = (42632.331, 43525.604, 44772.174), stdev = 906.448
  CI (99.9%): [40035.195, 47016.013] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 13.00% complete, ETA 02:47:59
# Fork: 1 of 1
# Warmup Iteration   1: 4189968.948 ns/op
# Warmup Iteration   2: 588221.940 ns/op
Iteration   1: 434190.237 ns/op
Iteration   2: 458260.616 ns/op
Iteration   3: 438789.775 ns/op
Iteration   4: 451613.742 ns/op
Iteration   5: 438343.541 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  444239.582 ±(99.9%) 39288.867 ns/op [Average]
  (min, avg, max) = (434190.237, 444239.582, 458260.616), stdev = 10203.194
  CI (99.9%): [404950.715, 483528.449] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 13.33% complete, ETA 02:47:21
# Fork: 1 of 1
# Warmup Iteration   1: 39601.030 ns/op
# Warmup Iteration   2: 32723.530 ns/op
Iteration   1: 26089.439 ns/op
Iteration   2: 23171.143 ns/op
Iteration   3: 21418.052 ns/op
Iteration   4: 21152.990 ns/op
Iteration   5: 21210.203 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  22608.365 ±(99.9%) 8151.280 ns/op [Average]
  (min, avg, max) = (21152.990, 22608.365, 26089.439), stdev = 2116.861
  CI (99.9%): [14457.086, 30759.645] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 13.67% complete, ETA 02:46:41
# Fork: 1 of 1
# Warmup Iteration   1: 82064.235 ns/op
# Warmup Iteration   2: 50834.522 ns/op
Iteration   1: 51120.248 ns/op
Iteration   2: 44551.391 ns/op
Iteration   3: 40669.593 ns/op
Iteration   4: 40488.328 ns/op
Iteration   5: 38506.400 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  43067.192 ±(99.9%) 19277.695 ns/op [Average]
  (min, avg, max) = (38506.400, 43067.192, 51120.248), stdev = 5006.356
  CI (99.9%): [23789.497, 62344.887] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 14.00% complete, ETA 02:46:04
# Fork: 1 of 1
# Warmup Iteration   1: 103236.178 ns/op
# Warmup Iteration   2: 111802.599 ns/op
Iteration   1: 76056.145 ns/op
Iteration   2: 69437.164 ns/op
Iteration   3: 73819.858 ns/op
Iteration   4: 80044.525 ns/op
Iteration   5: 80043.556 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  75880.250 ±(99.9%) 17270.451 ns/op [Average]
  (min, avg, max) = (69437.164, 75880.250, 80044.525), stdev = 4485.081
  CI (99.9%): [58609.799, 93150.701] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 14.33% complete, ETA 02:45:25
# Fork: 1 of 1
# Warmup Iteration   1: 218390.967 ns/op
# Warmup Iteration   2: 213300.574 ns/op
Iteration   1: 175297.076 ns/op
Iteration   2: 150561.716 ns/op
Iteration   3: 155883.460 ns/op
Iteration   4: 161333.474 ns/op
Iteration   5: 162614.546 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  161138.055 ±(99.9%) 35614.075 ns/op [Average]
  (min, avg, max) = (150561.716, 161138.055, 175297.076), stdev = 9248.862
  CI (99.9%): [125523.980, 196752.129] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 14.67% complete, ETA 02:44:49
# Fork: 1 of 1
# Warmup Iteration   1: 1686846.328 ns/op
# Warmup Iteration   2: 2168392.650 ns/op
Iteration   1: 1921937.905 ns/op
Iteration   2: 1885367.228 ns/op
Iteration   3: 1722128.800 ns/op
Iteration   4: 1714940.381 ns/op
Iteration   5: 1620494.937 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1772973.850 ±(99.9%) 487169.169 ns/op [Average]
  (min, avg, max) = (1620494.937, 1772973.850, 1921937.905), stdev = 126516.286
  CI (99.9%): [1285804.681, 2260143.019] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 15.00% complete, ETA 02:44:09
# Fork: 1 of 1
# Warmup Iteration   1: 312824.254 ns/op
# Warmup Iteration   2: 67525.305 ns/op
Iteration   1: 69651.295 ns/op
Iteration   2: 66406.491 ns/op
Iteration   3: 67082.496 ns/op
Iteration   4: 67103.846 ns/op
Iteration   5: 69136.986 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  67876.223 ±(99.9%) 5488.716 ns/op [Average]
  (min, avg, max) = (66406.491, 67876.223, 69651.295), stdev = 1425.402
  CI (99.9%): [62387.507, 73364.938] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 15.33% complete, ETA 02:43:27
# Fork: 1 of 1
# Warmup Iteration   1: 1000783.794 ns/op
# Warmup Iteration   2: 137793.552 ns/op
Iteration   1: 127096.618 ns/op
Iteration   2: 121249.579 ns/op
Iteration   3: 120709.723 ns/op
Iteration   4: 125389.013 ns/op
Iteration   5: 122892.043 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  123467.395 ±(99.9%) 10495.808 ns/op [Average]
  (min, avg, max) = (120709.723, 123467.395, 127096.618), stdev = 2725.728
  CI (99.9%): [112971.587, 133963.203] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 15.67% complete, ETA 02:42:56
# Fork: 1 of 1
# Warmup Iteration   1: 1530162.407 ns/op
# Warmup Iteration   2: 410460.289 ns/op
Iteration   1: 286027.727 ns/op
Iteration   2: 282487.331 ns/op
Iteration   3: 278114.818 ns/op
Iteration   4: 294507.794 ns/op
Iteration   5: 285177.694 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  285263.073 ±(99.9%) 23172.683 ns/op [Average]
  (min, avg, max) = (278114.818, 285263.073, 294507.794), stdev = 6017.872
  CI (99.9%): [262090.390, 308435.755] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 16.00% complete, ETA 02:42:16
# Fork: 1 of 1
# Warmup Iteration   1: 3799619.223 ns/op
# Warmup Iteration   2: 860194.994 ns/op
Iteration   1: 657032.201 ns/op
Iteration   2: 628426.089 ns/op
Iteration   3: 616185.463 ns/op
Iteration   4: 535529.359 ns/op
Iteration   5: 523125.316 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  592059.686 ±(99.9%) 228405.362 ns/op [Average]
  (min, avg, max) = (523125.316, 592059.686, 657032.201), stdev = 59316.147
  CI (99.9%): [363654.324, 820465.048] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 16.33% complete, ETA 02:41:38
# Fork: 1 of 1
# Warmup Iteration   1: 22505595.309 ns/op
# Warmup Iteration   2: 8202576.823 ns/op
Iteration   1: 5926686.629 ns/op
Iteration   2: 5708048.781 ns/op
Iteration   3: 6023284.828 ns/op
Iteration   4: 5946007.399 ns/op
Iteration   5: 5869213.251 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5894648.178 ±(99.9%) 454302.106 ns/op [Average]
  (min, avg, max) = (5708048.781, 5894648.178, 6023284.828), stdev = 117980.814
  CI (99.9%): [5440346.072, 6348950.284] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 16.67% complete, ETA 02:40:57
# Fork: 1 of 1
# Warmup Iteration   1: 52706.591 ns/op
# Warmup Iteration   2: 19908.618 ns/op
Iteration   1: 12082.935 ns/op
Iteration   2: 11601.294 ns/op
Iteration   3: 12268.267 ns/op
Iteration   4: 11660.565 ns/op
Iteration   5: 12030.802 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  11928.772 ±(99.9%) 1103.682 ns/op [Average]
  (min, avg, max) = (11601.294, 11928.772, 12268.267), stdev = 286.623
  CI (99.9%): [10825.091, 13032.454] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 17.00% complete, ETA 02:40:19
# Fork: 1 of 1
# Warmup Iteration   1: 60146.821 ns/op
# Warmup Iteration   2: 30212.983 ns/op
Iteration   1: 21870.359 ns/op
Iteration   2: 23052.599 ns/op
Iteration   3: 21137.627 ns/op
Iteration   4: 20734.149 ns/op
Iteration   5: 17837.754 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  20926.498 ±(99.9%) 7464.961 ns/op [Average]
  (min, avg, max) = (17837.754, 20926.498, 23052.599), stdev = 1938.627
  CI (99.9%): [13461.537, 28391.458] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 17.33% complete, ETA 02:39:40
# Fork: 1 of 1
# Warmup Iteration   1: 211762.310 ns/op
# Warmup Iteration   2: 60253.633 ns/op
Iteration   1: 43850.565 ns/op
Iteration   2: 41603.280 ns/op
Iteration   3: 45320.891 ns/op
Iteration   4: 45106.317 ns/op
Iteration   5: 46162.181 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  44408.647 ±(99.9%) 6827.528 ns/op [Average]
  (min, avg, max) = (41603.280, 44408.647, 46162.181), stdev = 1773.087
  CI (99.9%): [37581.119, 51236.175] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 17.67% complete, ETA 02:38:59
# Fork: 1 of 1
# Warmup Iteration   1: 312209.600 ns/op
# Warmup Iteration   2: 150099.666 ns/op
Iteration   1: 97553.098 ns/op
Iteration   2: 101765.760 ns/op
Iteration   3: 103071.788 ns/op
Iteration   4: 93219.749 ns/op
Iteration   5: 107129.997 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  100548.078 ±(99.9%) 20543.089 ns/op [Average]
  (min, avg, max) = (93219.749, 100548.078, 107129.997), stdev = 5334.975
  CI (99.9%): [80004.989, 121091.168] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 18.00% complete, ETA 02:38:20
# Fork: 1 of 1
# Warmup Iteration   1: 5037918.230 ns/op
# Warmup Iteration   2: 1437742.938 ns/op
Iteration   1: 953419.019 ns/op
Iteration   2: 884560.699 ns/op
Iteration   3: 856601.738 ns/op
Iteration   4: 807996.615 ns/op
Iteration   5: 839869.894 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  868489.593 ±(99.9%) 211707.483 ns/op [Average]
  (min, avg, max) = (807996.615, 868489.593, 953419.019), stdev = 54979.761
  CI (99.9%): [656782.110, 1080197.076] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 18.33% complete, ETA 02:37:42
# Fork: 1 of 1
# Warmup Iteration   1: 14444.695 ns/op
# Warmup Iteration   2: 4199.980 ns/op
Iteration   1: 4078.549 ns/op
Iteration   2: 3920.566 ns/op
Iteration   3: 4277.725 ns/op
Iteration   4: 4169.583 ns/op
Iteration   5: 4171.589 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4123.603 ±(99.9%) 514.549 ns/op [Average]
  (min, avg, max) = (3920.566, 4123.603, 4277.725), stdev = 133.627
  CI (99.9%): [3609.054, 4638.151] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 18.67% complete, ETA 02:37:01
# Fork: 1 of 1
# Warmup Iteration   1: 24098.236 ns/op
# Warmup Iteration   2: 12709.118 ns/op
Iteration   1: 8712.385 ns/op
Iteration   2: 9042.397 ns/op
Iteration   3: 8718.237 ns/op
Iteration   4: 8753.707 ns/op
Iteration   5: 8716.887 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8788.723 ±(99.9%) 549.755 ns/op [Average]
  (min, avg, max) = (8712.385, 8788.723, 9042.397), stdev = 142.770
  CI (99.9%): [8238.967, 9338.478] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 19.00% complete, ETA 02:36:23
# Fork: 1 of 1
# Warmup Iteration   1: 48960.423 ns/op
# Warmup Iteration   2: 22141.671 ns/op
Iteration   1: 15359.552 ns/op
Iteration   2: 15082.374 ns/op
Iteration   3: 15089.656 ns/op
Iteration   4: 15125.514 ns/op
Iteration   5: 15184.490 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  15168.317 ±(99.9%) 440.045 ns/op [Average]
  (min, avg, max) = (15082.374, 15168.317, 15359.552), stdev = 114.278
  CI (99.9%): [14728.272, 15608.362] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 19.33% complete, ETA 02:35:44
# Fork: 1 of 1
# Warmup Iteration   1: 89613.248 ns/op
# Warmup Iteration   2: 48348.875 ns/op
Iteration   1: 33267.379 ns/op
Iteration   2: 33103.376 ns/op
Iteration   3: 29977.562 ns/op
Iteration   4: 28335.961 ns/op
Iteration   5: 27324.014 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  30401.658 ±(99.9%) 10444.848 ns/op [Average]
  (min, avg, max) = (27324.014, 30401.658, 33267.379), stdev = 2712.494
  CI (99.9%): [19956.810, 40846.506] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 19.67% complete, ETA 02:35:04
# Fork: 1 of 1
# Warmup Iteration   1: 1708677.582 ns/op
# Warmup Iteration   2: 396861.819 ns/op
Iteration   1: 307469.839 ns/op
Iteration   2: 306894.826 ns/op
Iteration   3: 327365.726 ns/op
Iteration   4: 328718.662 ns/op
Iteration   5: 321854.533 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  318460.717 ±(99.9%) 40870.003 ns/op [Average]
  (min, avg, max) = (306894.826, 318460.717, 328718.662), stdev = 10613.810
  CI (99.9%): [277590.715, 359330.720] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 20.00% complete, ETA 02:34:24
# Fork: 1 of 1
# Warmup Iteration   1: 14242.163 ns/op
# Warmup Iteration   2: 5696.376 ns/op
Iteration   1: 4154.098 ns/op
Iteration   2: 3850.164 ns/op
Iteration   3: 4038.614 ns/op
Iteration   4: 4025.605 ns/op
Iteration   5: 4142.547 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4042.205 ±(99.9%) 470.649 ns/op [Average]
  (min, avg, max) = (3850.164, 4042.205, 4154.098), stdev = 122.226
  CI (99.9%): [3571.556, 4512.854] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 20.33% complete, ETA 02:33:45
# Fork: 1 of 1
# Warmup Iteration   1: 34391.646 ns/op
# Warmup Iteration   2: 8181.802 ns/op
Iteration   1: 7467.269 ns/op
Iteration   2: 7741.371 ns/op
Iteration   3: 6687.725 ns/op
Iteration   4: 6308.152 ns/op
Iteration   5: 6369.160 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  6914.735 ±(99.9%) 2514.554 ns/op [Average]
  (min, avg, max) = (6308.152, 6914.735, 7741.371), stdev = 653.022
  CI (99.9%): [4400.182, 9429.289] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 20.67% complete, ETA 02:33:12
# Fork: 1 of 1
# Warmup Iteration   1: 45472.631 ns/op
# Warmup Iteration   2: 14183.929 ns/op
Iteration   1: 13427.721 ns/op
Iteration   2: 13903.816 ns/op
Iteration   3: 13642.556 ns/op
Iteration   4: 14444.875 ns/op
Iteration   5: 14995.992 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14082.992 ±(99.9%) 2450.531 ns/op [Average]
  (min, avg, max) = (13427.721, 14082.992, 14995.992), stdev = 636.395
  CI (99.9%): [11632.461, 16533.523] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 21.00% complete, ETA 02:32:37
# Fork: 1 of 1
# Warmup Iteration   1: 186566.967 ns/op
# Warmup Iteration   2: 43534.080 ns/op
Iteration   1: 28652.524 ns/op
Iteration   2: 31939.181 ns/op
Iteration   3: 29844.197 ns/op
Iteration   4: 28871.162 ns/op
Iteration   5: 29202.306 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  29701.874 ±(99.9%) 5118.093 ns/op [Average]
  (min, avg, max) = (28652.524, 29701.874, 31939.181), stdev = 1329.153
  CI (99.9%): [24583.781, 34819.967] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 21.33% complete, ETA 02:31:58
# Fork: 1 of 1
# Warmup Iteration   1: 1375654.333 ns/op
# Warmup Iteration   2: 492701.656 ns/op
Iteration   1: 316746.594 ns/op
Iteration   2: 304223.938 ns/op
Iteration   3: 291118.365 ns/op
Iteration   4: 325623.718 ns/op
Iteration   5: 306378.241 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  308818.171 ±(99.9%) 50413.653 ns/op [Average]
  (min, avg, max) = (291118.365, 308818.171, 325623.718), stdev = 13092.265
  CI (99.9%): [258404.519, 359231.824] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 21.67% complete, ETA 02:31:18
# Fork: 1 of 1
# Warmup Iteration   1: 12875.799 ns/op
# Warmup Iteration   2: 4210.240 ns/op
Iteration   1: 3798.401 ns/op
Iteration   2: 3830.281 ns/op
Iteration   3: 3808.758 ns/op
Iteration   4: 3909.798 ns/op
Iteration   5: 3695.617 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3808.571 ±(99.9%) 295.649 ns/op [Average]
  (min, avg, max) = (3695.617, 3808.571, 3909.798), stdev = 76.779
  CI (99.9%): [3512.922, 4104.220] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 22.00% complete, ETA 02:30:38
# Fork: 1 of 1
# Warmup Iteration   1: 47339.073 ns/op
# Warmup Iteration   2: 11091.846 ns/op
Iteration   1: 8382.177 ns/op
Iteration   2: 7935.055 ns/op
Iteration   3: 8022.458 ns/op
Iteration   4: 7688.723 ns/op
Iteration   5: 7677.961 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7941.275 ±(99.9%) 1112.931 ns/op [Average]
  (min, avg, max) = (7677.961, 7941.275, 8382.177), stdev = 289.025
  CI (99.9%): [6828.344, 9054.205] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 22.33% complete, ETA 02:29:59
# Fork: 1 of 1
# Warmup Iteration   1: 60899.904 ns/op
# Warmup Iteration   2: 13937.450 ns/op
Iteration   1: 13382.615 ns/op
Iteration   2: 13973.664 ns/op
Iteration   3: 13975.298 ns/op
Iteration   4: 14500.040 ns/op
Iteration   5: 14862.113 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14138.746 ±(99.9%) 2177.822 ns/op [Average]
  (min, avg, max) = (13382.615, 14138.746, 14862.113), stdev = 565.574
  CI (99.9%): [11960.924, 16316.568] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 22.67% complete, ETA 02:29:19
# Fork: 1 of 1
# Warmup Iteration   1: 125426.787 ns/op
# Warmup Iteration   2: 41812.205 ns/op
Iteration   1: 30052.709 ns/op
Iteration   2: 31042.688 ns/op
Iteration   3: 29601.430 ns/op
Iteration   4: 29265.478 ns/op
Iteration   5: 31701.179 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  30332.697 ±(99.9%) 3912.210 ns/op [Average]
  (min, avg, max) = (29265.478, 30332.697, 31701.179), stdev = 1015.988
  CI (99.9%): [26420.487, 34244.906] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 23.00% complete, ETA 02:28:40
# Fork: 1 of 1
# Warmup Iteration   1: 1233532.955 ns/op
# Warmup Iteration   2: 377247.864 ns/op
Iteration   1: 299553.786 ns/op
Iteration   2: 316708.964 ns/op
Iteration   3: 331572.470 ns/op
Iteration   4: 306678.769 ns/op
Iteration   5: 295714.114 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  310045.621 ±(99.9%) 55621.873 ns/op [Average]
  (min, avg, max) = (295714.114, 310045.621, 331572.470), stdev = 14444.824
  CI (99.9%): [254423.748, 365667.493] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 23.33% complete, ETA 02:28:01
# Fork: 1 of 1
# Warmup Iteration   1: 27362.339 ns/op
# Warmup Iteration   2: 5262.985 ns/op
Iteration   1: 4166.347 ns/op
Iteration   2: 4105.242 ns/op
Iteration   3: 4524.826 ns/op
Iteration   4: 3950.989 ns/op
Iteration   5: 4008.279 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4151.137 ±(99.9%) 866.286 ns/op [Average]
  (min, avg, max) = (3950.989, 4151.137, 4524.826), stdev = 224.972
  CI (99.9%): [3284.851, 5017.422] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 23.67% complete, ETA 02:27:22
# Fork: 1 of 1
# Warmup Iteration   1: 32839.436 ns/op
# Warmup Iteration   2: 10589.808 ns/op
Iteration   1: 8684.678 ns/op
Iteration   2: 8650.171 ns/op
Iteration   3: 8592.763 ns/op
Iteration   4: 8678.044 ns/op
Iteration   5: 7926.382 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8506.408 ±(99.9%) 1256.328 ns/op [Average]
  (min, avg, max) = (7926.382, 8506.408, 8684.678), stdev = 326.265
  CI (99.9%): [7250.079, 9762.736] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 24.00% complete, ETA 02:26:43
# Fork: 1 of 1
# Warmup Iteration   1: 65802.918 ns/op
# Warmup Iteration   2: 17939.444 ns/op
Iteration   1: 13400.248 ns/op
Iteration   2: 13694.628 ns/op
Iteration   3: 13456.518 ns/op
Iteration   4: 14621.802 ns/op
Iteration   5: 14880.845 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14010.808 ±(99.9%) 2661.035 ns/op [Average]
  (min, avg, max) = (13400.248, 14010.808, 14880.845), stdev = 691.062
  CI (99.9%): [11349.773, 16671.843] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 24.33% complete, ETA 02:26:05
# Fork: 1 of 1
# Warmup Iteration   1: 148296.361 ns/op
# Warmup Iteration   2: 45235.664 ns/op
Iteration   1: 34046.737 ns/op
Iteration   2: 33455.957 ns/op
Iteration   3: 33504.077 ns/op
Iteration   4: 34721.895 ns/op
Iteration   5: 33106.022 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  33766.937 ±(99.9%) 2429.910 ns/op [Average]
  (min, avg, max) = (33106.022, 33766.937, 34721.895), stdev = 631.040
  CI (99.9%): [31337.027, 36196.848] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 24.67% complete, ETA 02:25:25
# Fork: 1 of 1
# Warmup Iteration   1: 1570327.871 ns/op
# Warmup Iteration   2: 446885.604 ns/op
Iteration   1: 330857.469 ns/op
Iteration   2: 359963.362 ns/op
Iteration   3: 339432.120 ns/op
Iteration   4: 328715.898 ns/op
Iteration   5: 331681.194 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  338130.009 ±(99.9%) 49518.342 ns/op [Average]
  (min, avg, max) = (328715.898, 338130.009, 359963.362), stdev = 12859.756
  CI (99.9%): [288611.666, 387648.351] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 25.00% complete, ETA 02:24:45
# Fork: 1 of 1
# Warmup Iteration   1: 426239.184 ns/op
# Warmup Iteration   2: 138135.119 ns/op
Iteration   1: 112295.091 ns/op
Iteration   2: 104682.706 ns/op
Iteration   3: 103386.567 ns/op
Iteration   4: 100790.689 ns/op
Iteration   5: 107303.809 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  105691.772 ±(99.9%) 16845.773 ns/op [Average]
  (min, avg, max) = (100790.689, 105691.772, 112295.091), stdev = 4374.794
  CI (99.9%): [88846.000, 122537.545] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 25.33% complete, ETA 02:24:06
# Fork: 1 of 1
# Warmup Iteration   1: 710376.861 ns/op
# Warmup Iteration   2: 241135.237 ns/op
Iteration   1: 191383.904 ns/op
Iteration   2: 203586.919 ns/op
Iteration   3: 190709.728 ns/op
Iteration   4: 181639.285 ns/op
Iteration   5: 153245.058 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  184112.979 ±(99.9%) 72922.837 ns/op [Average]
  (min, avg, max) = (153245.058, 184112.979, 203586.919), stdev = 18937.829
  CI (99.9%): [111190.142, 257035.816] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 25.67% complete, ETA 02:23:31
# Fork: 1 of 1
# Warmup Iteration   1: 1295934.356 ns/op
# Warmup Iteration   2: 551678.181 ns/op
Iteration   1: 405097.901 ns/op
Iteration   2: 415332.980 ns/op
Iteration   3: 443898.441 ns/op
Iteration   4: 428772.453 ns/op
Iteration   5: 431759.732 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  424972.301 ±(99.9%) 57971.616 ns/op [Average]
  (min, avg, max) = (405097.901, 424972.301, 443898.441), stdev = 15055.044
  CI (99.9%): [367000.686, 482943.917] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 26.00% complete, ETA 02:22:52
# Fork: 1 of 1
# Warmup Iteration   1: 2894237.684 ns/op
# Warmup Iteration   2: 1695723.273 ns/op
Iteration   1: 1094124.861 ns/op
Iteration   2: 1025694.381 ns/op
Iteration   3: 1025047.440 ns/op
Iteration   4: 1027097.851 ns/op
Iteration   5: 1036583.437 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1041709.594 ±(99.9%) 114248.923 ns/op [Average]
  (min, avg, max) = (1025047.440, 1041709.594, 1094124.861), stdev = 29670.083
  CI (99.9%): [927460.671, 1155958.517] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 26.33% complete, ETA 02:22:13
# Fork: 1 of 1
# Warmup Iteration   1: 26577286.302 ns/op
# Warmup Iteration   2: 11980450.825 ns/op
Iteration   1: 9231524.551 ns/op
Iteration   2: 9614539.425 ns/op
Iteration   3: 8952234.065 ns/op
Iteration   4: 9347954.481 ns/op
Iteration   5: 9102887.064 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9249827.917 ±(99.9%) 968672.389 ns/op [Average]
  (min, avg, max) = (8952234.065, 9249827.917, 9614539.425), stdev = 251561.143
  CI (99.9%): [8281155.528, 10218500.306] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 26.67% complete, ETA 02:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 92394.854 ns/op
# Warmup Iteration   2: 19695.328 ns/op
Iteration   1: 15307.989 ns/op
Iteration   2: 16018.662 ns/op
Iteration   3: 13291.926 ns/op
Iteration   4: 14277.342 ns/op
Iteration   5: 12617.441 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14302.672 ±(99.9%) 5383.173 ns/op [Average]
  (min, avg, max) = (12617.441, 14302.672, 16018.662), stdev = 1397.993
  CI (99.9%): [8919.499, 19685.845] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 27.00% complete, ETA 02:20:56
# Fork: 1 of 1
# Warmup Iteration   1: 170902.981 ns/op
# Warmup Iteration   2: 32934.634 ns/op
Iteration   1: 28996.282 ns/op
Iteration   2: 29387.136 ns/op
Iteration   3: 29961.802 ns/op
Iteration   4: 29531.604 ns/op
Iteration   5: 29652.832 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  29505.931 ±(99.9%) 1366.722 ns/op [Average]
  (min, avg, max) = (28996.282, 29505.931, 29961.802), stdev = 354.933
  CI (99.9%): [28139.209, 30872.654] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 27.33% complete, ETA 02:20:16
# Fork: 1 of 1
# Warmup Iteration   1: 296780.460 ns/op
# Warmup Iteration   2: 71445.533 ns/op
Iteration   1: 62029.137 ns/op
Iteration   2: 65067.544 ns/op
Iteration   3: 65956.685 ns/op
Iteration   4: 60854.307 ns/op
Iteration   5: 61539.216 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  63089.378 ±(99.9%) 8750.635 ns/op [Average]
  (min, avg, max) = (60854.307, 63089.378, 65956.685), stdev = 2272.512
  CI (99.9%): [54338.743, 71840.013] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 27.67% complete, ETA 02:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 753202.890 ns/op
# Warmup Iteration   2: 171064.025 ns/op
Iteration   1: 152279.525 ns/op
Iteration   2: 148495.401 ns/op
Iteration   3: 144358.251 ns/op
Iteration   4: 142445.741 ns/op
Iteration   5: 153665.262 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  148248.836 ±(99.9%) 18712.057 ns/op [Average]
  (min, avg, max) = (142445.741, 148248.836, 153665.262), stdev = 4859.462
  CI (99.9%): [129536.779, 166960.893] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 28.00% complete, ETA 02:18:58
# Fork: 1 of 1
# Warmup Iteration   1: 9112916.190 ns/op
# Warmup Iteration   2: 1558326.242 ns/op
Iteration   1: 1401168.217 ns/op
Iteration   2: 1396046.513 ns/op
Iteration   3: 1394262.545 ns/op
Iteration   4: 1335484.730 ns/op
Iteration   5: 1322518.939 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1369896.189 ±(99.9%) 145157.668 ns/op [Average]
  (min, avg, max) = (1322518.939, 1369896.189, 1401168.217), stdev = 37696.985
  CI (99.9%): [1224738.521, 1515053.857] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 28.33% complete, ETA 02:18:21
# Fork: 1 of 1
# Warmup Iteration   1: 12252.206 ns/op
# Warmup Iteration   2: 2275.604 ns/op
Iteration   1: 2419.181 ns/op
Iteration   2: 2185.035 ns/op
Iteration   3: 2279.620 ns/op
Iteration   4: 2456.498 ns/op
Iteration   5: 2230.836 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2314.234 ±(99.9%) 456.016 ns/op [Average]
  (min, avg, max) = (2185.035, 2314.234, 2456.498), stdev = 118.426
  CI (99.9%): [1858.218, 2770.249] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 28.67% complete, ETA 02:17:42
# Fork: 1 of 1
# Warmup Iteration   1: 32577.691 ns/op
# Warmup Iteration   2: 6437.651 ns/op
Iteration   1: 4720.399 ns/op
Iteration   2: 4606.095 ns/op
Iteration   3: 5188.058 ns/op
Iteration   4: 4535.644 ns/op
Iteration   5: 4549.737 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4719.987 ±(99.9%) 1045.769 ns/op [Average]
  (min, avg, max) = (4535.644, 4719.987, 5188.058), stdev = 271.583
  CI (99.9%): [3674.218, 5765.756] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 29.00% complete, ETA 02:17:04
# Fork: 1 of 1
# Warmup Iteration   1: 41361.354 ns/op
# Warmup Iteration   2: 11309.858 ns/op
Iteration   1: 9594.272 ns/op
Iteration   2: 9386.432 ns/op
Iteration   3: 9210.875 ns/op
Iteration   4: 9213.107 ns/op
Iteration   5: 9405.917 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9362.121 ±(99.9%) 613.341 ns/op [Average]
  (min, avg, max) = (9210.875, 9362.121, 9594.272), stdev = 159.283
  CI (99.9%): [8748.780, 9975.462] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 29.33% complete, ETA 02:16:24
# Fork: 1 of 1
# Warmup Iteration   1: 126532.863 ns/op
# Warmup Iteration   2: 18822.710 ns/op
Iteration   1: 13824.959 ns/op
Iteration   2: 16473.587 ns/op
Iteration   3: 15150.223 ns/op
Iteration   4: 15881.179 ns/op
Iteration   5: 16730.626 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  15612.115 ±(99.9%) 4504.128 ns/op [Average]
  (min, avg, max) = (13824.959, 15612.115, 16730.626), stdev = 1169.708
  CI (99.9%): [11107.987, 20116.243] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 29.67% complete, ETA 02:15:46
# Fork: 1 of 1
# Warmup Iteration   1: 860555.901 ns/op
# Warmup Iteration   2: 206096.595 ns/op
Iteration   1: 198941.138 ns/op
Iteration   2: 205210.267 ns/op
Iteration   3: 202168.148 ns/op
Iteration   4: 205554.109 ns/op
Iteration   5: 203861.910 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  203147.114 ±(99.9%) 10405.606 ns/op [Average]
  (min, avg, max) = (198941.138, 203147.114, 205554.109), stdev = 2702.303
  CI (99.9%): [192741.509, 213552.720] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 30.00% complete, ETA 02:15:08
# Fork: 1 of 1
# Warmup Iteration   1: 20880.990 ns/op
# Warmup Iteration   2: 14144.218 ns/op
Iteration   1: 10539.293 ns/op
Iteration   2: 10599.495 ns/op
Iteration   3: 10731.218 ns/op
Iteration   4: 10687.273 ns/op
Iteration   5: 10535.221 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  10618.500 ±(99.9%) 339.017 ns/op [Average]
  (min, avg, max) = (10535.221, 10618.500, 10731.218), stdev = 88.042
  CI (99.9%): [10279.483, 10957.517] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 30.33% complete, ETA 02:14:29
# Fork: 1 of 1
# Warmup Iteration   1: 37580.512 ns/op
# Warmup Iteration   2: 31818.865 ns/op
Iteration   1: 23489.744 ns/op
Iteration   2: 23115.299 ns/op
Iteration   3: 21518.003 ns/op
Iteration   4: 19814.040 ns/op
Iteration   5: 19509.464 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  21489.310 ±(99.9%) 7040.658 ns/op [Average]
  (min, avg, max) = (19509.464, 21489.310, 23489.744), stdev = 1828.437
  CI (99.9%): [14448.652, 28529.968] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 30.67% complete, ETA 02:13:51
# Fork: 1 of 1
# Warmup Iteration   1: 50467.195 ns/op
# Warmup Iteration   2: 45227.509 ns/op
Iteration   1: 39295.546 ns/op
Iteration   2: 38045.232 ns/op
Iteration   3: 39441.921 ns/op
Iteration   4: 36954.233 ns/op
Iteration   5: 37926.592 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  38332.705 ±(99.9%) 3994.834 ns/op [Average]
  (min, avg, max) = (36954.233, 38332.705, 39441.921), stdev = 1037.446
  CI (99.9%): [34337.871, 42327.539] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 31.00% complete, ETA 02:13:11
# Fork: 1 of 1
# Warmup Iteration   1: 191852.631 ns/op
# Warmup Iteration   2: 139059.165 ns/op
Iteration   1: 108148.028 ns/op
Iteration   2: 94761.914 ns/op
Iteration   3: 96293.778 ns/op
Iteration   4: 96880.393 ns/op
Iteration   5: 96560.642 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  98528.951 ±(99.9%) 20941.378 ns/op [Average]
  (min, avg, max) = (94761.914, 98528.951, 108148.028), stdev = 5438.409
  CI (99.9%): [77587.573, 119470.329] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 31.33% complete, ETA 02:12:36
# Fork: 1 of 1
# Warmup Iteration   1: 2021617.571 ns/op
# Warmup Iteration   2: 1245700.700 ns/op
Iteration   1: 770126.719 ns/op
Iteration   2: 666176.917 ns/op
Iteration   3: 674439.020 ns/op
Iteration   4: 659256.813 ns/op
Iteration   5: 693370.195 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  692673.933 ±(99.9%) 173820.715 ns/op [Average]
  (min, avg, max) = (659256.813, 692673.933, 770126.719), stdev = 45140.688
  CI (99.9%): [518853.218, 866494.647] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 31.67% complete, ETA 02:11:58
# Fork: 1 of 1
# Warmup Iteration   1: 270166.079 ns/op
# Warmup Iteration   2: 47352.512 ns/op
Iteration   1: 34185.628 ns/op
Iteration   2: 34677.417 ns/op
Iteration   3: 35475.936 ns/op
Iteration   4: 35708.287 ns/op
Iteration   5: 34765.587 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  34962.571 ±(99.9%) 2391.891 ns/op [Average]
  (min, avg, max) = (34185.628, 34962.571, 35708.287), stdev = 621.166
  CI (99.9%): [32570.680, 37354.462] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 32.00% complete, ETA 02:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 408243.845 ns/op
# Warmup Iteration   2: 93168.369 ns/op
Iteration   1: 61638.542 ns/op
Iteration   2: 58823.778 ns/op
Iteration   3: 58498.844 ns/op
Iteration   4: 58998.715 ns/op
Iteration   5: 57620.238 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  59116.024 ±(99.9%) 5801.757 ns/op [Average]
  (min, avg, max) = (57620.238, 59116.024, 61638.542), stdev = 1506.698
  CI (99.9%): [53314.267, 64917.780] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 32.33% complete, ETA 02:10:41
# Fork: 1 of 1
# Warmup Iteration   1: 634708.708 ns/op
# Warmup Iteration   2: 198490.849 ns/op
Iteration   1: 143046.440 ns/op
Iteration   2: 133857.826 ns/op
Iteration   3: 132151.750 ns/op
Iteration   4: 127398.429 ns/op
Iteration   5: 124580.855 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  132207.060 ±(99.9%) 27330.226 ns/op [Average]
  (min, avg, max) = (124580.855, 132207.060, 143046.440), stdev = 7097.573
  CI (99.9%): [104876.834, 159537.286] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 32.67% complete, ETA 02:10:02
# Fork: 1 of 1
# Warmup Iteration   1: 2056856.574 ns/op
# Warmup Iteration   2: 437334.773 ns/op
Iteration   1: 297991.923 ns/op
Iteration   2: 307017.815 ns/op
Iteration   3: 304011.879 ns/op
Iteration   4: 314301.079 ns/op
Iteration   5: 297349.730 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  304134.485 ±(99.9%) 26916.816 ns/op [Average]
  (min, avg, max) = (297349.730, 304134.485, 314301.079), stdev = 6990.212
  CI (99.9%): [277217.669, 331051.301] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 33.00% complete, ETA 02:09:24
# Fork: 1 of 1
# Warmup Iteration   1: 17961104.356 ns/op
# Warmup Iteration   2: 3389542.266 ns/op
Iteration   1: 3007564.986 ns/op
Iteration   2: 2834993.715 ns/op
Iteration   3: 2947332.785 ns/op
Iteration   4: 2956686.494 ns/op
Iteration   5: 3156493.742 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2980614.344 ±(99.9%) 449658.405 ns/op [Average]
  (min, avg, max) = (2834993.715, 2980614.344, 3156493.742), stdev = 116774.860
  CI (99.9%): [2530955.939, 3430272.750] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 33.33% complete, ETA 02:08:46
# Fork: 1 of 1
# Warmup Iteration   1: 26024.411 ns/op
# Warmup Iteration   2: 13835.811 ns/op
Iteration   1: 11537.731 ns/op
Iteration   2: 10731.643 ns/op
Iteration   3: 10506.928 ns/op
Iteration   4: 11371.364 ns/op
Iteration   5: 10768.385 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10983.210 ±(99.9%) 1716.063 ns/op [Average]
  (min, avg, max) = (10506.928, 10983.210, 11537.731), stdev = 445.656
  CI (99.9%): [9267.147, 12699.273] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 33.67% complete, ETA 02:08:08
# Fork: 1 of 1
# Warmup Iteration   1: 75384.070 ns/op
# Warmup Iteration   2: 22680.666 ns/op
Iteration   1: 18997.455 ns/op
Iteration   2: 20142.924 ns/op
Iteration   3: 20811.184 ns/op
Iteration   4: 17748.897 ns/op
Iteration   5: 17553.777 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  19050.847 ±(99.9%) 5523.548 ns/op [Average]
  (min, avg, max) = (17553.777, 19050.847, 20811.184), stdev = 1434.448
  CI (99.9%): [13527.299, 24574.395] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 34.00% complete, ETA 02:07:32
# Fork: 1 of 1
# Warmup Iteration   1: 81062.665 ns/op
# Warmup Iteration   2: 65332.292 ns/op
Iteration   1: 33110.851 ns/op
Iteration   2: 29654.596 ns/op
Iteration   3: 30658.529 ns/op
Iteration   4: 30455.920 ns/op
Iteration   5: 33939.836 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  31563.946 ±(99.9%) 7134.323 ns/op [Average]
  (min, avg, max) = (29654.596, 31563.946, 33939.836), stdev = 1852.761
  CI (99.9%): [24429.624, 38698.269] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 34.33% complete, ETA 02:06:53
# Fork: 1 of 1
# Warmup Iteration   1: 398168.523 ns/op
# Warmup Iteration   2: 114090.294 ns/op
Iteration   1: 89910.429 ns/op
Iteration   2: 79141.611 ns/op
Iteration   3: 77228.556 ns/op
Iteration   4: 77755.136 ns/op
Iteration   5: 78055.203 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  80418.187 ±(99.9%) 20609.182 ns/op [Average]
  (min, avg, max) = (77228.556, 80418.187, 89910.429), stdev = 5352.139
  CI (99.9%): [59809.005, 101027.370] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 34.67% complete, ETA 02:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 2127037.451 ns/op
# Warmup Iteration   2: 1227189.327 ns/op
Iteration   1: 738365.919 ns/op
Iteration   2: 723252.913 ns/op
Iteration   3: 789041.360 ns/op
Iteration   4: 724574.272 ns/op
Iteration   5: 729476.406 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  740942.174 ±(99.9%) 106023.039 ns/op [Average]
  (min, avg, max) = (723252.913, 740942.174, 789041.360), stdev = 27533.847
  CI (99.9%): [634919.135, 846965.213] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 35.00% complete, ETA 02:05:34
# Fork: 1 of 1
# Warmup Iteration   1: 9724.712 ns/op
# Warmup Iteration   2: 2834.034 ns/op
Iteration   1: 2066.806 ns/op
Iteration   2: 2102.161 ns/op
Iteration   3: 2096.487 ns/op
Iteration   4: 2280.365 ns/op
Iteration   5: 2114.632 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2132.090 ±(99.9%) 326.259 ns/op [Average]
  (min, avg, max) = (2066.806, 2132.090, 2280.365), stdev = 84.728
  CI (99.9%): [1805.832, 2458.349] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 35.33% complete, ETA 02:04:55
# Fork: 1 of 1
# Warmup Iteration   1: 24000.299 ns/op
# Warmup Iteration   2: 5710.680 ns/op
Iteration   1: 4921.961 ns/op
Iteration   2: 4405.921 ns/op
Iteration   3: 4481.096 ns/op
Iteration   4: 4283.094 ns/op
Iteration   5: 4110.632 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4440.541 ±(99.9%) 1168.336 ns/op [Average]
  (min, avg, max) = (4110.632, 4440.541, 4921.961), stdev = 303.413
  CI (99.9%): [3272.205, 5608.877] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 35.67% complete, ETA 02:04:17
# Fork: 1 of 1
# Warmup Iteration   1: 37474.355 ns/op
# Warmup Iteration   2: 10577.846 ns/op
Iteration   1: 8527.162 ns/op
Iteration   2: 8370.410 ns/op
Iteration   3: 8712.430 ns/op
Iteration   4: 8794.188 ns/op
Iteration   5: 9008.246 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  8682.487 ±(99.9%) 945.195 ns/op [Average]
  (min, avg, max) = (8370.410, 8682.487, 9008.246), stdev = 245.464
  CI (99.9%): [7737.292, 9627.682] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 36.00% complete, ETA 02:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 78406.454 ns/op
# Warmup Iteration   2: 25954.301 ns/op
Iteration   1: 18745.394 ns/op
Iteration   2: 18572.086 ns/op
Iteration   3: 19427.604 ns/op
Iteration   4: 17471.149 ns/op
Iteration   5: 17089.698 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18261.186 ±(99.9%) 3697.515 ns/op [Average]
  (min, avg, max) = (17089.698, 18261.186, 19427.604), stdev = 960.233
  CI (99.9%): [14563.671, 21958.702] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 36.33% complete, ETA 02:02:59
# Fork: 1 of 1
# Warmup Iteration   1: 408093.952 ns/op
# Warmup Iteration   2: 240631.959 ns/op
Iteration   1: 171951.490 ns/op
Iteration   2: 179485.814 ns/op
Iteration   3: 168148.785 ns/op
Iteration   4: 182662.931 ns/op
Iteration   5: 166517.137 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  173753.231 ±(99.9%) 27177.910 ns/op [Average]
  (min, avg, max) = (166517.137, 173753.231, 182662.931), stdev = 7058.017
  CI (99.9%): [146575.322, 200931.141] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 36.67% complete, ETA 02:02:19
# Fork: 1 of 1
# Warmup Iteration   1: 15862.595 ns/op
# Warmup Iteration   2: 5117.185 ns/op
Iteration   1: 3912.818 ns/op
Iteration   2: 4099.025 ns/op
Iteration   3: 4909.262 ns/op
Iteration   4: 3840.677 ns/op
Iteration   5: 3955.145 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4143.385 ±(99.9%) 1688.106 ns/op [Average]
  (min, avg, max) = (3840.677, 4143.385, 4909.262), stdev = 438.396
  CI (99.9%): [2455.279, 5831.492] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 37.00% complete, ETA 02:01:41
# Fork: 1 of 1
# Warmup Iteration   1: 54822.645 ns/op
# Warmup Iteration   2: 11586.018 ns/op
Iteration   1: 8187.596 ns/op
Iteration   2: 7775.477 ns/op
Iteration   3: 7929.971 ns/op
Iteration   4: 7901.450 ns/op
Iteration   5: 8073.647 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  7973.628 ±(99.9%) 615.397 ns/op [Average]
  (min, avg, max) = (7775.477, 7973.628, 8187.596), stdev = 159.817
  CI (99.9%): [7358.231, 8589.025] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 37.33% complete, ETA 02:01:02
# Fork: 1 of 1
# Warmup Iteration   1: 116576.339 ns/op
# Warmup Iteration   2: 23078.708 ns/op
Iteration   1: 15487.420 ns/op
Iteration   2: 15688.927 ns/op
Iteration   3: 16741.277 ns/op
Iteration   4: 15943.480 ns/op
Iteration   5: 16120.635 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  15996.348 ±(99.9%) 1853.393 ns/op [Average]
  (min, avg, max) = (15487.420, 15996.348, 16741.277), stdev = 481.320
  CI (99.9%): [14142.954, 17849.741] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 37.67% complete, ETA 02:00:23
# Fork: 1 of 1
# Warmup Iteration   1: 154137.100 ns/op
# Warmup Iteration   2: 28988.464 ns/op
Iteration   1: 28476.732 ns/op
Iteration   2: 29904.728 ns/op
Iteration   3: 30383.644 ns/op
Iteration   4: 31785.486 ns/op
Iteration   5: 32728.117 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  30655.741 ±(99.9%) 6373.136 ns/op [Average]
  (min, avg, max) = (28476.732, 30655.741, 32728.117), stdev = 1655.083
  CI (99.9%): [24282.605, 37028.877] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 38.00% complete, ETA 01:59:45
# Fork: 1 of 1
# Warmup Iteration   1: 2575006.998 ns/op
# Warmup Iteration   2: 410327.355 ns/op
Iteration   1: 356229.347 ns/op
Iteration   2: 355248.510 ns/op
Iteration   3: 363133.085 ns/op
Iteration   4: 375330.208 ns/op
Iteration   5: 377343.567 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  365456.943 ±(99.9%) 40088.059 ns/op [Average]
  (min, avg, max) = (355248.510, 365456.943, 377343.567), stdev = 10410.742
  CI (99.9%): [325368.884, 405545.002] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 38.33% complete, ETA 01:59:08
# Fork: 1 of 1
# Warmup Iteration   1: 22939.814 ns/op
# Warmup Iteration   2: 5686.829 ns/op
Iteration   1: 5185.999 ns/op
Iteration   2: 6330.384 ns/op
Iteration   3: 5265.262 ns/op
Iteration   4: 4825.015 ns/op
Iteration   5: 4758.105 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5272.953 ±(99.9%) 2428.882 ns/op [Average]
  (min, avg, max) = (4758.105, 5272.953, 6330.384), stdev = 630.773
  CI (99.9%): [2844.071, 7701.835] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 38.67% complete, ETA 01:58:29
# Fork: 1 of 1
# Warmup Iteration   1: 68248.161 ns/op
# Warmup Iteration   2: 11684.366 ns/op
Iteration   1: 10253.781 ns/op
Iteration   2: 10343.457 ns/op
Iteration   3: 9698.326 ns/op
Iteration   4: 9881.779 ns/op
Iteration   5: 10277.534 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  10090.975 ±(99.9%) 1094.209 ns/op [Average]
  (min, avg, max) = (9698.326, 10090.975, 10343.457), stdev = 284.163
  CI (99.9%): [8996.766, 11185.184] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 39.00% complete, ETA 01:57:50
# Fork: 1 of 1
# Warmup Iteration   1: 56806.803 ns/op
# Warmup Iteration   2: 20860.417 ns/op
Iteration   1: 21050.608 ns/op
Iteration   2: 19078.793 ns/op
Iteration   3: 19787.447 ns/op
Iteration   4: 20787.010 ns/op
Iteration   5: 18824.686 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  19905.709 ±(99.9%) 3828.377 ns/op [Average]
  (min, avg, max) = (18824.686, 19905.709, 21050.608), stdev = 994.217
  CI (99.9%): [16077.332, 23734.086] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 39.33% complete, ETA 01:57:13
# Fork: 1 of 1
# Warmup Iteration   1: 245826.315 ns/op
# Warmup Iteration   2: 48150.382 ns/op
Iteration   1: 42373.870 ns/op
Iteration   2: 42681.755 ns/op
Iteration   3: 41619.649 ns/op
Iteration   4: 43418.399 ns/op
Iteration   5: 40857.366 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  42190.208 ±(99.9%) 3795.283 ns/op [Average]
  (min, avg, max) = (40857.366, 42190.208, 43418.399), stdev = 985.623
  CI (99.9%): [38394.925, 45985.491] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 39.67% complete, ETA 01:56:34
# Fork: 1 of 1
# Warmup Iteration   1: 1943508.271 ns/op
# Warmup Iteration   2: 618731.063 ns/op
Iteration   1: 454520.410 ns/op
Iteration   2: 439038.750 ns/op
Iteration   3: 468913.669 ns/op
Iteration   4: 499615.005 ns/op
Iteration   5: 505926.947 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  473602.956 ±(99.9%) 110639.601 ns/op [Average]
  (min, avg, max) = (439038.750, 473602.956, 505926.947), stdev = 28732.753
  CI (99.9%): [362963.355, 584242.557] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 40.00% complete, ETA 01:55:55
# Fork: 1 of 1
# Warmup Iteration   1: 47320.981 ns/op
# Warmup Iteration   2: 7197.785 ns/op
Iteration   1: 5898.761 ns/op
Iteration   2: 5575.986 ns/op
Iteration   3: 4929.670 ns/op
Iteration   4: 5120.475 ns/op
Iteration   5: 5383.659 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5381.710 ±(99.9%) 1463.337 ns/op [Average]
  (min, avg, max) = (4929.670, 5381.710, 5898.761), stdev = 380.024
  CI (99.9%): [3918.374, 6845.047] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 40.33% complete, ETA 01:55:17
# Fork: 1 of 1
# Warmup Iteration   1: 74010.275 ns/op
# Warmup Iteration   2: 13804.720 ns/op
Iteration   1: 12182.695 ns/op
Iteration   2: 12782.766 ns/op
Iteration   3: 12332.353 ns/op
Iteration   4: 12071.093 ns/op
Iteration   5: 11832.807 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12240.343 ±(99.9%) 1362.420 ns/op [Average]
  (min, avg, max) = (11832.807, 12240.343, 12782.766), stdev = 353.816
  CI (99.9%): [10877.923, 13602.763] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 40.67% complete, ETA 01:54:37
# Fork: 1 of 1
# Warmup Iteration   1: 124068.755 ns/op
# Warmup Iteration   2: 24715.846 ns/op
Iteration   1: 23375.760 ns/op
Iteration   2: 24235.349 ns/op
Iteration   3: 24689.915 ns/op
Iteration   4: 22643.966 ns/op
Iteration   5: 23485.031 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  23686.004 ±(99.9%) 3063.684 ns/op [Average]
  (min, avg, max) = (22643.966, 23686.004, 24689.915), stdev = 795.629
  CI (99.9%): [20622.320, 26749.689] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 41.00% complete, ETA 01:53:58
# Fork: 1 of 1
# Warmup Iteration   1: 259261.038 ns/op
# Warmup Iteration   2: 59584.585 ns/op
Iteration   1: 54467.599 ns/op
Iteration   2: 50396.099 ns/op
Iteration   3: 50477.761 ns/op
Iteration   4: 53997.298 ns/op
Iteration   5: 53924.858 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  52652.723 ±(99.9%) 7830.830 ns/op [Average]
  (min, avg, max) = (50396.099, 52652.723, 54467.599), stdev = 2033.642
  CI (99.9%): [44821.893, 60483.553] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 41.33% complete, ETA 01:53:19
# Fork: 1 of 1
# Warmup Iteration   1: 4279665.443 ns/op
# Warmup Iteration   2: 558736.714 ns/op
Iteration   1: 495255.014 ns/op
Iteration   2: 495733.107 ns/op
Iteration   3: 572172.341 ns/op
Iteration   4: 526942.019 ns/op
Iteration   5: 540153.778 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  526051.252 ±(99.9%) 124692.325 ns/op [Average]
  (min, avg, max) = (495255.014, 526051.252, 572172.341), stdev = 32382.201
  CI (99.9%): [401358.927, 650743.576] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 41.67% complete, ETA 01:52:41
# Fork: 1 of 1
# Warmup Iteration   1: 132909.095 ns/op
# Warmup Iteration   2: 28214.055 ns/op
Iteration   1: 23161.901 ns/op
Iteration   2: 24316.876 ns/op
Iteration   3: 23000.319 ns/op
Iteration   4: 21369.986 ns/op
Iteration   5: 22230.129 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  22815.842 ±(99.9%) 4235.905 ns/op [Average]
  (min, avg, max) = (21369.986, 22815.842, 24316.876), stdev = 1100.051
  CI (99.9%): [18579.937, 27051.747] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 42.00% complete, ETA 01:52:02
# Fork: 1 of 1
# Warmup Iteration   1: 288720.300 ns/op
# Warmup Iteration   2: 52931.200 ns/op
Iteration   1: 42235.366 ns/op
Iteration   2: 43537.136 ns/op
Iteration   3: 41550.627 ns/op
Iteration   4: 51572.359 ns/op
Iteration   5: 42190.036 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  44217.105 ±(99.9%) 16074.827 ns/op [Average]
  (min, avg, max) = (41550.627, 44217.105, 51572.359), stdev = 4174.582
  CI (99.9%): [28142.277, 60291.932] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 42.33% complete, ETA 01:51:23
# Fork: 1 of 1
# Warmup Iteration   1: 614409.857 ns/op
# Warmup Iteration   2: 109908.546 ns/op
Iteration   1: 91434.220 ns/op
Iteration   2: 105723.841 ns/op
Iteration   3: 101209.335 ns/op
Iteration   4: 89653.969 ns/op
Iteration   5: 91772.535 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  95958.780 ±(99.9%) 27273.847 ns/op [Average]
  (min, avg, max) = (89653.969, 95958.780, 105723.841), stdev = 7082.931
  CI (99.9%): [68684.933, 123232.627] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 42.67% complete, ETA 01:50:44
# Fork: 1 of 1
# Warmup Iteration   1: 869936.469 ns/op
# Warmup Iteration   2: 292838.434 ns/op
Iteration   1: 229555.181 ns/op
Iteration   2: 219366.461 ns/op
Iteration   3: 212318.808 ns/op
Iteration   4: 207593.648 ns/op
Iteration   5: 206312.366 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  215029.293 ±(99.9%) 36955.792 ns/op [Average]
  (min, avg, max) = (206312.366, 215029.293, 229555.181), stdev = 9597.302
  CI (99.9%): [178073.501, 251985.086] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 43.00% complete, ETA 01:50:05
# Fork: 1 of 1
# Warmup Iteration   1: 9195147.996 ns/op
# Warmup Iteration   2: 2668248.513 ns/op
Iteration   1: 2171739.734 ns/op
Iteration   2: 2086498.424 ns/op
Iteration   3: 1986640.359 ns/op
Iteration   4: 2090230.080 ns/op
Iteration   5: 2109585.428 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2088938.805 ±(99.9%) 256544.162 ns/op [Average]
  (min, avg, max) = (1986640.359, 2088938.805, 2171739.734), stdev = 66623.704
  CI (99.9%): [1832394.643, 2345482.967] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 43.33% complete, ETA 01:49:26
# Fork: 1 of 1
# Warmup Iteration   1: 327410.973 ns/op
# Warmup Iteration   2: 127523.222 ns/op
Iteration   1: 79460.001 ns/op
Iteration   2: 65899.462 ns/op
Iteration   3: 61883.813 ns/op
Iteration   4: 65128.471 ns/op
Iteration   5: 67193.362 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  67913.022 ±(99.9%) 25974.737 ns/op [Average]
  (min, avg, max) = (61883.813, 67913.022, 79460.001), stdev = 6745.557
  CI (99.9%): [41938.285, 93887.759] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 43.67% complete, ETA 01:48:48
# Fork: 1 of 1
# Warmup Iteration   1: 297695.933 ns/op
# Warmup Iteration   2: 213057.118 ns/op
Iteration   1: 175587.081 ns/op
Iteration   2: 148143.666 ns/op
Iteration   3: 156913.035 ns/op
Iteration   4: 147217.539 ns/op
Iteration   5: 139549.617 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  153482.188 ±(99.9%) 53156.295 ns/op [Average]
  (min, avg, max) = (139549.617, 153482.188, 175587.081), stdev = 13804.521
  CI (99.9%): [100325.893, 206638.482] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 44.00% complete, ETA 01:48:08
# Fork: 1 of 1
# Warmup Iteration   1: 608817.923 ns/op
# Warmup Iteration   2: 420604.156 ns/op
Iteration   1: 361373.009 ns/op
Iteration   2: 331736.427 ns/op
Iteration   3: 336061.390 ns/op
Iteration   4: 324987.159 ns/op
Iteration   5: 322789.270 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  335389.451 ±(99.9%) 59526.820 ns/op [Average]
  (min, avg, max) = (322789.270, 335389.451, 361373.009), stdev = 15458.926
  CI (99.9%): [275862.631, 394916.271] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 44.33% complete, ETA 01:47:30
# Fork: 1 of 1
# Warmup Iteration   1: 2348417.497 ns/op
# Warmup Iteration   2: 1079931.331 ns/op
Iteration   1: 845790.218 ns/op
Iteration   2: 788649.030 ns/op
Iteration   3: 656137.707 ns/op
Iteration   4: 686144.569 ns/op
Iteration   5: 677696.755 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  730883.656 ±(99.9%) 316115.034 ns/op [Average]
  (min, avg, max) = (656137.707, 730883.656, 845790.218), stdev = 82094.071
  CI (99.9%): [414768.621, 1046998.690] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 44.67% complete, ETA 01:46:53
# Fork: 1 of 1
# Warmup Iteration   1: 21765868.807 ns/op
# Warmup Iteration   2: 8302543.252 ns/op
Iteration   1: 7308530.424 ns/op
Iteration   2: 7419232.640 ns/op
Iteration   3: 7155970.559 ns/op
Iteration   4: 7343152.288 ns/op
Iteration   5: 7064130.400 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  7258203.262 ±(99.9%) 557331.400 ns/op [Average]
  (min, avg, max) = (7064130.400, 7258203.262, 7419232.640), stdev = 144737.195
  CI (99.9%): [6700871.862, 7815534.662] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 45.00% complete, ETA 01:46:14
# Fork: 1 of 1
# Warmup Iteration   1: 38384.892 ns/op
# Warmup Iteration   2: 4155.816 ns/op
Iteration   1: 4105.573 ns/op
Iteration   2: 4117.183 ns/op
Iteration   3: 4164.044 ns/op
Iteration   4: 4110.254 ns/op
Iteration   5: 4090.508 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4117.512 ±(99.9%) 107.019 ns/op [Average]
  (min, avg, max) = (4090.508, 4117.512, 4164.044), stdev = 27.793
  CI (99.9%): [4010.493, 4224.532] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 45.33% complete, ETA 01:45:36
# Fork: 1 of 1
# Warmup Iteration   1: 84334.995 ns/op
# Warmup Iteration   2: 8848.266 ns/op
Iteration   1: 7576.685 ns/op
Iteration   2: 7301.388 ns/op
Iteration   3: 7762.706 ns/op
Iteration   4: 7729.995 ns/op
Iteration   5: 8230.327 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  7720.220 ±(99.9%) 1303.163 ns/op [Average]
  (min, avg, max) = (7301.388, 7720.220, 8230.327), stdev = 338.427
  CI (99.9%): [6417.057, 9023.383] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 45.67% complete, ETA 01:44:57
# Fork: 1 of 1
# Warmup Iteration   1: 40451.089 ns/op
# Warmup Iteration   2: 15756.692 ns/op
Iteration   1: 13833.966 ns/op
Iteration   2: 13758.069 ns/op
Iteration   3: 14694.730 ns/op
Iteration   4: 14072.060 ns/op
Iteration   5: 13860.948 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  14043.954 ±(99.9%) 1470.845 ns/op [Average]
  (min, avg, max) = (13758.069, 14043.954, 14694.730), stdev = 381.974
  CI (99.9%): [12573.110, 15514.799] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 46.00% complete, ETA 01:44:18
# Fork: 1 of 1
# Warmup Iteration   1: 209187.331 ns/op
# Warmup Iteration   2: 24034.262 ns/op
Iteration   1: 22679.376 ns/op
Iteration   2: 24386.406 ns/op
Iteration   3: 24598.164 ns/op
Iteration   4: 25392.587 ns/op
Iteration   5: 27281.038 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  24867.514 ±(99.9%) 6441.278 ns/op [Average]
  (min, avg, max) = (22679.376, 24867.514, 27281.038), stdev = 1672.779
  CI (99.9%): [18426.236, 31308.792] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 46.33% complete, ETA 01:43:39
# Fork: 1 of 1
# Warmup Iteration   1: 986786.371 ns/op
# Warmup Iteration   2: 250404.682 ns/op
Iteration   1: 237440.609 ns/op
Iteration   2: 236858.485 ns/op
Iteration   3: 236401.885 ns/op
Iteration   4: 236298.062 ns/op
Iteration   5: 244467.072 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  238293.223 ±(99.9%) 13402.739 ns/op [Average]
  (min, avg, max) = (236298.062, 238293.223, 244467.072), stdev = 3480.649
  CI (99.9%): [224890.483, 251695.962] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 46.67% complete, ETA 01:43:01
# Fork: 1 of 1
# Warmup Iteration   1: 12664.604 ns/op
# Warmup Iteration   2: 13169.058 ns/op
Iteration   1: 13780.138 ns/op
Iteration   2: 12128.167 ns/op
Iteration   3: 11105.728 ns/op
Iteration   4: 10754.461 ns/op
Iteration   5: 11153.253 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  11784.350 ±(99.9%) 4724.248 ns/op [Average]
  (min, avg, max) = (10754.461, 11784.350, 13780.138), stdev = 1226.872
  CI (99.9%): [7060.101, 16508.598] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 47.00% complete, ETA 01:42:24
# Fork: 1 of 1
# Warmup Iteration   1: 28065.052 ns/op
# Warmup Iteration   2: 26013.409 ns/op
Iteration   1: 21219.472 ns/op
Iteration   2: 18601.309 ns/op
Iteration   3: 20800.734 ns/op
Iteration   4: 16897.718 ns/op
Iteration   5: 15559.972 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18615.841 ±(99.9%) 9401.240 ns/op [Average]
  (min, avg, max) = (15559.972, 18615.841, 21219.472), stdev = 2441.472
  CI (99.9%): [9214.601, 28017.081] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 47.33% complete, ETA 01:41:45
# Fork: 1 of 1
# Warmup Iteration   1: 49060.447 ns/op
# Warmup Iteration   2: 38869.518 ns/op
Iteration   1: 38733.161 ns/op
Iteration   2: 40813.495 ns/op
Iteration   3: 38312.413 ns/op
Iteration   4: 39776.355 ns/op
Iteration   5: 38521.804 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  39231.446 ±(99.9%) 4036.894 ns/op [Average]
  (min, avg, max) = (38312.413, 39231.446, 40813.495), stdev = 1048.369
  CI (99.9%): [35194.552, 43268.340] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 47.67% complete, ETA 01:41:06
# Fork: 1 of 1
# Warmup Iteration   1: 101892.821 ns/op
# Warmup Iteration   2: 103320.107 ns/op
Iteration   1: 109259.438 ns/op
Iteration   2: 91898.035 ns/op
Iteration   3: 85433.687 ns/op
Iteration   4: 85469.336 ns/op
Iteration   5: 85539.798 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  91520.059 ±(99.9%) 39656.357 ns/op [Average]
  (min, avg, max) = (85433.687, 91520.059, 109259.438), stdev = 10298.630
  CI (99.9%): [51863.702, 131176.416] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 48.00% complete, ETA 01:40:29
# Fork: 1 of 1
# Warmup Iteration   1: 867576.550 ns/op
# Warmup Iteration   2: 801776.970 ns/op
Iteration   1: 761069.814 ns/op
Iteration   2: 707004.987 ns/op
Iteration   3: 639604.785 ns/op
Iteration   4: 715802.576 ns/op
Iteration   5: 742338.076 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  713164.048 ±(99.9%) 178567.228 ns/op [Average]
  (min, avg, max) = (639604.785, 713164.048, 761069.814), stdev = 46373.342
  CI (99.9%): [534596.820, 891731.275] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 48.33% complete, ETA 01:39:50
# Fork: 1 of 1
# Warmup Iteration   1: 120536.567 ns/op
# Warmup Iteration   2: 36104.396 ns/op
Iteration   1: 30284.097 ns/op
Iteration   2: 30633.680 ns/op
Iteration   3: 30279.266 ns/op
Iteration   4: 33119.297 ns/op
Iteration   5: 30672.640 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  30997.796 ±(99.9%) 4622.667 ns/op [Average]
  (min, avg, max) = (30279.266, 30997.796, 33119.297), stdev = 1200.492
  CI (99.9%): [26375.129, 35620.463] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 48.67% complete, ETA 01:39:13
# Fork: 1 of 1
# Warmup Iteration   1: 293949.394 ns/op
# Warmup Iteration   2: 67858.100 ns/op
Iteration   1: 54645.393 ns/op
Iteration   2: 56125.547 ns/op
Iteration   3: 54114.120 ns/op
Iteration   4: 53695.148 ns/op
Iteration   5: 55721.536 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  54860.349 ±(99.9%) 3993.884 ns/op [Average]
  (min, avg, max) = (53695.148, 54860.349, 56125.547), stdev = 1037.199
  CI (99.9%): [50866.465, 58854.233] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 49.00% complete, ETA 01:38:35
# Fork: 1 of 1
# Warmup Iteration   1: 356517.706 ns/op
# Warmup Iteration   2: 104093.044 ns/op
Iteration   1: 103336.566 ns/op
Iteration   2: 108772.722 ns/op
Iteration   3: 113729.472 ns/op
Iteration   4: 118559.018 ns/op
Iteration   5: 126522.335 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  114184.023 ±(99.9%) 34362.043 ns/op [Average]
  (min, avg, max) = (103336.566, 114184.023, 126522.335), stdev = 8923.714
  CI (99.9%): [79821.979, 148546.066] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 49.33% complete, ETA 01:37:56
# Fork: 1 of 1
# Warmup Iteration   1: 1733081.951 ns/op
# Warmup Iteration   2: 330572.079 ns/op
Iteration   1: 315809.540 ns/op
Iteration   2: 264982.455 ns/op
Iteration   3: 270427.916 ns/op
Iteration   4: 266420.837 ns/op
Iteration   5: 271115.749 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  277751.299 ±(99.9%) 82531.322 ns/op [Average]
  (min, avg, max) = (264982.455, 277751.299, 315809.540), stdev = 21433.122
  CI (99.9%): [195219.977, 360282.621] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 49.67% complete, ETA 01:37:17
# Fork: 1 of 1
# Warmup Iteration   1: 10759575.817 ns/op
# Warmup Iteration   2: 3056049.017 ns/op
Iteration   1: 2647168.869 ns/op
Iteration   2: 2470736.533 ns/op
Iteration   3: 2815196.376 ns/op
Iteration   4: 2619325.873 ns/op
Iteration   5: 2466752.740 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2603836.078 ±(99.9%) 555675.306 ns/op [Average]
  (min, avg, max) = (2466752.740, 2603836.078, 2815196.376), stdev = 144307.112
  CI (99.9%): [2048160.772, 3159511.385] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 01:36:38
# Fork: 1 of 1
# Warmup Iteration   1: 35321.350 ns/op
# Warmup Iteration   2: 32784.499 ns/op
Iteration   1: 24570.138 ns/op
Iteration   2: 20803.341 ns/op
Iteration   3: 19332.081 ns/op
Iteration   4: 19879.014 ns/op
Iteration   5: 19416.889 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  20800.293 ±(99.9%) 8420.934 ns/op [Average]
  (min, avg, max) = (19332.081, 20800.293, 24570.138), stdev = 2186.890
  CI (99.9%): [12379.359, 29221.227] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.33% complete, ETA 01:35:59
# Fork: 1 of 1
# Warmup Iteration   1: 56175.649 ns/op
# Warmup Iteration   2: 47422.845 ns/op
Iteration   1: 34615.582 ns/op
Iteration   2: 27768.149 ns/op
Iteration   3: 23048.706 ns/op
Iteration   4: 23897.935 ns/op
Iteration   5: 23357.813 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  26537.637 ±(99.9%) 18866.122 ns/op [Average]
  (min, avg, max) = (23048.706, 26537.637, 34615.582), stdev = 4899.472
  CI (99.9%): [7671.515, 45403.759] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.67% complete, ETA 01:35:21
# Fork: 1 of 1
# Warmup Iteration   1: 89920.765 ns/op
# Warmup Iteration   2: 79286.851 ns/op
Iteration   1: 52628.101 ns/op
Iteration   2: 52585.125 ns/op
Iteration   3: 53101.742 ns/op
Iteration   4: 49924.424 ns/op
Iteration   5: 52462.185 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  52140.316 ±(99.9%) 4860.783 ns/op [Average]
  (min, avg, max) = (49924.424, 52140.316, 53101.742), stdev = 1262.330
  CI (99.9%): [47279.532, 57001.099] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 51.00% complete, ETA 01:34:42
# Fork: 1 of 1
# Warmup Iteration   1: 370881.490 ns/op
# Warmup Iteration   2: 214407.624 ns/op
Iteration   1: 111785.361 ns/op
Iteration   2: 105830.426 ns/op
Iteration   3: 102615.840 ns/op
Iteration   4: 104885.633 ns/op
Iteration   5: 103199.164 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  105663.285 ±(99.9%) 14078.739 ns/op [Average]
  (min, avg, max) = (102615.840, 105663.285, 111785.361), stdev = 3656.204
  CI (99.9%): [91584.545, 119742.024] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 51.33% complete, ETA 01:34:03
# Fork: 1 of 1
# Warmup Iteration   1: 2208255.531 ns/op
# Warmup Iteration   2: 1363430.160 ns/op
Iteration   1: 903429.060 ns/op
Iteration   2: 755387.560 ns/op
Iteration   3: 737267.026 ns/op
Iteration   4: 819506.115 ns/op
Iteration   5: 793604.005 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  801838.753 ±(99.9%) 251236.136 ns/op [Average]
  (min, avg, max) = (737267.026, 801838.753, 903429.060), stdev = 65245.227
  CI (99.9%): [550602.617, 1053074.889] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 51.67% complete, ETA 01:33:25
# Fork: 1 of 1
# Warmup Iteration   1: 39044.504 ns/op
# Warmup Iteration   2: 8349.109 ns/op
Iteration   1: 6083.458 ns/op
Iteration   2: 5606.659 ns/op
Iteration   3: 5686.199 ns/op
Iteration   4: 5906.395 ns/op
Iteration   5: 6244.084 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  5905.359 ±(99.9%) 1025.508 ns/op [Average]
  (min, avg, max) = (5606.659, 5905.359, 6244.084), stdev = 266.321
  CI (99.9%): [4879.851, 6930.867] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 52.00% complete, ETA 01:32:46
# Fork: 1 of 1
# Warmup Iteration   1: 40278.023 ns/op
# Warmup Iteration   2: 17000.912 ns/op
Iteration   1: 12449.894 ns/op
Iteration   2: 11393.405 ns/op
Iteration   3: 10135.316 ns/op
Iteration   4: 10839.208 ns/op
Iteration   5: 11111.474 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  11185.859 ±(99.9%) 3261.816 ns/op [Average]
  (min, avg, max) = (10135.316, 11185.859, 12449.894), stdev = 847.083
  CI (99.9%): [7924.043, 14447.675] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 52.33% complete, ETA 01:32:06
# Fork: 1 of 1
# Warmup Iteration   1: 124568.143 ns/op
# Warmup Iteration   2: 20477.506 ns/op
Iteration   1: 19693.601 ns/op
Iteration   2: 20663.890 ns/op
Iteration   3: 19611.808 ns/op
Iteration   4: 19677.846 ns/op
Iteration   5: 20042.350 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  19937.899 ±(99.9%) 1691.236 ns/op [Average]
  (min, avg, max) = (19611.808, 19937.899, 20663.890), stdev = 439.209
  CI (99.9%): [18246.663, 21629.136] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 52.67% complete, ETA 01:31:29
# Fork: 1 of 1
# Warmup Iteration   1: 230205.987 ns/op
# Warmup Iteration   2: 50444.040 ns/op
Iteration   1: 42256.983 ns/op
Iteration   2: 41847.871 ns/op
Iteration   3: 37234.006 ns/op
Iteration   4: 38810.459 ns/op
Iteration   5: 38100.785 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  39650.021 ±(99.9%) 8731.908 ns/op [Average]
  (min, avg, max) = (37234.006, 39650.021, 42256.983), stdev = 2267.649
  CI (99.9%): [30918.113, 48381.929] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 53.00% complete, ETA 01:30:50
# Fork: 1 of 1
# Warmup Iteration   1: 1717423.416 ns/op
# Warmup Iteration   2: 426587.406 ns/op
Iteration   1: 311487.504 ns/op
Iteration   2: 325252.608 ns/op
Iteration   3: 333281.122 ns/op
Iteration   4: 309504.925 ns/op
Iteration   5: 301306.227 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  316166.477 ±(99.9%) 49558.436 ns/op [Average]
  (min, avg, max) = (301306.227, 316166.477, 333281.122), stdev = 12870.168
  CI (99.9%): [266608.041, 365724.913] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 53.33% complete, ETA 01:30:11
# Fork: 1 of 1
# Warmup Iteration   1: 35736.391 ns/op
# Warmup Iteration   2: 9384.885 ns/op
Iteration   1: 8588.621 ns/op
Iteration   2: 8360.350 ns/op
Iteration   3: 8636.115 ns/op
Iteration   4: 8858.197 ns/op
Iteration   5: 8191.160 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8526.889 ±(99.9%) 992.905 ns/op [Average]
  (min, avg, max) = (8191.160, 8526.889, 8858.197), stdev = 257.854
  CI (99.9%): [7533.984, 9519.793] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 53.67% complete, ETA 01:29:33
# Fork: 1 of 1
# Warmup Iteration   1: 68178.322 ns/op
# Warmup Iteration   2: 34072.454 ns/op
Iteration   1: 18980.483 ns/op
Iteration   2: 17739.216 ns/op
Iteration   3: 17288.463 ns/op
Iteration   4: 17164.528 ns/op
Iteration   5: 18606.329 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  17955.804 ±(99.9%) 3099.423 ns/op [Average]
  (min, avg, max) = (17164.528, 17955.804, 18980.483), stdev = 804.910
  CI (99.9%): [14856.381, 21055.227] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 54.00% complete, ETA 01:28:55
# Fork: 1 of 1
# Warmup Iteration   1: 151774.149 ns/op
# Warmup Iteration   2: 36808.406 ns/op
Iteration   1: 30316.359 ns/op
Iteration   2: 29070.721 ns/op
Iteration   3: 30262.417 ns/op
Iteration   4: 29481.766 ns/op
Iteration   5: 28350.519 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  29496.356 ±(99.9%) 3194.860 ns/op [Average]
  (min, avg, max) = (28350.519, 29496.356, 30316.359), stdev = 829.695
  CI (99.9%): [26301.496, 32691.216] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 54.33% complete, ETA 01:28:16
# Fork: 1 of 1
# Warmup Iteration   1: 219382.643 ns/op
# Warmup Iteration   2: 62757.879 ns/op
Iteration   1: 54303.031 ns/op
Iteration   2: 55439.662 ns/op
Iteration   3: 56361.041 ns/op
Iteration   4: 57275.019 ns/op
Iteration   5: 55984.061 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  55872.563 ±(99.9%) 4248.275 ns/op [Average]
  (min, avg, max) = (54303.031, 55872.563, 57275.019), stdev = 1103.263
  CI (99.9%): [51624.288, 60120.837] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 54.67% complete, ETA 01:27:37
# Fork: 1 of 1
# Warmup Iteration   1: 2899712.392 ns/op
# Warmup Iteration   2: 688067.633 ns/op
Iteration   1: 502787.388 ns/op
Iteration   2: 520022.647 ns/op
Iteration   3: 504077.112 ns/op
Iteration   4: 491450.940 ns/op
Iteration   5: 488607.248 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  501389.067 ±(99.9%) 47883.358 ns/op [Average]
  (min, avg, max) = (488607.248, 501389.067, 520022.647), stdev = 12435.156
  CI (99.9%): [453505.709, 549272.425] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 55.00% complete, ETA 01:26:58
# Fork: 1 of 1
# Warmup Iteration   1: 46460.313 ns/op
# Warmup Iteration   2: 11521.652 ns/op
Iteration   1: 8228.637 ns/op
Iteration   2: 8253.256 ns/op
Iteration   3: 7882.878 ns/op
Iteration   4: 8187.692 ns/op
Iteration   5: 7953.061 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8101.105 ±(99.9%) 657.016 ns/op [Average]
  (min, avg, max) = (7882.878, 8101.105, 8253.256), stdev = 170.625
  CI (99.9%): [7444.088, 8758.121] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 55.33% complete, ETA 01:26:19
# Fork: 1 of 1
# Warmup Iteration   1: 54511.486 ns/op
# Warmup Iteration   2: 25476.247 ns/op
Iteration   1: 15321.878 ns/op
Iteration   2: 14929.282 ns/op
Iteration   3: 20342.214 ns/op
Iteration   4: 16651.861 ns/op
Iteration   5: 15579.450 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16564.937 ±(99.9%) 8494.822 ns/op [Average]
  (min, avg, max) = (14929.282, 16564.937, 20342.214), stdev = 2206.078
  CI (99.9%): [8070.115, 25059.759] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 55.67% complete, ETA 01:25:40
# Fork: 1 of 1
# Warmup Iteration   1: 99577.204 ns/op
# Warmup Iteration   2: 31439.706 ns/op
Iteration   1: 27864.152 ns/op
Iteration   2: 27478.480 ns/op
Iteration   3: 27265.341 ns/op
Iteration   4: 26852.517 ns/op
Iteration   5: 28725.372 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27637.173 ±(99.9%) 2732.888 ns/op [Average]
  (min, avg, max) = (26852.517, 27637.173, 28725.372), stdev = 709.722
  CI (99.9%): [24904.284, 30370.061] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 56.00% complete, ETA 01:25:03
# Fork: 1 of 1
# Warmup Iteration   1: 204327.573 ns/op
# Warmup Iteration   2: 111111.463 ns/op
Iteration   1: 60398.038 ns/op
Iteration   2: 62873.341 ns/op
Iteration   3: 60309.714 ns/op
Iteration   4: 64004.931 ns/op
Iteration   5: 60817.808 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  61680.767 ±(99.9%) 6412.753 ns/op [Average]
  (min, avg, max) = (60309.714, 61680.767, 64004.931), stdev = 1665.372
  CI (99.9%): [55268.014, 68093.520] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 56.33% complete, ETA 01:24:24
# Fork: 1 of 1
# Warmup Iteration   1: 2215551.871 ns/op
# Warmup Iteration   2: 514637.623 ns/op
Iteration   1: 459924.988 ns/op
Iteration   2: 493327.443 ns/op
Iteration   3: 478719.169 ns/op
Iteration   4: 484192.595 ns/op
Iteration   5: 521528.087 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  487538.456 ±(99.9%) 86965.870 ns/op [Average]
  (min, avg, max) = (459924.988, 487538.456, 521528.087), stdev = 22584.760
  CI (99.9%): [400572.587, 574504.326] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 56.67% complete, ETA 01:23:45
# Fork: 1 of 1
# Warmup Iteration   1: 47291.665 ns/op
# Warmup Iteration   2: 13476.237 ns/op
Iteration   1: 8848.224 ns/op
Iteration   2: 8936.602 ns/op
Iteration   3: 8650.344 ns/op
Iteration   4: 8646.093 ns/op
Iteration   5: 8715.563 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8759.365 ±(99.9%) 494.413 ns/op [Average]
  (min, avg, max) = (8646.093, 8759.365, 8936.602), stdev = 128.397
  CI (99.9%): [8264.952, 9253.778] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 57.00% complete, ETA 01:23:06
# Fork: 1 of 1
# Warmup Iteration   1: 78459.456 ns/op
# Warmup Iteration   2: 27640.794 ns/op
Iteration   1: 15744.890 ns/op
Iteration   2: 16352.951 ns/op
Iteration   3: 17063.617 ns/op
Iteration   4: 15511.251 ns/op
Iteration   5: 16957.075 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16325.957 ±(99.9%) 2684.816 ns/op [Average]
  (min, avg, max) = (15511.251, 16325.957, 17063.617), stdev = 697.238
  CI (99.9%): [13641.140, 19010.773] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 57.33% complete, ETA 01:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 143518.479 ns/op
# Warmup Iteration   2: 36447.924 ns/op
Iteration   1: 32515.156 ns/op
Iteration   2: 29623.117 ns/op
Iteration   3: 31978.554 ns/op
Iteration   4: 29949.282 ns/op
Iteration   5: 29192.155 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30651.653 ±(99.9%) 5748.514 ns/op [Average]
  (min, avg, max) = (29192.155, 30651.653, 32515.156), stdev = 1492.871
  CI (99.9%): [24903.139, 36400.166] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 57.67% complete, ETA 01:21:50
# Fork: 1 of 1
# Warmup Iteration   1: 174772.952 ns/op
# Warmup Iteration   2: 97296.483 ns/op
Iteration   1: 60185.831 ns/op
Iteration   2: 58642.674 ns/op
Iteration   3: 58284.989 ns/op
Iteration   4: 58095.371 ns/op
Iteration   5: 57803.190 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  58602.411 ±(99.9%) 3604.746 ns/op [Average]
  (min, avg, max) = (57803.190, 58602.411, 60185.831), stdev = 936.141
  CI (99.9%): [54997.665, 62207.157] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 58.00% complete, ETA 01:21:11
# Fork: 1 of 1
# Warmup Iteration   1: 2471139.049 ns/op
# Warmup Iteration   2: 662550.645 ns/op
Iteration   1: 448885.836 ns/op
Iteration   2: 466063.384 ns/op
Iteration   3: 479673.556 ns/op
Iteration   4: 488275.143 ns/op
Iteration   5: 486974.566 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  473974.497 ±(99.9%) 63798.099 ns/op [Average]
  (min, avg, max) = (448885.836, 473974.497, 488275.143), stdev = 16568.164
  CI (99.9%): [410176.398, 537772.596] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 58.33% complete, ETA 01:20:32
# Fork: 1 of 1
# Warmup Iteration   1: 308368.023 ns/op
# Warmup Iteration   2: 156416.874 ns/op
Iteration   1: 100505.657 ns/op
Iteration   2: 104078.640 ns/op
Iteration   3: 100304.064 ns/op
Iteration   4: 100633.390 ns/op
Iteration   5: 102787.285 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  101661.807 ±(99.9%) 6485.099 ns/op [Average]
  (min, avg, max) = (100304.064, 101661.807, 104078.640), stdev = 1684.160
  CI (99.9%): [95176.709, 108146.906] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 58.67% complete, ETA 01:19:54
# Fork: 1 of 1
# Warmup Iteration   1: 373113.157 ns/op
# Warmup Iteration   2: 278902.783 ns/op
Iteration   1: 158008.642 ns/op
Iteration   2: 149866.397 ns/op
Iteration   3: 151957.274 ns/op
Iteration   4: 163911.721 ns/op
Iteration   5: 155595.112 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  155867.829 ±(99.9%) 21149.753 ns/op [Average]
  (min, avg, max) = (149866.397, 155867.829, 163911.721), stdev = 5492.524
  CI (99.9%): [134718.076, 177017.582] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 59.00% complete, ETA 01:19:15
# Fork: 1 of 1
# Warmup Iteration   1: 678967.957 ns/op
# Warmup Iteration   2: 360333.276 ns/op
Iteration   1: 205212.393 ns/op
Iteration   2: 235001.681 ns/op
Iteration   3: 207477.595 ns/op
Iteration   4: 205611.396 ns/op
Iteration   5: 204713.546 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  211603.322 ±(99.9%) 50527.176 ns/op [Average]
  (min, avg, max) = (204713.546, 211603.322, 235001.681), stdev = 13121.747
  CI (99.9%): [161076.146, 262130.498] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 59.33% complete, ETA 01:18:37
# Fork: 1 of 1
# Warmup Iteration   1: 1021021.048 ns/op
# Warmup Iteration   2: 616678.527 ns/op
Iteration   1: 336817.607 ns/op
Iteration   2: 331759.979 ns/op
Iteration   3: 301464.604 ns/op
Iteration   4: 292970.496 ns/op
Iteration   5: 249908.572 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  302584.252 ±(99.9%) 134656.293 ns/op [Average]
  (min, avg, max) = (249908.572, 302584.252, 336817.607), stdev = 34969.812
  CI (99.9%): [167927.959, 437240.544] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 59.67% complete, ETA 01:17:58
# Fork: 1 of 1
# Warmup Iteration   1: 4192191.581 ns/op
# Warmup Iteration   2: 2106883.225 ns/op
Iteration   1: 1500833.621 ns/op
Iteration   2: 1518852.638 ns/op
Iteration   3: 1569904.117 ns/op
Iteration   4: 1560299.565 ns/op
Iteration   5: 1673697.438 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1564717.476 ±(99.9%) 259081.254 ns/op [Average]
  (min, avg, max) = (1500833.621, 1564717.476, 1673697.438), stdev = 67282.579
  CI (99.9%): [1305636.222, 1823798.730] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 60.00% complete, ETA 01:17:20
# Fork: 1 of 1
# Warmup Iteration   1: 209174.294 ns/op
# Warmup Iteration   2: 46635.268 ns/op
Iteration   1: 42354.753 ns/op
Iteration   2: 40506.472 ns/op
Iteration   3: 38892.327 ns/op
Iteration   4: 40268.206 ns/op
Iteration   5: 39692.097 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  40342.771 ±(99.9%) 4949.087 ns/op [Average]
  (min, avg, max) = (38892.327, 40342.771, 42354.753), stdev = 1285.262
  CI (99.9%): [35393.684, 45291.858] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 60.33% complete, ETA 01:16:41
# Fork: 1 of 1
# Warmup Iteration   1: 290524.329 ns/op
# Warmup Iteration   2: 62957.343 ns/op
Iteration   1: 61953.303 ns/op
Iteration   2: 62145.576 ns/op
Iteration   3: 60036.918 ns/op
Iteration   4: 59447.484 ns/op
Iteration   5: 65806.224 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  61877.901 ±(99.9%) 9589.031 ns/op [Average]
  (min, avg, max) = (59447.484, 61877.901, 65806.224), stdev = 2490.241
  CI (99.9%): [52288.870, 71466.932] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 60.67% complete, ETA 01:16:02
# Fork: 1 of 1
# Warmup Iteration   1: 444902.525 ns/op
# Warmup Iteration   2: 123011.488 ns/op
Iteration   1: 114705.311 ns/op
Iteration   2: 112011.708 ns/op
Iteration   3: 115248.035 ns/op
Iteration   4: 118979.659 ns/op
Iteration   5: 111385.828 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  114466.108 ±(99.9%) 11640.314 ns/op [Average]
  (min, avg, max) = (111385.828, 114466.108, 118979.659), stdev = 3022.953
  CI (99.9%): [102825.794, 126106.423] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 61.00% complete, ETA 01:15:24
# Fork: 1 of 1
# Warmup Iteration   1: 1330926.850 ns/op
# Warmup Iteration   2: 365856.764 ns/op
Iteration   1: 282443.193 ns/op
Iteration   2: 295924.658 ns/op
Iteration   3: 291901.369 ns/op
Iteration   4: 270691.472 ns/op
Iteration   5: 288517.377 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  285895.614 ±(99.9%) 37856.432 ns/op [Average]
  (min, avg, max) = (270691.472, 285895.614, 295924.658), stdev = 9831.195
  CI (99.9%): [248039.182, 323752.045] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 61.33% complete, ETA 01:14:45
# Fork: 1 of 1
# Warmup Iteration   1: 11904202.947 ns/op
# Warmup Iteration   2: 2405968.266 ns/op
Iteration   1: 2109848.760 ns/op
Iteration   2: 1989330.782 ns/op
Iteration   3: 1953335.845 ns/op
Iteration   4: 1925386.512 ns/op
Iteration   5: 1991166.339 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1993813.648 ±(99.9%) 270998.741 ns/op [Average]
  (min, avg, max) = (1925386.512, 1993813.648, 2109848.760), stdev = 70377.513
  CI (99.9%): [1722814.907, 2264812.389] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 61.67% complete, ETA 01:14:06
# Fork: 1 of 1
# Warmup Iteration   1: 31965.249 ns/op
# Warmup Iteration   2: 5277.171 ns/op
Iteration   1: 4573.239 ns/op
Iteration   2: 4465.425 ns/op
Iteration   3: 4486.767 ns/op
Iteration   4: 4396.974 ns/op
Iteration   5: 4741.564 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  4532.794 ±(99.9%) 510.572 ns/op [Average]
  (min, avg, max) = (4396.974, 4532.794, 4741.564), stdev = 132.594
  CI (99.9%): [4022.221, 5043.366] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 62.00% complete, ETA 01:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 50681.185 ns/op
# Warmup Iteration   2: 8943.054 ns/op
Iteration   1: 7770.394 ns/op
Iteration   2: 8169.179 ns/op
Iteration   3: 8036.678 ns/op
Iteration   4: 8171.087 ns/op
Iteration   5: 7751.872 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  7979.842 ±(99.9%) 797.307 ns/op [Average]
  (min, avg, max) = (7751.872, 7979.842, 8171.087), stdev = 207.058
  CI (99.9%): [7182.534, 8777.149] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 62.33% complete, ETA 01:12:50
# Fork: 1 of 1
# Warmup Iteration   1: 68654.048 ns/op
# Warmup Iteration   2: 14658.075 ns/op
Iteration   1: 11714.829 ns/op
Iteration   2: 12105.179 ns/op
Iteration   3: 13068.813 ns/op
Iteration   4: 12641.800 ns/op
Iteration   5: 13755.946 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  12657.313 ±(99.9%) 3086.343 ns/op [Average]
  (min, avg, max) = (11714.829, 12657.313, 13755.946), stdev = 801.514
  CI (99.9%): [9570.970, 15743.657] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 62.67% complete, ETA 01:12:11
# Fork: 1 of 1
# Warmup Iteration   1: 127016.249 ns/op
# Warmup Iteration   2: 29735.298 ns/op
Iteration   1: 28586.492 ns/op
Iteration   2: 29568.416 ns/op
Iteration   3: 30971.908 ns/op
Iteration   4: 25542.100 ns/op
Iteration   5: 25894.262 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  28112.635 ±(99.9%) 9040.430 ns/op [Average]
  (min, avg, max) = (25542.100, 28112.635, 30971.908), stdev = 2347.771
  CI (99.9%): [19072.206, 37153.065] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 63.00% complete, ETA 01:11:33
# Fork: 1 of 1
# Warmup Iteration   1: 910659.028 ns/op
# Warmup Iteration   2: 340892.509 ns/op
Iteration   1: 253117.177 ns/op
Iteration   2: 226566.862 ns/op
Iteration   3: 229058.417 ns/op
Iteration   4: 251316.238 ns/op
Iteration   5: 241697.940 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  240351.327 ±(99.9%) 47260.708 ns/op [Average]
  (min, avg, max) = (226566.862, 240351.327, 253117.177), stdev = 12273.456
  CI (99.9%): [193090.619, 287612.035] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 63.33% complete, ETA 01:10:54
# Fork: 1 of 1
# Warmup Iteration   1: 32181.917 ns/op
# Warmup Iteration   2: 12962.592 ns/op
Iteration   1: 12666.709 ns/op
Iteration   2: 10707.201 ns/op
Iteration   3: 9880.392 ns/op
Iteration   4: 10021.025 ns/op
Iteration   5: 9979.189 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10650.903 ±(99.9%) 4518.676 ns/op [Average]
  (min, avg, max) = (9880.392, 10650.903, 12666.709), stdev = 1173.486
  CI (99.9%): [6132.227, 15169.579] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 63.67% complete, ETA 01:10:15
# Fork: 1 of 1
# Warmup Iteration   1: 59883.599 ns/op
# Warmup Iteration   2: 32295.561 ns/op
Iteration   1: 17868.786 ns/op
Iteration   2: 17990.050 ns/op
Iteration   3: 17761.688 ns/op
Iteration   4: 20611.198 ns/op
Iteration   5: 18969.200 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  18640.185 ±(99.9%) 4629.842 ns/op [Average]
  (min, avg, max) = (17761.688, 18640.185, 20611.198), stdev = 1202.355
  CI (99.9%): [14010.342, 23270.027] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 64.00% complete, ETA 01:09:37
# Fork: 1 of 1
# Warmup Iteration   1: 85727.931 ns/op
# Warmup Iteration   2: 48943.615 ns/op
Iteration   1: 28724.387 ns/op
Iteration   2: 26998.913 ns/op
Iteration   3: 27708.457 ns/op
Iteration   4: 27742.513 ns/op
Iteration   5: 28884.458 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  28011.746 ±(99.9%) 3019.617 ns/op [Average]
  (min, avg, max) = (26998.913, 28011.746, 28884.458), stdev = 784.185
  CI (99.9%): [24992.129, 31031.363] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 64.33% complete, ETA 01:08:58
# Fork: 1 of 1
# Warmup Iteration   1: 164385.347 ns/op
# Warmup Iteration   2: 100812.458 ns/op
Iteration   1: 70827.432 ns/op
Iteration   2: 61143.563 ns/op
Iteration   3: 58512.487 ns/op
Iteration   4: 60331.911 ns/op
Iteration   5: 59441.955 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  62051.470 ±(99.9%) 19265.986 ns/op [Average]
  (min, avg, max) = (58512.487, 62051.470, 70827.432), stdev = 5003.315
  CI (99.9%): [42785.484, 81317.456] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 64.67% complete, ETA 01:08:20
# Fork: 1 of 1
# Warmup Iteration   1: 1304162.907 ns/op
# Warmup Iteration   2: 906101.844 ns/op
Iteration   1: 542241.523 ns/op
Iteration   2: 528216.179 ns/op
Iteration   3: 534780.518 ns/op
Iteration   4: 546086.156 ns/op
Iteration   5: 532008.410 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  536666.557 ±(99.9%) 28327.333 ns/op [Average]
  (min, avg, max) = (528216.179, 536666.557, 546086.156), stdev = 7356.518
  CI (99.9%): [508339.224, 564993.890] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 65.00% complete, ETA 01:07:41
# Fork: 1 of 1
# Warmup Iteration   1: 179409.374 ns/op
# Warmup Iteration   2: 36812.337 ns/op
Iteration   1: 34893.932 ns/op
Iteration   2: 38198.141 ns/op
Iteration   3: 34180.005 ns/op
Iteration   4: 33102.069 ns/op
Iteration   5: 33723.973 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  34819.624 ±(99.9%) 7696.342 ns/op [Average]
  (min, avg, max) = (33102.069, 34819.624, 38198.141), stdev = 1998.716
  CI (99.9%): [27123.282, 42515.966] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 65.33% complete, ETA 01:07:02
# Fork: 1 of 1
# Warmup Iteration   1: 258188.722 ns/op
# Warmup Iteration   2: 90052.539 ns/op
Iteration   1: 67656.937 ns/op
Iteration   2: 66088.438 ns/op
Iteration   3: 81127.197 ns/op
Iteration   4: 67999.729 ns/op
Iteration   5: 66404.034 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  69855.267 ±(99.9%) 24462.357 ns/op [Average]
  (min, avg, max) = (66088.438, 69855.267, 81127.197), stdev = 6352.796
  CI (99.9%): [45392.910, 94317.624] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 65.67% complete, ETA 01:06:23
# Fork: 1 of 1
# Warmup Iteration   1: 545302.268 ns/op
# Warmup Iteration   2: 132292.130 ns/op
Iteration   1: 118858.374 ns/op
Iteration   2: 123899.683 ns/op
Iteration   3: 127030.136 ns/op
Iteration   4: 128920.828 ns/op
Iteration   5: 127677.299 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  125277.264 ±(99.9%) 15547.278 ns/op [Average]
  (min, avg, max) = (118858.374, 125277.264, 128920.828), stdev = 4037.579
  CI (99.9%): [109729.986, 140824.542] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 66.00% complete, ETA 01:05:45
# Fork: 1 of 1
# Warmup Iteration   1: 1534607.293 ns/op
# Warmup Iteration   2: 428063.272 ns/op
Iteration   1: 284352.829 ns/op
Iteration   2: 304129.572 ns/op
Iteration   3: 302192.290 ns/op
Iteration   4: 281194.113 ns/op
Iteration   5: 280983.264 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  290570.414 ±(99.9%) 44632.834 ns/op [Average]
  (min, avg, max) = (280983.264, 290570.414, 304129.572), stdev = 11591.005
  CI (99.9%): [245937.580, 335203.248] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 66.33% complete, ETA 01:05:06
# Fork: 1 of 1
# Warmup Iteration   1: 10724760.331 ns/op
# Warmup Iteration   2: 4088503.909 ns/op
Iteration   1: 2828351.257 ns/op
Iteration   2: 2828992.684 ns/op
Iteration   3: 2690729.503 ns/op
Iteration   4: 2592458.806 ns/op
Iteration   5: 2693549.851 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  2726816.420 ±(99.9%) 390846.099 ns/op [Average]
  (min, avg, max) = (2592458.806, 2726816.420, 2828992.684), stdev = 101501.491
  CI (99.9%): [2335970.321, 3117662.519] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 66.67% complete, ETA 01:04:27
# Fork: 1 of 1
# Warmup Iteration   1: 30265.248 ns/op
# Warmup Iteration   2: 19793.308 ns/op
Iteration   1: 14506.947 ns/op
Iteration   2: 12792.891 ns/op
Iteration   3: 12094.245 ns/op
Iteration   4: 12672.573 ns/op
Iteration   5: 11756.421 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12764.615 ±(99.9%) 4089.143 ns/op [Average]
  (min, avg, max) = (11756.421, 12764.615, 14506.947), stdev = 1061.937
  CI (99.9%): [8675.473, 16853.758] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 67.00% complete, ETA 01:03:49
# Fork: 1 of 1
# Warmup Iteration   1: 29901.583 ns/op
# Warmup Iteration   2: 24802.494 ns/op
Iteration   1: 20650.933 ns/op
Iteration   2: 15684.728 ns/op
Iteration   3: 12987.312 ns/op
Iteration   4: 12949.512 ns/op
Iteration   5: 15563.462 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15567.189 ±(99.9%) 12079.961 ns/op [Average]
  (min, avg, max) = (12949.512, 15567.189, 20650.933), stdev = 3137.128
  CI (99.9%): [3487.228, 27647.151] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 67.33% complete, ETA 01:03:10
# Fork: 1 of 1
# Warmup Iteration   1: 85234.840 ns/op
# Warmup Iteration   2: 56849.288 ns/op
Iteration   1: 37791.548 ns/op
Iteration   2: 32714.974 ns/op
Iteration   3: 33356.284 ns/op
Iteration   4: 32462.146 ns/op
Iteration   5: 33520.793 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  33969.149 ±(99.9%) 8399.210 ns/op [Average]
  (min, avg, max) = (32462.146, 33969.149, 37791.548), stdev = 2181.248
  CI (99.9%): [25569.939, 42368.358] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 67.67% complete, ETA 01:02:31
# Fork: 1 of 1
# Warmup Iteration   1: 140261.898 ns/op
# Warmup Iteration   2: 107325.807 ns/op
Iteration   1: 61081.308 ns/op
Iteration   2: 61622.112 ns/op
Iteration   3: 60859.037 ns/op
Iteration   4: 58287.167 ns/op
Iteration   5: 66777.416 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  61725.408 ±(99.9%) 11949.476 ns/op [Average]
  (min, avg, max) = (58287.167, 61725.408, 66777.416), stdev = 3103.241
  CI (99.9%): [49775.932, 73674.884] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 68.00% complete, ETA 01:01:52
# Fork: 1 of 1
# Warmup Iteration   1: 1468219.532 ns/op
# Warmup Iteration   2: 585686.459 ns/op
Iteration   1: 464043.316 ns/op
Iteration   2: 449279.678 ns/op
Iteration   3: 464455.542 ns/op
Iteration   4: 460183.890 ns/op
Iteration   5: 457915.959 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  459175.677 ±(99.9%) 23745.166 ns/op [Average]
  (min, avg, max) = (449279.678, 459175.677, 464455.542), stdev = 6166.544
  CI (99.9%): [435430.511, 482920.842] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 68.33% complete, ETA 01:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 17704.412 ns/op
# Warmup Iteration   2: 3914.545 ns/op
Iteration   1: 2637.431 ns/op
Iteration   2: 2724.048 ns/op
Iteration   3: 2689.908 ns/op
Iteration   4: 2807.831 ns/op
Iteration   5: 3113.902 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2794.624 ±(99.9%) 727.479 ns/op [Average]
  (min, avg, max) = (2637.431, 2794.624, 3113.902), stdev = 188.924
  CI (99.9%): [2067.145, 3522.103] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 68.67% complete, ETA 01:00:35
# Fork: 1 of 1
# Warmup Iteration   1: 19806.765 ns/op
# Warmup Iteration   2: 5959.824 ns/op
Iteration   1: 5545.972 ns/op
Iteration   2: 4950.511 ns/op
Iteration   3: 5303.729 ns/op
Iteration   4: 5390.492 ns/op
Iteration   5: 5562.903 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5350.721 ±(99.9%) 957.064 ns/op [Average]
  (min, avg, max) = (4950.511, 5350.721, 5562.903), stdev = 248.547
  CI (99.9%): [4393.657, 6307.785] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 69.00% complete, ETA 00:59:56
# Fork: 1 of 1
# Warmup Iteration   1: 73320.260 ns/op
# Warmup Iteration   2: 10845.851 ns/op
Iteration   1: 9551.023 ns/op
Iteration   2: 9475.652 ns/op
Iteration   3: 9986.521 ns/op
Iteration   4: 9220.328 ns/op
Iteration   5: 9052.225 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9457.150 ±(99.9%) 1374.196 ns/op [Average]
  (min, avg, max) = (9052.225, 9457.150, 9986.521), stdev = 356.874
  CI (99.9%): [8082.954, 10831.346] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 69.33% complete, ETA 00:59:18
# Fork: 1 of 1
# Warmup Iteration   1: 69187.500 ns/op
# Warmup Iteration   2: 23705.271 ns/op
Iteration   1: 21670.059 ns/op
Iteration   2: 21214.915 ns/op
Iteration   3: 21492.478 ns/op
Iteration   4: 19720.322 ns/op
Iteration   5: 21416.492 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  21102.853 ±(99.9%) 3041.673 ns/op [Average]
  (min, avg, max) = (19720.322, 21102.853, 21670.059), stdev = 789.913
  CI (99.9%): [18061.181, 24144.526] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 69.67% complete, ETA 00:58:39
# Fork: 1 of 1
# Warmup Iteration   1: 666657.635 ns/op
# Warmup Iteration   2: 209293.659 ns/op
Iteration   1: 166562.354 ns/op
Iteration   2: 160064.024 ns/op
Iteration   3: 157823.794 ns/op
Iteration   4: 186358.526 ns/op
Iteration   5: 184462.603 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  171054.260 ±(99.9%) 52019.760 ns/op [Average]
  (min, avg, max) = (157823.794, 171054.260, 186358.526), stdev = 13509.367
  CI (99.9%): [119034.500, 223074.021] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 70.00% complete, ETA 00:58:00
# Fork: 1 of 1
# Warmup Iteration   1: 10707.116 ns/op
# Warmup Iteration   2: 4245.534 ns/op
Iteration   1: 3720.943 ns/op
Iteration   2: 3898.471 ns/op
Iteration   3: 3576.917 ns/op
Iteration   4: 3690.537 ns/op
Iteration   5: 3622.667 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3701.907 ±(99.9%) 475.639 ns/op [Average]
  (min, avg, max) = (3576.917, 3701.907, 3898.471), stdev = 123.522
  CI (99.9%): [3226.268, 4177.546] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 70.33% complete, ETA 00:57:22
# Fork: 1 of 1
# Warmup Iteration   1: 27787.465 ns/op
# Warmup Iteration   2: 9708.216 ns/op
Iteration   1: 6978.675 ns/op
Iteration   2: 7311.966 ns/op
Iteration   3: 7207.287 ns/op
Iteration   4: 7096.356 ns/op
Iteration   5: 6827.392 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7084.335 ±(99.9%) 731.271 ns/op [Average]
  (min, avg, max) = (6827.392, 7084.335, 7311.966), stdev = 189.909
  CI (99.9%): [6353.064, 7815.607] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 70.67% complete, ETA 00:56:43
# Fork: 1 of 1
# Warmup Iteration   1: 48096.658 ns/op
# Warmup Iteration   2: 20939.245 ns/op
Iteration   1: 13380.905 ns/op
Iteration   2: 13482.544 ns/op
Iteration   3: 12053.801 ns/op
Iteration   4: 11979.731 ns/op
Iteration   5: 12544.618 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12688.320 ±(99.9%) 2747.097 ns/op [Average]
  (min, avg, max) = (11979.731, 12688.320, 13482.544), stdev = 713.412
  CI (99.9%): [9941.223, 15435.416] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 71.00% complete, ETA 00:56:05
# Fork: 1 of 1
# Warmup Iteration   1: 144672.116 ns/op
# Warmup Iteration   2: 37138.966 ns/op
Iteration   1: 27842.960 ns/op
Iteration   2: 26740.519 ns/op
Iteration   3: 25309.313 ns/op
Iteration   4: 31093.631 ns/op
Iteration   5: 26533.151 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27503.915 ±(99.9%) 8467.576 ns/op [Average]
  (min, avg, max) = (25309.313, 27503.915, 31093.631), stdev = 2199.003
  CI (99.9%): [19036.339, 35971.491] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 71.33% complete, ETA 00:55:26
# Fork: 1 of 1
# Warmup Iteration   1: 730037.228 ns/op
# Warmup Iteration   2: 274044.343 ns/op
Iteration   1: 223168.350 ns/op
Iteration   2: 209088.903 ns/op
Iteration   3: 235207.695 ns/op
Iteration   4: 230671.352 ns/op
Iteration   5: 233758.031 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  226378.866 ±(99.9%) 41296.966 ns/op [Average]
  (min, avg, max) = (209088.903, 226378.866, 235207.695), stdev = 10724.691
  CI (99.9%): [185081.901, 267675.832] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 71.67% complete, ETA 00:54:47
# Fork: 1 of 1
# Warmup Iteration   1: 17236.403 ns/op
# Warmup Iteration   2: 3484.752 ns/op
Iteration   1: 3343.280 ns/op
Iteration   2: 3310.516 ns/op
Iteration   3: 3283.210 ns/op
Iteration   4: 3197.778 ns/op
Iteration   5: 3741.319 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3375.221 ±(99.9%) 814.999 ns/op [Average]
  (min, avg, max) = (3197.778, 3375.221, 3741.319), stdev = 211.653
  CI (99.9%): [2560.222, 4190.219] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 72.00% complete, ETA 00:54:09
# Fork: 1 of 1
# Warmup Iteration   1: 25306.311 ns/op
# Warmup Iteration   2: 7894.118 ns/op
Iteration   1: 7324.060 ns/op
Iteration   2: 6255.833 ns/op
Iteration   3: 6460.858 ns/op
Iteration   4: 6675.082 ns/op
Iteration   5: 6273.138 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6597.794 ±(99.9%) 1694.421 ns/op [Average]
  (min, avg, max) = (6255.833, 6597.794, 7324.060), stdev = 440.036
  CI (99.9%): [4903.373, 8292.215] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 72.33% complete, ETA 00:53:30
# Fork: 1 of 1
# Warmup Iteration   1: 37557.712 ns/op
# Warmup Iteration   2: 12577.210 ns/op
Iteration   1: 9979.576 ns/op
Iteration   2: 9695.093 ns/op
Iteration   3: 9654.280 ns/op
Iteration   4: 10939.903 ns/op
Iteration   5: 11409.946 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  10335.760 ±(99.9%) 3056.719 ns/op [Average]
  (min, avg, max) = (9654.280, 10335.760, 11409.946), stdev = 793.820
  CI (99.9%): [7279.041, 13392.478] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 72.67% complete, ETA 00:52:52
# Fork: 1 of 1
# Warmup Iteration   1: 115400.171 ns/op
# Warmup Iteration   2: 33952.152 ns/op
Iteration   1: 22700.624 ns/op
Iteration   2: 22080.617 ns/op
Iteration   3: 21545.669 ns/op
Iteration   4: 21776.271 ns/op
Iteration   5: 21775.063 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  21975.649 ±(99.9%) 1723.649 ns/op [Average]
  (min, avg, max) = (21545.669, 21975.649, 22700.624), stdev = 447.626
  CI (99.9%): [20252.000, 23699.298] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 73.00% complete, ETA 00:52:13
# Fork: 1 of 1
# Warmup Iteration   1: 809807.403 ns/op
# Warmup Iteration   2: 267946.079 ns/op
Iteration   1: 222222.650 ns/op
Iteration   2: 219861.201 ns/op
Iteration   3: 190804.403 ns/op
Iteration   4: 196191.069 ns/op
Iteration   5: 199162.405 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  205648.346 ±(99.9%) 55419.949 ns/op [Average]
  (min, avg, max) = (190804.403, 205648.346, 222222.650), stdev = 14392.385
  CI (99.9%): [150228.396, 261068.295] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 73.33% complete, ETA 00:51:34
# Fork: 1 of 1
# Warmup Iteration   1: 25997.165 ns/op
# Warmup Iteration   2: 4365.664 ns/op
Iteration   1: 4057.914 ns/op
Iteration   2: 3978.501 ns/op
Iteration   3: 4049.351 ns/op
Iteration   4: 3903.522 ns/op
Iteration   5: 3926.369 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3983.131 ±(99.9%) 269.260 ns/op [Average]
  (min, avg, max) = (3903.522, 3983.131, 4057.914), stdev = 69.926
  CI (99.9%): [3713.871, 4252.391] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 73.67% complete, ETA 00:50:56
# Fork: 1 of 1
# Warmup Iteration   1: 26629.833 ns/op
# Warmup Iteration   2: 10088.953 ns/op
Iteration   1: 7276.966 ns/op
Iteration   2: 7408.251 ns/op
Iteration   3: 6999.346 ns/op
Iteration   4: 7052.786 ns/op
Iteration   5: 6931.144 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  7133.699 ±(99.9%) 773.803 ns/op [Average]
  (min, avg, max) = (6931.144, 7133.699, 7408.251), stdev = 200.954
  CI (99.9%): [6359.896, 7907.502] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 74.00% complete, ETA 00:50:17
# Fork: 1 of 1
# Warmup Iteration   1: 64226.057 ns/op
# Warmup Iteration   2: 15037.580 ns/op
Iteration   1: 14070.637 ns/op
Iteration   2: 13076.381 ns/op
Iteration   3: 13194.280 ns/op
Iteration   4: 13806.973 ns/op
Iteration   5: 13375.961 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13504.847 ±(99.9%) 1620.070 ns/op [Average]
  (min, avg, max) = (13076.381, 13504.847, 14070.637), stdev = 420.727
  CI (99.9%): [11884.776, 15124.917] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 74.33% complete, ETA 00:49:38
# Fork: 1 of 1
# Warmup Iteration   1: 165720.074 ns/op
# Warmup Iteration   2: 31422.147 ns/op
Iteration   1: 28603.927 ns/op
Iteration   2: 28647.630 ns/op
Iteration   3: 28112.884 ns/op
Iteration   4: 30520.500 ns/op
Iteration   5: 27070.139 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  28591.016 ±(99.9%) 4820.215 ns/op [Average]
  (min, avg, max) = (27070.139, 28591.016, 30520.500), stdev = 1251.795
  CI (99.9%): [23770.801, 33411.232] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 74.67% complete, ETA 00:49:00
# Fork: 1 of 1
# Warmup Iteration   1: 1227949.065 ns/op
# Warmup Iteration   2: 202826.899 ns/op
Iteration   1: 201198.780 ns/op
Iteration   2: 204790.464 ns/op
Iteration   3: 229497.362 ns/op
Iteration   4: 221702.058 ns/op
Iteration   5: 251249.201 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  221687.573 ±(99.9%) 77974.014 ns/op [Average]
  (min, avg, max) = (201198.780, 221687.573, 251249.201), stdev = 20249.604
  CI (99.9%): [143713.559, 299661.587] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 75.00% complete, ETA 00:48:21
# Fork: 1 of 1
# Warmup Iteration   1: 206172.276 ns/op
# Warmup Iteration   2: 148366.328 ns/op
Iteration   1: 101106.462 ns/op
Iteration   2: 80285.585 ns/op
Iteration   3: 76794.459 ns/op
Iteration   4: 81304.769 ns/op
Iteration   5: 75441.016 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  82986.458 ±(99.9%) 40097.199 ns/op [Average]
  (min, avg, max) = (75441.016, 82986.458, 101106.462), stdev = 10413.115
  CI (99.9%): [42889.259, 123083.657] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 75.33% complete, ETA 00:47:43
# Fork: 1 of 1
# Warmup Iteration   1: 241821.274 ns/op
# Warmup Iteration   2: 174214.431 ns/op
Iteration   1: 106812.264 ns/op
Iteration   2: 113299.276 ns/op
Iteration   3: 107458.481 ns/op
Iteration   4: 103077.944 ns/op
Iteration   5: 104952.277 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  107120.048 ±(99.9%) 14842.468 ns/op [Average]
  (min, avg, max) = (103077.944, 107120.048, 113299.276), stdev = 3854.542
  CI (99.9%): [92277.581, 121962.516] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 75.67% complete, ETA 00:47:04
# Fork: 1 of 1
# Warmup Iteration   1: 457861.804 ns/op
# Warmup Iteration   2: 264163.943 ns/op
Iteration   1: 136483.522 ns/op
Iteration   2: 136593.038 ns/op
Iteration   3: 126220.374 ns/op
Iteration   4: 127082.528 ns/op
Iteration   5: 130003.434 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  131276.579 ±(99.9%) 19267.958 ns/op [Average]
  (min, avg, max) = (126220.374, 131276.579, 136593.038), stdev = 5003.828
  CI (99.9%): [112008.621, 150544.538] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 76.00% complete, ETA 00:46:25
# Fork: 1 of 1
# Warmup Iteration   1: 449917.322 ns/op
# Warmup Iteration   2: 293255.720 ns/op
Iteration   1: 174197.785 ns/op
Iteration   2: 171659.404 ns/op
Iteration   3: 163320.993 ns/op
Iteration   4: 164784.924 ns/op
Iteration   5: 165244.913 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  167841.604 ±(99.9%) 18416.653 ns/op [Average]
  (min, avg, max) = (163320.993, 167841.604, 174197.785), stdev = 4782.746
  CI (99.9%): [149424.951, 186258.257] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 76.33% complete, ETA 00:45:46
# Fork: 1 of 1
# Warmup Iteration   1: 1499841.711 ns/op
# Warmup Iteration   2: 1397999.867 ns/op
Iteration   1: 1086345.586 ns/op
Iteration   2: 682096.737 ns/op
Iteration   3: 717627.712 ns/op
Iteration   4: 678726.950 ns/op
Iteration   5: 736901.172 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  780339.632 ±(99.9%) 665382.280 ns/op [Average]
  (min, avg, max) = (678726.950, 780339.632, 1086345.586), stdev = 172797.665
  CI (99.9%): [114957.351, 1445721.912] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 76.67% complete, ETA 00:45:07
# Fork: 1 of 1
# Warmup Iteration   1: 69638.513 ns/op
# Warmup Iteration   2: 16649.403 ns/op
Iteration   1: 16290.358 ns/op
Iteration   2: 15970.803 ns/op
Iteration   3: 16979.233 ns/op
Iteration   4: 16097.061 ns/op
Iteration   5: 17788.670 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16625.225 ±(99.9%) 2918.807 ns/op [Average]
  (min, avg, max) = (15970.803, 16625.225, 17788.670), stdev = 758.005
  CI (99.9%): [13706.418, 19544.032] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 77.00% complete, ETA 00:44:29
# Fork: 1 of 1
# Warmup Iteration   1: 106515.705 ns/op
# Warmup Iteration   2: 30069.970 ns/op
Iteration   1: 25306.118 ns/op
Iteration   2: 24362.537 ns/op
Iteration   3: 25229.881 ns/op
Iteration   4: 24251.823 ns/op
Iteration   5: 25735.403 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  24977.152 ±(99.9%) 2473.787 ns/op [Average]
  (min, avg, max) = (24251.823, 24977.152, 25735.403), stdev = 642.435
  CI (99.9%): [22503.365, 27450.939] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 77.33% complete, ETA 00:43:50
# Fork: 1 of 1
# Warmup Iteration   1: 183477.848 ns/op
# Warmup Iteration   2: 60291.959 ns/op
Iteration   1: 48689.201 ns/op
Iteration   2: 49873.115 ns/op
Iteration   3: 44847.307 ns/op
Iteration   4: 47337.382 ns/op
Iteration   5: 53594.980 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  48868.397 ±(99.9%) 12461.955 ns/op [Average]
  (min, avg, max) = (44847.307, 48868.397, 53594.980), stdev = 3236.330
  CI (99.9%): [36406.442, 61330.352] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 77.67% complete, ETA 00:43:11
# Fork: 1 of 1
# Warmup Iteration   1: 350280.610 ns/op
# Warmup Iteration   2: 144639.068 ns/op
Iteration   1: 110853.637 ns/op
Iteration   2: 106840.439 ns/op
Iteration   3: 108948.007 ns/op
Iteration   4: 119681.493 ns/op
Iteration   5: 111853.868 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  111635.489 ±(99.9%) 18826.088 ns/op [Average]
  (min, avg, max) = (106840.439, 111635.489, 119681.493), stdev = 4889.075
  CI (99.9%): [92809.401, 130461.577] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 78.00% complete, ETA 00:42:32
# Fork: 1 of 1
# Warmup Iteration   1: 4996866.360 ns/op
# Warmup Iteration   2: 933167.255 ns/op
Iteration   1: 920118.999 ns/op
Iteration   2: 844159.701 ns/op
Iteration   3: 850246.564 ns/op
Iteration   4: 812597.579 ns/op
Iteration   5: 849077.145 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  855239.997 ±(99.9%) 151763.115 ns/op [Average]
  (min, avg, max) = (812597.579, 855239.997, 920118.999), stdev = 39412.399
  CI (99.9%): [703476.883, 1007003.112] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 78.33% complete, ETA 00:41:54
# Fork: 1 of 1
# Warmup Iteration   1: 15233.794 ns/op
# Warmup Iteration   2: 3057.169 ns/op
Iteration   1: 2282.357 ns/op
Iteration   2: 2218.955 ns/op
Iteration   3: 2300.677 ns/op
Iteration   4: 2159.882 ns/op
Iteration   5: 2410.794 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2274.533 ±(99.9%) 362.991 ns/op [Average]
  (min, avg, max) = (2159.882, 2274.533, 2410.794), stdev = 94.268
  CI (99.9%): [1911.542, 2637.524] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 78.67% complete, ETA 00:41:15
# Fork: 1 of 1
# Warmup Iteration   1: 21543.680 ns/op
# Warmup Iteration   2: 4587.172 ns/op
Iteration   1: 3454.231 ns/op
Iteration   2: 3345.938 ns/op
Iteration   3: 3685.691 ns/op
Iteration   4: 3665.875 ns/op
Iteration   5: 3949.780 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3620.303 ±(99.9%) 898.455 ns/op [Average]
  (min, avg, max) = (3345.938, 3620.303, 3949.780), stdev = 233.326
  CI (99.9%): [2721.848, 4518.758] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 79.00% complete, ETA 00:40:37
# Fork: 1 of 1
# Warmup Iteration   1: 32896.167 ns/op
# Warmup Iteration   2: 8105.089 ns/op
Iteration   1: 6853.042 ns/op
Iteration   2: 7115.347 ns/op
Iteration   3: 6797.965 ns/op
Iteration   4: 6922.133 ns/op
Iteration   5: 7133.429 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6964.383 ±(99.9%) 587.913 ns/op [Average]
  (min, avg, max) = (6797.965, 6964.383, 7133.429), stdev = 152.679
  CI (99.9%): [6376.470, 7552.296] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 79.33% complete, ETA 00:39:58
# Fork: 1 of 1
# Warmup Iteration   1: 122802.443 ns/op
# Warmup Iteration   2: 15488.087 ns/op
Iteration   1: 14115.679 ns/op
Iteration   2: 14394.870 ns/op
Iteration   3: 14893.184 ns/op
Iteration   4: 13597.839 ns/op
Iteration   5: 13802.898 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  14160.894 ±(99.9%) 1961.779 ns/op [Average]
  (min, avg, max) = (13597.839, 14160.894, 14893.184), stdev = 509.468
  CI (99.9%): [12199.115, 16122.673] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 79.67% complete, ETA 00:39:19
# Fork: 1 of 1
# Warmup Iteration   1: 486812.769 ns/op
# Warmup Iteration   2: 169757.723 ns/op
Iteration   1: 131867.730 ns/op
Iteration   2: 126256.338 ns/op
Iteration   3: 124352.438 ns/op
Iteration   4: 125248.290 ns/op
Iteration   5: 125719.939 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  126688.947 ±(99.9%) 11468.308 ns/op [Average]
  (min, avg, max) = (124352.438, 126688.947, 131867.730), stdev = 2978.283
  CI (99.9%): [115220.638, 138157.255] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 80.00% complete, ETA 00:38:40
# Fork: 1 of 1
# Warmup Iteration   1: 11427.579 ns/op
# Warmup Iteration   2: 5668.457 ns/op
Iteration   1: 6010.433 ns/op
Iteration   2: 5012.822 ns/op
Iteration   3: 5131.557 ns/op
Iteration   4: 5070.000 ns/op
Iteration   5: 4999.103 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5244.783 ±(99.9%) 1660.420 ns/op [Average]
  (min, avg, max) = (4999.103, 5244.783, 6010.433), stdev = 431.206
  CI (99.9%): [3584.362, 6905.203] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 80.33% complete, ETA 00:38:02
# Fork: 1 of 1
# Warmup Iteration   1: 44473.647 ns/op
# Warmup Iteration   2: 23445.854 ns/op
Iteration   1: 15113.521 ns/op
Iteration   2: 13181.474 ns/op
Iteration   3: 13003.244 ns/op
Iteration   4: 12866.443 ns/op
Iteration   5: 12413.255 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13315.587 ±(99.9%) 4022.053 ns/op [Average]
  (min, avg, max) = (12413.255, 13315.587, 15113.521), stdev = 1044.515
  CI (99.9%): [9293.534, 17337.641] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 80.67% complete, ETA 00:37:23
# Fork: 1 of 1
# Warmup Iteration   1: 66183.260 ns/op
# Warmup Iteration   2: 24135.331 ns/op
Iteration   1: 17914.864 ns/op
Iteration   2: 16504.500 ns/op
Iteration   3: 16279.729 ns/op
Iteration   4: 17709.067 ns/op
Iteration   5: 17178.293 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17117.290 ±(99.9%) 2768.092 ns/op [Average]
  (min, avg, max) = (16279.729, 17117.290, 17914.864), stdev = 718.865
  CI (99.9%): [14349.198, 19885.383] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 81.00% complete, ETA 00:36:45
# Fork: 1 of 1
# Warmup Iteration   1: 89628.160 ns/op
# Warmup Iteration   2: 29839.895 ns/op
Iteration   1: 26248.480 ns/op
Iteration   2: 33889.905 ns/op
Iteration   3: 27246.220 ns/op
Iteration   4: 27433.646 ns/op
Iteration   5: 28815.690 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  28726.788 ±(99.9%) 11659.249 ns/op [Average]
  (min, avg, max) = (26248.480, 28726.788, 33889.905), stdev = 3027.870
  CI (99.9%): [17067.539, 40386.037] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 81.33% complete, ETA 00:36:06
# Fork: 1 of 1
# Warmup Iteration   1: 623468.003 ns/op
# Warmup Iteration   2: 488548.764 ns/op
Iteration   1: 238946.039 ns/op
Iteration   2: 232268.198 ns/op
Iteration   3: 251670.222 ns/op
Iteration   4: 228815.995 ns/op
Iteration   5: 223453.874 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  235030.866 ±(99.9%) 41849.984 ns/op [Average]
  (min, avg, max) = (223453.874, 235030.866, 251670.222), stdev = 10868.308
  CI (99.9%): [193180.882, 276880.850] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 81.67% complete, ETA 00:35:28
# Fork: 1 of 1
# Warmup Iteration   1: 55310.635 ns/op
# Warmup Iteration   2: 17123.758 ns/op
Iteration   1: 17624.357 ns/op
Iteration   2: 16877.948 ns/op
Iteration   3: 16992.362 ns/op
Iteration   4: 16954.711 ns/op
Iteration   5: 16021.492 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16894.174 ±(99.9%) 2202.210 ns/op [Average]
  (min, avg, max) = (16021.492, 16894.174, 17624.357), stdev = 571.907
  CI (99.9%): [14691.964, 19096.384] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 82.00% complete, ETA 00:34:49
# Fork: 1 of 1
# Warmup Iteration   1: 123437.850 ns/op
# Warmup Iteration   2: 31551.660 ns/op
Iteration   1: 30850.737 ns/op
Iteration   2: 28698.271 ns/op
Iteration   3: 28960.173 ns/op
Iteration   4: 30027.751 ns/op
Iteration   5: 30738.706 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  29855.128 ±(99.9%) 3822.143 ns/op [Average]
  (min, avg, max) = (28698.271, 29855.128, 30850.737), stdev = 992.599
  CI (99.9%): [26032.984, 33677.271] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 82.33% complete, ETA 00:34:10
# Fork: 1 of 1
# Warmup Iteration   1: 264649.421 ns/op
# Warmup Iteration   2: 69855.469 ns/op
Iteration   1: 60230.282 ns/op
Iteration   2: 60797.545 ns/op
Iteration   3: 60524.865 ns/op
Iteration   4: 61317.146 ns/op
Iteration   5: 62301.173 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  61034.202 ±(99.9%) 3132.416 ns/op [Average]
  (min, avg, max) = (60230.282, 61034.202, 62301.173), stdev = 813.479
  CI (99.9%): [57901.786, 64166.618] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 82.67% complete, ETA 00:33:32
# Fork: 1 of 1
# Warmup Iteration   1: 556716.422 ns/op
# Warmup Iteration   2: 201438.292 ns/op
Iteration   1: 150914.340 ns/op
Iteration   2: 143218.227 ns/op
Iteration   3: 168809.226 ns/op
Iteration   4: 138048.247 ns/op
Iteration   5: 141546.098 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  148507.228 ±(99.9%) 47309.140 ns/op [Average]
  (min, avg, max) = (138048.247, 148507.228, 168809.226), stdev = 12286.033
  CI (99.9%): [101198.088, 195816.367] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 83.00% complete, ETA 00:32:53
# Fork: 1 of 1
# Warmup Iteration   1: 6088750.483 ns/op
# Warmup Iteration   2: 2100768.317 ns/op
Iteration   1: 1570925.213 ns/op
Iteration   2: 1319884.472 ns/op
Iteration   3: 1303746.736 ns/op
Iteration   4: 1268196.131 ns/op
Iteration   5: 1270623.543 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1346675.219 ±(99.9%) 490074.749 ns/op [Average]
  (min, avg, max) = (1268196.131, 1346675.219, 1570925.213), stdev = 127270.856
  CI (99.9%): [856600.470, 1836749.968] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:32:14
# Fork: 1 of 1
# Warmup Iteration   1: 9011.394 ns/op
# Warmup Iteration   2: 9143.768 ns/op
Iteration   1: 5775.895 ns/op
Iteration   2: 4787.116 ns/op
Iteration   3: 4839.374 ns/op
Iteration   4: 4839.585 ns/op
Iteration   5: 4857.426 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5019.879 ±(99.9%) 1630.530 ns/op [Average]
  (min, avg, max) = (4787.116, 5019.879, 5775.895), stdev = 423.444
  CI (99.9%): [3389.349, 6650.410] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 83.67% complete, ETA 00:31:35
# Fork: 1 of 1
# Warmup Iteration   1: 33731.998 ns/op
# Warmup Iteration   2: 11176.055 ns/op
Iteration   1: 9483.973 ns/op
Iteration   2: 9103.585 ns/op
Iteration   3: 9363.163 ns/op
Iteration   4: 9106.194 ns/op
Iteration   5: 9210.093 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9253.402 ±(99.9%) 642.035 ns/op [Average]
  (min, avg, max) = (9103.585, 9253.402, 9483.973), stdev = 166.734
  CI (99.9%): [8611.367, 9895.436] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 84.00% complete, ETA 00:30:57
# Fork: 1 of 1
# Warmup Iteration   1: 61947.749 ns/op
# Warmup Iteration   2: 20799.452 ns/op
Iteration   1: 17659.440 ns/op
Iteration   2: 15754.109 ns/op
Iteration   3: 17340.770 ns/op
Iteration   4: 16195.718 ns/op
Iteration   5: 17405.610 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16871.130 ±(99.9%) 3239.797 ns/op [Average]
  (min, avg, max) = (15754.109, 16871.130, 17659.440), stdev = 841.365
  CI (99.9%): [13631.333, 20110.927] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 84.33% complete, ETA 00:30:18
# Fork: 1 of 1
# Warmup Iteration   1: 121552.887 ns/op
# Warmup Iteration   2: 53133.385 ns/op
Iteration   1: 40099.089 ns/op
Iteration   2: 40322.809 ns/op
Iteration   3: 36675.436 ns/op
Iteration   4: 37640.636 ns/op
Iteration   5: 37788.554 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  38505.305 ±(99.9%) 6224.860 ns/op [Average]
  (min, avg, max) = (36675.436, 38505.305, 40322.809), stdev = 1616.576
  CI (99.9%): [32280.445, 44730.164] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 84.67% complete, ETA 00:29:39
# Fork: 1 of 1
# Warmup Iteration   1: 647587.005 ns/op
# Warmup Iteration   2: 496707.906 ns/op
Iteration   1: 343078.293 ns/op
Iteration   2: 286801.864 ns/op
Iteration   3: 278692.498 ns/op
Iteration   4: 283502.978 ns/op
Iteration   5: 290261.357 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  296467.398 ±(99.9%) 101669.693 ns/op [Average]
  (min, avg, max) = (278692.498, 296467.398, 343078.293), stdev = 26403.296
  CI (99.9%): [194797.705, 398137.091] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 85.00% complete, ETA 00:29:01
# Fork: 1 of 1
# Warmup Iteration   1: 6315.478 ns/op
# Warmup Iteration   2: 3345.742 ns/op
Iteration   1: 2145.939 ns/op
Iteration   2: 2103.392 ns/op
Iteration   3: 2088.940 ns/op
Iteration   4: 2044.501 ns/op
Iteration   5: 2061.012 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2088.757 ±(99.9%) 151.752 ns/op [Average]
  (min, avg, max) = (2044.501, 2088.757, 2145.939), stdev = 39.409
  CI (99.9%): [1937.005, 2240.509] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 85.33% complete, ETA 00:28:22
# Fork: 1 of 1
# Warmup Iteration   1: 16968.255 ns/op
# Warmup Iteration   2: 3974.920 ns/op
Iteration   1: 3582.243 ns/op
Iteration   2: 3697.459 ns/op
Iteration   3: 3823.688 ns/op
Iteration   4: 3885.393 ns/op
Iteration   5: 3980.158 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3793.788 ±(99.9%) 602.875 ns/op [Average]
  (min, avg, max) = (3582.243, 3793.788, 3980.158), stdev = 156.565
  CI (99.9%): [3190.913, 4396.663] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 85.67% complete, ETA 00:27:43
# Fork: 1 of 1
# Warmup Iteration   1: 31823.415 ns/op
# Warmup Iteration   2: 10150.759 ns/op
Iteration   1: 8441.533 ns/op
Iteration   2: 8409.527 ns/op
Iteration   3: 8020.138 ns/op
Iteration   4: 8995.409 ns/op
Iteration   5: 8127.757 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8398.873 ±(99.9%) 1459.608 ns/op [Average]
  (min, avg, max) = (8020.138, 8398.873, 8995.409), stdev = 379.056
  CI (99.9%): [6939.264, 9858.481] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 86.00% complete, ETA 00:27:05
# Fork: 1 of 1
# Warmup Iteration   1: 73111.830 ns/op
# Warmup Iteration   2: 20439.767 ns/op
Iteration   1: 17733.834 ns/op
Iteration   2: 17660.859 ns/op
Iteration   3: 17072.100 ns/op
Iteration   4: 17047.952 ns/op
Iteration   5: 17790.464 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  17461.042 ±(99.9%) 1421.066 ns/op [Average]
  (min, avg, max) = (17047.952, 17461.042, 17790.464), stdev = 369.046
  CI (99.9%): [16039.976, 18882.108] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 86.33% complete, ETA 00:26:26
# Fork: 1 of 1
# Warmup Iteration   1: 393728.980 ns/op
# Warmup Iteration   2: 219358.963 ns/op
Iteration   1: 136745.697 ns/op
Iteration   2: 133886.644 ns/op
Iteration   3: 130266.849 ns/op
Iteration   4: 130768.755 ns/op
Iteration   5: 130147.020 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  132362.993 ±(99.9%) 11122.890 ns/op [Average]
  (min, avg, max) = (130147.020, 132362.993, 136745.697), stdev = 2888.579
  CI (99.9%): [121240.103, 143485.883] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 86.67% complete, ETA 00:25:47
# Fork: 1 of 1
# Warmup Iteration   1: 12785.742 ns/op
# Warmup Iteration   2: 4018.467 ns/op
Iteration   1: 3882.038 ns/op
Iteration   2: 3864.867 ns/op
Iteration   3: 3718.734 ns/op
Iteration   4: 3719.670 ns/op
Iteration   5: 3714.094 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3779.881 ±(99.9%) 329.848 ns/op [Average]
  (min, avg, max) = (3714.094, 3779.881, 3882.038), stdev = 85.660
  CI (99.9%): [3450.033, 4109.728] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 87.00% complete, ETA 00:25:09
# Fork: 1 of 1
# Warmup Iteration   1: 32481.331 ns/op
# Warmup Iteration   2: 7762.086 ns/op
Iteration   1: 6391.913 ns/op
Iteration   2: 6456.592 ns/op
Iteration   3: 6745.351 ns/op
Iteration   4: 6859.284 ns/op
Iteration   5: 7039.516 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  6698.531 ±(99.9%) 1048.997 ns/op [Average]
  (min, avg, max) = (6391.913, 6698.531, 7039.516), stdev = 272.421
  CI (99.9%): [5649.533, 7747.528] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 87.33% complete, ETA 00:24:30
# Fork: 1 of 1
# Warmup Iteration   1: 54384.758 ns/op
# Warmup Iteration   2: 13054.281 ns/op
Iteration   1: 11792.153 ns/op
Iteration   2: 11959.768 ns/op
Iteration   3: 11680.996 ns/op
Iteration   4: 12708.758 ns/op
Iteration   5: 11839.399 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11996.215 ±(99.9%) 1581.393 ns/op [Average]
  (min, avg, max) = (11680.996, 11996.215, 12708.758), stdev = 410.683
  CI (99.9%): [10414.822, 13577.608] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 87.67% complete, ETA 00:23:52
# Fork: 1 of 1
# Warmup Iteration   1: 103001.512 ns/op
# Warmup Iteration   2: 32387.909 ns/op
Iteration   1: 24574.887 ns/op
Iteration   2: 23315.760 ns/op
Iteration   3: 24748.189 ns/op
Iteration   4: 23305.476 ns/op
Iteration   5: 23771.751 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  23943.213 ±(99.9%) 2637.624 ns/op [Average]
  (min, avg, max) = (23305.476, 23943.213, 24748.189), stdev = 684.982
  CI (99.9%): [21305.589, 26580.836] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 88.00% complete, ETA 00:23:13
# Fork: 1 of 1
# Warmup Iteration   1: 1326624.950 ns/op
# Warmup Iteration   2: 289191.341 ns/op
Iteration   1: 252728.541 ns/op
Iteration   2: 252005.033 ns/op
Iteration   3: 239639.644 ns/op
Iteration   4: 258057.219 ns/op
Iteration   5: 241864.459 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  248858.979 ±(99.9%) 30037.382 ns/op [Average]
  (min, avg, max) = (239639.644, 248858.979, 258057.219), stdev = 7800.613
  CI (99.9%): [218821.597, 278896.361] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 88.33% complete, ETA 00:22:34
# Fork: 1 of 1
# Warmup Iteration   1: 21288.961 ns/op
# Warmup Iteration   2: 6945.427 ns/op
Iteration   1: 4336.564 ns/op
Iteration   2: 3932.841 ns/op
Iteration   3: 3978.004 ns/op
Iteration   4: 3920.531 ns/op
Iteration   5: 4317.953 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4097.179 ±(99.9%) 813.344 ns/op [Average]
  (min, avg, max) = (3920.531, 4097.179, 4336.564), stdev = 211.223
  CI (99.9%): [3283.834, 4910.523] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 88.67% complete, ETA 00:21:56
# Fork: 1 of 1
# Warmup Iteration   1: 43430.910 ns/op
# Warmup Iteration   2: 8950.960 ns/op
Iteration   1: 8081.260 ns/op
Iteration   2: 8004.466 ns/op
Iteration   3: 7560.292 ns/op
Iteration   4: 8172.405 ns/op
Iteration   5: 7405.039 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7844.693 ±(99.9%) 1310.161 ns/op [Average]
  (min, avg, max) = (7405.039, 7844.693, 8172.405), stdev = 340.245
  CI (99.9%): [6534.531, 9154.854] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 89.00% complete, ETA 00:21:17
# Fork: 1 of 1
# Warmup Iteration   1: 57265.241 ns/op
# Warmup Iteration   2: 23769.399 ns/op
Iteration   1: 14825.071 ns/op
Iteration   2: 15153.694 ns/op
Iteration   3: 14662.091 ns/op
Iteration   4: 15512.290 ns/op
Iteration   5: 13430.101 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14716.650 ±(99.9%) 3040.541 ns/op [Average]
  (min, avg, max) = (13430.101, 14716.650, 15512.290), stdev = 789.619
  CI (99.9%): [11676.108, 17757.191] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 89.33% complete, ETA 00:20:38
# Fork: 1 of 1
# Warmup Iteration   1: 71130.526 ns/op
# Warmup Iteration   2: 39981.298 ns/op
Iteration   1: 29291.760 ns/op
Iteration   2: 33066.686 ns/op
Iteration   3: 31670.721 ns/op
Iteration   4: 30452.963 ns/op
Iteration   5: 30157.329 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  30927.892 ±(99.9%) 5653.529 ns/op [Average]
  (min, avg, max) = (29291.760, 30927.892, 33066.686), stdev = 1468.204
  CI (99.9%): [25274.363, 36581.421] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 89.67% complete, ETA 00:19:59
# Fork: 1 of 1
# Warmup Iteration   1: 1159335.321 ns/op
# Warmup Iteration   2: 637641.456 ns/op
Iteration   1: 330354.656 ns/op
Iteration   2: 298708.912 ns/op
Iteration   3: 329542.767 ns/op
Iteration   4: 305121.945 ns/op
Iteration   5: 301171.453 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  312979.947 ±(99.9%) 60304.659 ns/op [Average]
  (min, avg, max) = (298708.912, 312979.947, 330354.656), stdev = 15660.928
  CI (99.9%): [252675.288, 373284.605] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 90.00% complete, ETA 00:19:21
# Fork: 1 of 1
# Warmup Iteration   1: 24379.854 ns/op
# Warmup Iteration   2: 5134.332 ns/op
Iteration   1: 4137.764 ns/op
Iteration   2: 4245.132 ns/op
Iteration   3: 3914.620 ns/op
Iteration   4: 4112.327 ns/op
Iteration   5: 3983.348 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4078.638 ±(99.9%) 503.292 ns/op [Average]
  (min, avg, max) = (3914.620, 4078.638, 4245.132), stdev = 130.703
  CI (99.9%): [3575.346, 4581.930] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 90.33% complete, ETA 00:18:42
# Fork: 1 of 1
# Warmup Iteration   1: 31540.386 ns/op
# Warmup Iteration   2: 10464.236 ns/op
Iteration   1: 7373.522 ns/op
Iteration   2: 7378.740 ns/op
Iteration   3: 7134.824 ns/op
Iteration   4: 7164.226 ns/op
Iteration   5: 7209.479 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7252.158 ±(99.9%) 447.707 ns/op [Average]
  (min, avg, max) = (7134.824, 7252.158, 7378.740), stdev = 116.268
  CI (99.9%): [6804.451, 7699.865] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 90.67% complete, ETA 00:18:03
# Fork: 1 of 1
# Warmup Iteration   1: 55668.048 ns/op
# Warmup Iteration   2: 21772.046 ns/op
Iteration   1: 14458.521 ns/op
Iteration   2: 14533.832 ns/op
Iteration   3: 14447.798 ns/op
Iteration   4: 14603.545 ns/op
Iteration   5: 15434.371 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  14695.613 ±(99.9%) 1608.581 ns/op [Average]
  (min, avg, max) = (14447.798, 14695.613, 15434.371), stdev = 417.743
  CI (99.9%): [13087.033, 16304.194] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 91.00% complete, ETA 00:17:24
# Fork: 1 of 1
# Warmup Iteration   1: 147375.676 ns/op
# Warmup Iteration   2: 31803.744 ns/op
Iteration   1: 29317.140 ns/op
Iteration   2: 29283.477 ns/op
Iteration   3: 30242.447 ns/op
Iteration   4: 27947.882 ns/op
Iteration   5: 29341.368 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29226.463 ±(99.9%) 3158.742 ns/op [Average]
  (min, avg, max) = (27947.882, 29226.463, 30242.447), stdev = 820.315
  CI (99.9%): [26067.721, 32385.205] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 91.33% complete, ETA 00:16:46
# Fork: 1 of 1
# Warmup Iteration   1: 942784.695 ns/op
# Warmup Iteration   2: 476448.486 ns/op
Iteration   1: 296741.042 ns/op
Iteration   2: 297510.549 ns/op
Iteration   3: 282223.642 ns/op
Iteration   4: 284558.259 ns/op
Iteration   5: 285019.620 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  289210.622 ±(99.9%) 28140.204 ns/op [Average]
  (min, avg, max) = (282223.642, 289210.622, 297510.549), stdev = 7307.922
  CI (99.9%): [261070.418, 317350.826] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 91.67% complete, ETA 00:16:07
# Fork: 1 of 1
# Warmup Iteration   1: 73150.680 ns/op
# Warmup Iteration   2: 20859.749 ns/op
Iteration   1: 17560.064 ns/op
Iteration   2: 15487.089 ns/op
Iteration   3: 15050.503 ns/op
Iteration   4: 16556.994 ns/op
Iteration   5: 15382.384 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16007.407 ±(99.9%) 3987.714 ns/op [Average]
  (min, avg, max) = (15050.503, 16007.407, 17560.064), stdev = 1035.597
  CI (99.9%): [12019.693, 19995.120] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 92.00% complete, ETA 00:15:28
# Fork: 1 of 1
# Warmup Iteration   1: 73304.848 ns/op
# Warmup Iteration   2: 48449.017 ns/op
Iteration   1: 29256.435 ns/op
Iteration   2: 27540.431 ns/op
Iteration   3: 27499.108 ns/op
Iteration   4: 27095.714 ns/op
Iteration   5: 27467.136 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  27771.765 ±(99.9%) 3268.483 ns/op [Average]
  (min, avg, max) = (27095.714, 27771.765, 29256.435), stdev = 848.815
  CI (99.9%): [24503.282, 31040.248] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 92.33% complete, ETA 00:14:50
# Fork: 1 of 1
# Warmup Iteration   1: 165062.153 ns/op
# Warmup Iteration   2: 59025.866 ns/op
Iteration   1: 50345.696 ns/op
Iteration   2: 49440.814 ns/op
Iteration   3: 48537.577 ns/op
Iteration   4: 48239.813 ns/op
Iteration   5: 47681.343 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  48849.049 ±(99.9%) 4048.609 ns/op [Average]
  (min, avg, max) = (47681.343, 48849.049, 50345.696), stdev = 1051.411
  CI (99.9%): [44800.439, 52897.658] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 92.67% complete, ETA 00:14:11
# Fork: 1 of 1
# Warmup Iteration   1: 199058.846 ns/op
# Warmup Iteration   2: 170482.688 ns/op
Iteration   1: 135263.306 ns/op
Iteration   2: 113309.771 ns/op
Iteration   3: 101405.066 ns/op
Iteration   4: 106975.248 ns/op
Iteration   5: 107732.428 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  112937.164 ±(99.9%) 50728.433 ns/op [Average]
  (min, avg, max) = (101405.066, 112937.164, 135263.306), stdev = 13174.013
  CI (99.9%): [62208.731, 163665.596] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 93.00% complete, ETA 00:13:32
# Fork: 1 of 1
# Warmup Iteration   1: 1311764.327 ns/op
# Warmup Iteration   2: 1239580.831 ns/op
Iteration   1: 979544.910 ns/op
Iteration   2: 966105.302 ns/op
Iteration   3: 839502.657 ns/op
Iteration   4: 840415.654 ns/op
Iteration   5: 829542.703 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  891022.245 ±(99.9%) 288597.713 ns/op [Average]
  (min, avg, max) = (829542.703, 891022.245, 979544.910), stdev = 74947.910
  CI (99.9%): [602424.532, 1179619.958] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 93.33% complete, ETA 00:12:54
# Fork: 1 of 1
# Warmup Iteration   1: 105031.566 ns/op
# Warmup Iteration   2: 22985.732 ns/op
Iteration   1: 17607.539 ns/op
Iteration   2: 19541.074 ns/op
Iteration   3: 20338.108 ns/op
Iteration   4: 19628.561 ns/op
Iteration   5: 21815.678 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19786.192 ±(99.9%) 5857.184 ns/op [Average]
  (min, avg, max) = (17607.539, 19786.192, 21815.678), stdev = 1521.092
  CI (99.9%): [13929.008, 25643.376] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 93.67% complete, ETA 00:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 93525.320 ns/op
# Warmup Iteration   2: 37131.270 ns/op
Iteration   1: 31873.121 ns/op
Iteration   2: 30001.174 ns/op
Iteration   3: 30350.486 ns/op
Iteration   4: 30687.873 ns/op
Iteration   5: 33642.962 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  31311.123 ±(99.9%) 5705.111 ns/op [Average]
  (min, avg, max) = (30001.174, 31311.123, 33642.962), stdev = 1481.599
  CI (99.9%): [25606.012, 37016.234] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 94.00% complete, ETA 00:11:36
# Fork: 1 of 1
# Warmup Iteration   1: 520878.894 ns/op
# Warmup Iteration   2: 79588.562 ns/op
Iteration   1: 67352.067 ns/op
Iteration   2: 64049.742 ns/op
Iteration   3: 73149.804 ns/op
Iteration   4: 61914.023 ns/op
Iteration   5: 71283.407 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  67549.809 ±(99.9%) 18199.268 ns/op [Average]
  (min, avg, max) = (61914.023, 67549.809, 73149.804), stdev = 4726.292
  CI (99.9%): [49350.541, 85749.076] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 94.33% complete, ETA 00:10:58
# Fork: 1 of 1
# Warmup Iteration   1: 611161.369 ns/op
# Warmup Iteration   2: 249999.712 ns/op
Iteration   1: 150691.560 ns/op
Iteration   2: 151844.598 ns/op
Iteration   3: 159385.296 ns/op
Iteration   4: 151536.405 ns/op
Iteration   5: 147606.277 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  152212.827 ±(99.9%) 16737.240 ns/op [Average]
  (min, avg, max) = (147606.277, 152212.827, 159385.296), stdev = 4346.608
  CI (99.9%): [135475.587, 168950.067] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 94.67% complete, ETA 00:10:19
# Fork: 1 of 1
# Warmup Iteration   1: 7274709.811 ns/op
# Warmup Iteration   2: 1273559.619 ns/op
Iteration   1: 1174454.217 ns/op
Iteration   2: 1136650.015 ns/op
Iteration   3: 1101031.422 ns/op
Iteration   4: 1083289.186 ns/op
Iteration   5: 1113853.159 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1121855.600 ±(99.9%) 135739.198 ns/op [Average]
  (min, avg, max) = (1083289.186, 1121855.600, 1174454.217), stdev = 35251.039
  CI (99.9%): [986116.402, 1257594.798] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 95.00% complete, ETA 00:09:40
# Fork: 1 of 1
# Warmup Iteration   1: 16377.296 ns/op
# Warmup Iteration   2: 2430.140 ns/op
Iteration   1: 2302.967 ns/op
Iteration   2: 2542.102 ns/op
Iteration   3: 2245.935 ns/op
Iteration   4: 2321.973 ns/op
Iteration   5: 2427.789 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2368.153 ±(99.9%) 452.077 ns/op [Average]
  (min, avg, max) = (2245.935, 2368.153, 2542.102), stdev = 117.403
  CI (99.9%): [1916.077, 2820.230] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 95.33% complete, ETA 00:09:01
# Fork: 1 of 1
# Warmup Iteration   1: 18213.335 ns/op
# Warmup Iteration   2: 4199.286 ns/op
Iteration   1: 3725.546 ns/op
Iteration   2: 3842.128 ns/op
Iteration   3: 3925.628 ns/op
Iteration   4: 3501.859 ns/op
Iteration   5: 3307.673 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3660.567 ±(99.9%) 976.361 ns/op [Average]
  (min, avg, max) = (3307.673, 3660.567, 3925.628), stdev = 253.558
  CI (99.9%): [2684.206, 4636.928] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 95.67% complete, ETA 00:08:23
# Fork: 1 of 1
# Warmup Iteration   1: 45024.237 ns/op
# Warmup Iteration   2: 6853.509 ns/op
Iteration   1: 5475.071 ns/op
Iteration   2: 5768.182 ns/op
Iteration   3: 5917.105 ns/op
Iteration   4: 6298.652 ns/op
Iteration   5: 5961.796 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5884.161 ±(99.9%) 1154.745 ns/op [Average]
  (min, avg, max) = (5475.071, 5884.161, 6298.652), stdev = 299.884
  CI (99.9%): [4729.416, 7038.906] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 96.00% complete, ETA 00:07:44
# Fork: 1 of 1
# Warmup Iteration   1: 37146.958 ns/op
# Warmup Iteration   2: 15595.960 ns/op
Iteration   1: 14118.834 ns/op
Iteration   2: 13188.734 ns/op
Iteration   3: 11661.154 ns/op
Iteration   4: 12790.567 ns/op
Iteration   5: 11326.451 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12617.148 ±(99.9%) 4386.891 ns/op [Average]
  (min, avg, max) = (11326.451, 12617.148, 14118.834), stdev = 1139.262
  CI (99.9%): [8230.257, 17004.039] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 96.33% complete, ETA 00:07:05
# Fork: 1 of 1
# Warmup Iteration   1: 212728.714 ns/op
# Warmup Iteration   2: 131797.878 ns/op
Iteration   1: 97487.781 ns/op
Iteration   2: 105898.406 ns/op
Iteration   3: 96230.066 ns/op
Iteration   4: 97633.634 ns/op
Iteration   5: 96932.870 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  98836.552 ±(99.9%) 15348.783 ns/op [Average]
  (min, avg, max) = (96230.066, 98836.552, 105898.406), stdev = 3986.030
  CI (99.9%): [83487.768, 114185.335] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 96.67% complete, ETA 00:06:27
# Fork: 1 of 1
# Warmup Iteration   1: 8786.248 ns/op
# Warmup Iteration   2: 7425.599 ns/op
Iteration   1: 6492.599 ns/op
Iteration   2: 5269.602 ns/op
Iteration   3: 4619.696 ns/op
Iteration   4: 4639.152 ns/op
Iteration   5: 4615.396 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5127.289 ±(99.9%) 3129.632 ns/op [Average]
  (min, avg, max) = (4615.396, 5127.289, 6492.599), stdev = 812.756
  CI (99.9%): [1997.657, 8256.921] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 97.00% complete, ETA 00:05:48
# Fork: 1 of 1
# Warmup Iteration   1: 11703.602 ns/op
# Warmup Iteration   2: 10596.713 ns/op
Iteration   1: 9131.665 ns/op
Iteration   2: 7402.454 ns/op
Iteration   3: 6228.679 ns/op
Iteration   4: 6446.476 ns/op
Iteration   5: 6558.376 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7153.530 ±(99.9%) 4590.374 ns/op [Average]
  (min, avg, max) = (6228.679, 7153.530, 9131.665), stdev = 1192.106
  CI (99.9%): [2563.156, 11743.905] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 97.33% complete, ETA 00:05:09
# Fork: 1 of 1
# Warmup Iteration   1: 26176.335 ns/op
# Warmup Iteration   2: 23664.439 ns/op
Iteration   1: 16599.735 ns/op
Iteration   2: 15520.583 ns/op
Iteration   3: 15595.139 ns/op
Iteration   4: 16621.758 ns/op
Iteration   5: 15491.363 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15965.716 ±(99.9%) 2272.249 ns/op [Average]
  (min, avg, max) = (15491.363, 15965.716, 16621.758), stdev = 590.096
  CI (99.9%): [13693.466, 18237.965] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 97.67% complete, ETA 00:04:30
# Fork: 1 of 1
# Warmup Iteration   1: 38923.397 ns/op
# Warmup Iteration   2: 27345.832 ns/op
Iteration   1: 28184.513 ns/op
Iteration   2: 30010.942 ns/op
Iteration   3: 30660.857 ns/op
Iteration   4: 27598.716 ns/op
Iteration   5: 26556.250 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  28602.256 ±(99.9%) 6554.577 ns/op [Average]
  (min, avg, max) = (26556.250, 28602.256, 30660.857), stdev = 1702.203
  CI (99.9%): [22047.679, 35156.832] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 98.00% complete, ETA 00:03:52
# Fork: 1 of 1
# Warmup Iteration   1: 330039.219 ns/op
# Warmup Iteration   2: 306416.407 ns/op
Iteration   1: 314806.140 ns/op
Iteration   2: 315818.324 ns/op
Iteration   3: 273783.817 ns/op
Iteration   4: 281577.226 ns/op
Iteration   5: 289129.570 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  295023.015 ±(99.9%) 74329.458 ns/op [Average]
  (min, avg, max) = (273783.817, 295023.015, 315818.324), stdev = 19303.124
  CI (99.9%): [220693.558, 369352.473] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 98.33% complete, ETA 00:03:13
# Fork: 1 of 1
# Warmup Iteration   1: 94781.111 ns/op
# Warmup Iteration   2: 16382.595 ns/op
Iteration   1: 14788.490 ns/op
Iteration   2: 15475.310 ns/op
Iteration   3: 17926.435 ns/op
Iteration   4: 15277.123 ns/op
Iteration   5: 15267.359 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15746.944 ±(99.9%) 4791.435 ns/op [Average]
  (min, avg, max) = (14788.490, 15746.944, 17926.435), stdev = 1244.321
  CI (99.9%): [10955.508, 20538.379] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 98.67% complete, ETA 00:02:34
# Fork: 1 of 1
# Warmup Iteration   1: 197947.217 ns/op
# Warmup Iteration   2: 34870.510 ns/op
Iteration   1: 28725.643 ns/op
Iteration   2: 30064.135 ns/op
Iteration   3: 31006.654 ns/op
Iteration   4: 29637.086 ns/op
Iteration   5: 28853.725 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29657.449 ±(99.9%) 3602.152 ns/op [Average]
  (min, avg, max) = (28725.643, 29657.449, 31006.654), stdev = 935.468
  CI (99.9%): [26055.296, 33259.601] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 99.00% complete, ETA 00:01:56
# Fork: 1 of 1
# Warmup Iteration   1: 282871.696 ns/op
# Warmup Iteration   2: 69539.201 ns/op
Iteration   1: 69503.373 ns/op
Iteration   2: 55170.031 ns/op
Iteration   3: 54054.258 ns/op
Iteration   4: 59314.705 ns/op
Iteration   5: 56073.444 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  58823.162 ±(99.9%) 24197.650 ns/op [Average]
  (min, avg, max) = (54054.258, 58823.162, 69503.373), stdev = 6284.053
  CI (99.9%): [34625.512, 83020.812] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 99.33% complete, ETA 00:01:17
# Fork: 1 of 1
# Warmup Iteration   1: 629792.447 ns/op
# Warmup Iteration   2: 164546.993 ns/op
Iteration   1: 136243.970 ns/op
Iteration   2: 140226.266 ns/op
Iteration   3: 144770.333 ns/op
Iteration   4: 146963.944 ns/op
Iteration   5: 130750.248 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  139790.952 ±(99.9%) 25158.512 ns/op [Average]
  (min, avg, max) = (130750.248, 139790.952, 146963.944), stdev = 6533.586
  CI (99.9%): [114632.440, 164949.464] (assumes normal distribution)


# JMH 1.17.4 (released 317 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 99.67% complete, ETA 00:00:38
# Fork: 1 of 1
# Warmup Iteration   1: 5596734.629 ns/op
# Warmup Iteration   2: 1588756.611 ns/op
Iteration   1: 1312321.470 ns/op
Iteration   2: 1343938.038 ns/op
Iteration   3: 1347157.508 ns/op
Iteration   4: 1445475.059 ns/op
Iteration   5: 1451092.239 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1379996.863 ±(99.9%) 245812.933 ns/op [Average]
  (min, avg, max) = (1312321.470, 1379996.863, 1451092.239), stdev = 63836.838
  CI (99.9%): [1134183.930, 1625809.796] (assumes normal distribution)


# Run complete. Total time: 03:13:31

Benchmark                       (converterType)  (inputType)  Mode  Cnt         Score         Error  Units
EventBenchmark.both                        JSON         _1_K  avgt    5     21207.995 ±    4396.931  ns/op
EventBenchmark.both                        JSON         _2_K  avgt    5     44264.877 ±    2843.245  ns/op
EventBenchmark.both                        JSON         _4_K  avgt    5     85967.090 ±    7247.005  ns/op
EventBenchmark.both                        JSON         _8_K  avgt    5    201786.704 ±   33811.467  ns/op
EventBenchmark.both                        JSON        _64_K  avgt    5   1568211.339 ±  107412.676  ns/op
EventBenchmark.both                    SCALA_PB         _1_K  avgt    5      6046.595 ±     549.960  ns/op
EventBenchmark.both                    SCALA_PB         _2_K  avgt    5     13007.720 ±    1641.913  ns/op
EventBenchmark.both                    SCALA_PB         _4_K  avgt    5     23629.299 ±    4182.760  ns/op
EventBenchmark.both                    SCALA_PB         _8_K  avgt    5     52490.319 ±   11156.989  ns/op
EventBenchmark.both                    SCALA_PB        _64_K  avgt    5    480829.323 ±   37241.736  ns/op
EventBenchmark.both                     JAVA_PB         _1_K  avgt    5      8377.142 ±    1204.146  ns/op
EventBenchmark.both                     JAVA_PB         _2_K  avgt    5     17332.474 ±    3885.987  ns/op
EventBenchmark.both                     JAVA_PB         _4_K  avgt    5     32059.909 ±     885.416  ns/op
EventBenchmark.both                     JAVA_PB         _8_K  avgt    5     62194.489 ±   11138.796  ns/op
EventBenchmark.both                     JAVA_PB        _64_K  avgt    5    693266.253 ±   50571.761  ns/op
EventBenchmark.both                 JAVA_THRIFT         _1_K  avgt    5      8837.995 ±     904.707  ns/op
EventBenchmark.both                 JAVA_THRIFT         _2_K  avgt    5     18855.994 ±    1756.231  ns/op
EventBenchmark.both                 JAVA_THRIFT         _4_K  avgt    5     35540.161 ±    2817.564  ns/op
EventBenchmark.both                 JAVA_THRIFT         _8_K  avgt    5     74188.690 ±   13203.760  ns/op
EventBenchmark.both                 JAVA_THRIFT        _64_K  avgt    5    759027.803 ±  166833.203  ns/op
EventBenchmark.both                     SCROOGE         _1_K  avgt    5      9839.203 ±     556.379  ns/op
EventBenchmark.both                     SCROOGE         _2_K  avgt    5     20987.704 ±    1577.873  ns/op
EventBenchmark.both                     SCROOGE         _4_K  avgt    5     41366.795 ±    4948.012  ns/op
EventBenchmark.both                     SCROOGE         _8_K  avgt    5     87341.515 ±   13401.408  ns/op
EventBenchmark.both                     SCROOGE        _64_K  avgt    5    811474.028 ±  258244.963  ns/op
EventBenchmark.both                SERIALIZABLE         _1_K  avgt    5    135857.364 ±    8590.399  ns/op
EventBenchmark.both                SERIALIZABLE         _2_K  avgt    5    260299.848 ±  119516.128  ns/op
EventBenchmark.both                SERIALIZABLE         _4_K  avgt    5    569618.540 ±  164700.544  ns/op
EventBenchmark.both                SERIALIZABLE         _8_K  avgt    5   1381267.952 ±   68838.671  ns/op
EventBenchmark.both                SERIALIZABLE        _64_K  avgt    5  11133302.789 ± 1166303.121  ns/op
EventBenchmark.both                    PICKLING         _1_K  avgt    5     95500.525 ±   35637.803  ns/op
EventBenchmark.both                    PICKLING         _2_K  avgt    5    192561.326 ±   32493.815  ns/op
EventBenchmark.both                    PICKLING         _4_K  avgt    5    421688.875 ±  127134.070  ns/op
EventBenchmark.both                    PICKLING         _8_K  avgt    5    970050.987 ±  204821.123  ns/op
EventBenchmark.both                    PICKLING        _64_K  avgt    5   9343743.838 ±  789975.592  ns/op
EventBenchmark.both                   BOOPICKLE         _1_K  avgt    5      6715.675 ±    1267.178  ns/op
EventBenchmark.both                   BOOPICKLE         _2_K  avgt    5     11799.544 ±    2184.966  ns/op
EventBenchmark.both                   BOOPICKLE         _4_K  avgt    5     20411.290 ±    4104.783  ns/op
EventBenchmark.both                   BOOPICKLE         _8_K  avgt    5     43525.604 ±    3490.409  ns/op
EventBenchmark.both                   BOOPICKLE        _64_K  avgt    5    444239.582 ±   39288.867  ns/op
EventBenchmark.both                       CHILL         _1_K  avgt    5     22608.365 ±    8151.280  ns/op
EventBenchmark.both                       CHILL         _2_K  avgt    5     43067.192 ±   19277.695  ns/op
EventBenchmark.both                       CHILL         _4_K  avgt    5     75880.250 ±   17270.451  ns/op
EventBenchmark.both                       CHILL         _8_K  avgt    5    161138.055 ±   35614.075  ns/op
EventBenchmark.both                       CHILL        _64_K  avgt    5   1772973.850 ±  487169.169  ns/op
EventBenchmark.both                       CIRCE         _1_K  avgt    5     67876.223 ±    5488.716  ns/op
EventBenchmark.both                       CIRCE         _2_K  avgt    5    123467.395 ±   10495.808  ns/op
EventBenchmark.both                       CIRCE         _4_K  avgt    5    285263.073 ±   23172.683  ns/op
EventBenchmark.both                       CIRCE         _8_K  avgt    5    592059.686 ±  228405.362  ns/op
EventBenchmark.both                       CIRCE        _64_K  avgt    5   5894648.178 ±  454302.106  ns/op
EventBenchmark.deserialization             JSON         _1_K  avgt    5     11928.772 ±    1103.682  ns/op
EventBenchmark.deserialization             JSON         _2_K  avgt    5     20926.498 ±    7464.961  ns/op
EventBenchmark.deserialization             JSON         _4_K  avgt    5     44408.647 ±    6827.528  ns/op
EventBenchmark.deserialization             JSON         _8_K  avgt    5    100548.078 ±   20543.089  ns/op
EventBenchmark.deserialization             JSON        _64_K  avgt    5    868489.593 ±  211707.483  ns/op
EventBenchmark.deserialization         SCALA_PB         _1_K  avgt    5      4123.603 ±     514.549  ns/op
EventBenchmark.deserialization         SCALA_PB         _2_K  avgt    5      8788.723 ±     549.755  ns/op
EventBenchmark.deserialization         SCALA_PB         _4_K  avgt    5     15168.317 ±     440.045  ns/op
EventBenchmark.deserialization         SCALA_PB         _8_K  avgt    5     30401.658 ±   10444.848  ns/op
EventBenchmark.deserialization         SCALA_PB        _64_K  avgt    5    318460.717 ±   40870.003  ns/op
EventBenchmark.deserialization          JAVA_PB         _1_K  avgt    5      4042.205 ±     470.649  ns/op
EventBenchmark.deserialization          JAVA_PB         _2_K  avgt    5      6914.735 ±    2514.554  ns/op
EventBenchmark.deserialization          JAVA_PB         _4_K  avgt    5     14082.992 ±    2450.531  ns/op
EventBenchmark.deserialization          JAVA_PB         _8_K  avgt    5     29701.874 ±    5118.093  ns/op
EventBenchmark.deserialization          JAVA_PB        _64_K  avgt    5    308818.171 ±   50413.653  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _1_K  avgt    5      3808.571 ±     295.649  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _2_K  avgt    5      7941.275 ±    1112.931  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _4_K  avgt    5     14138.746 ±    2177.822  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _8_K  avgt    5     30332.697 ±    3912.210  ns/op
EventBenchmark.deserialization      JAVA_THRIFT        _64_K  avgt    5    310045.621 ±   55621.873  ns/op
EventBenchmark.deserialization          SCROOGE         _1_K  avgt    5      4151.137 ±     866.286  ns/op
EventBenchmark.deserialization          SCROOGE         _2_K  avgt    5      8506.408 ±    1256.328  ns/op
EventBenchmark.deserialization          SCROOGE         _4_K  avgt    5     14010.808 ±    2661.035  ns/op
EventBenchmark.deserialization          SCROOGE         _8_K  avgt    5     33766.937 ±    2429.910  ns/op
EventBenchmark.deserialization          SCROOGE        _64_K  avgt    5    338130.009 ±   49518.342  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _1_K  avgt    5    105691.772 ±   16845.773  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _2_K  avgt    5    184112.979 ±   72922.837  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _4_K  avgt    5    424972.301 ±   57971.616  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _8_K  avgt    5   1041709.594 ±  114248.923  ns/op
EventBenchmark.deserialization     SERIALIZABLE        _64_K  avgt    5   9249827.917 ±  968672.389  ns/op
EventBenchmark.deserialization         PICKLING         _1_K  avgt    5     14302.672 ±    5383.173  ns/op
EventBenchmark.deserialization         PICKLING         _2_K  avgt    5     29505.931 ±    1366.722  ns/op
EventBenchmark.deserialization         PICKLING         _4_K  avgt    5     63089.378 ±    8750.635  ns/op
EventBenchmark.deserialization         PICKLING         _8_K  avgt    5    148248.836 ±   18712.057  ns/op
EventBenchmark.deserialization         PICKLING        _64_K  avgt    5   1369896.189 ±  145157.668  ns/op
EventBenchmark.deserialization        BOOPICKLE         _1_K  avgt    5      2314.234 ±     456.016  ns/op
EventBenchmark.deserialization        BOOPICKLE         _2_K  avgt    5      4719.987 ±    1045.769  ns/op
EventBenchmark.deserialization        BOOPICKLE         _4_K  avgt    5      9362.121 ±     613.341  ns/op
EventBenchmark.deserialization        BOOPICKLE         _8_K  avgt    5     15612.115 ±    4504.128  ns/op
EventBenchmark.deserialization        BOOPICKLE        _64_K  avgt    5    203147.114 ±   10405.606  ns/op
EventBenchmark.deserialization            CHILL         _1_K  avgt    5     10618.500 ±     339.017  ns/op
EventBenchmark.deserialization            CHILL         _2_K  avgt    5     21489.310 ±    7040.658  ns/op
EventBenchmark.deserialization            CHILL         _4_K  avgt    5     38332.705 ±    3994.834  ns/op
EventBenchmark.deserialization            CHILL         _8_K  avgt    5     98528.951 ±   20941.378  ns/op
EventBenchmark.deserialization            CHILL        _64_K  avgt    5    692673.933 ±  173820.715  ns/op
EventBenchmark.deserialization            CIRCE         _1_K  avgt    5     34962.571 ±    2391.891  ns/op
EventBenchmark.deserialization            CIRCE         _2_K  avgt    5     59116.024 ±    5801.757  ns/op
EventBenchmark.deserialization            CIRCE         _4_K  avgt    5    132207.060 ±   27330.226  ns/op
EventBenchmark.deserialization            CIRCE         _8_K  avgt    5    304134.485 ±   26916.816  ns/op
EventBenchmark.deserialization            CIRCE        _64_K  avgt    5   2980614.344 ±  449658.405  ns/op
EventBenchmark.serialization               JSON         _1_K  avgt    5     10983.210 ±    1716.063  ns/op
EventBenchmark.serialization               JSON         _2_K  avgt    5     19050.847 ±    5523.548  ns/op
EventBenchmark.serialization               JSON         _4_K  avgt    5     31563.946 ±    7134.323  ns/op
EventBenchmark.serialization               JSON         _8_K  avgt    5     80418.187 ±   20609.182  ns/op
EventBenchmark.serialization               JSON        _64_K  avgt    5    740942.174 ±  106023.039  ns/op
EventBenchmark.serialization           SCALA_PB         _1_K  avgt    5      2132.090 ±     326.259  ns/op
EventBenchmark.serialization           SCALA_PB         _2_K  avgt    5      4440.541 ±    1168.336  ns/op
EventBenchmark.serialization           SCALA_PB         _4_K  avgt    5      8682.487 ±     945.195  ns/op
EventBenchmark.serialization           SCALA_PB         _8_K  avgt    5     18261.186 ±    3697.515  ns/op
EventBenchmark.serialization           SCALA_PB        _64_K  avgt    5    173753.231 ±   27177.910  ns/op
EventBenchmark.serialization            JAVA_PB         _1_K  avgt    5      4143.385 ±    1688.106  ns/op
EventBenchmark.serialization            JAVA_PB         _2_K  avgt    5      7973.628 ±     615.397  ns/op
EventBenchmark.serialization            JAVA_PB         _4_K  avgt    5     15996.348 ±    1853.393  ns/op
EventBenchmark.serialization            JAVA_PB         _8_K  avgt    5     30655.741 ±    6373.136  ns/op
EventBenchmark.serialization            JAVA_PB        _64_K  avgt    5    365456.943 ±   40088.059  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _1_K  avgt    5      5272.953 ±    2428.882  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _2_K  avgt    5     10090.975 ±    1094.209  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _4_K  avgt    5     19905.709 ±    3828.377  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _8_K  avgt    5     42190.208 ±    3795.283  ns/op
EventBenchmark.serialization        JAVA_THRIFT        _64_K  avgt    5    473602.956 ±  110639.601  ns/op
EventBenchmark.serialization            SCROOGE         _1_K  avgt    5      5381.710 ±    1463.337  ns/op
EventBenchmark.serialization            SCROOGE         _2_K  avgt    5     12240.343 ±    1362.420  ns/op
EventBenchmark.serialization            SCROOGE         _4_K  avgt    5     23686.004 ±    3063.684  ns/op
EventBenchmark.serialization            SCROOGE         _8_K  avgt    5     52652.723 ±    7830.830  ns/op
EventBenchmark.serialization            SCROOGE        _64_K  avgt    5    526051.252 ±  124692.325  ns/op
EventBenchmark.serialization       SERIALIZABLE         _1_K  avgt    5     22815.842 ±    4235.905  ns/op
EventBenchmark.serialization       SERIALIZABLE         _2_K  avgt    5     44217.105 ±   16074.827  ns/op
EventBenchmark.serialization       SERIALIZABLE         _4_K  avgt    5     95958.780 ±   27273.847  ns/op
EventBenchmark.serialization       SERIALIZABLE         _8_K  avgt    5    215029.293 ±   36955.792  ns/op
EventBenchmark.serialization       SERIALIZABLE        _64_K  avgt    5   2088938.805 ±  256544.162  ns/op
EventBenchmark.serialization           PICKLING         _1_K  avgt    5     67913.022 ±   25974.737  ns/op
EventBenchmark.serialization           PICKLING         _2_K  avgt    5    153482.188 ±   53156.295  ns/op
EventBenchmark.serialization           PICKLING         _4_K  avgt    5    335389.451 ±   59526.820  ns/op
EventBenchmark.serialization           PICKLING         _8_K  avgt    5    730883.656 ±  316115.034  ns/op
EventBenchmark.serialization           PICKLING        _64_K  avgt    5   7258203.262 ±  557331.400  ns/op
EventBenchmark.serialization          BOOPICKLE         _1_K  avgt    5      4117.512 ±     107.019  ns/op
EventBenchmark.serialization          BOOPICKLE         _2_K  avgt    5      7720.220 ±    1303.163  ns/op
EventBenchmark.serialization          BOOPICKLE         _4_K  avgt    5     14043.954 ±    1470.845  ns/op
EventBenchmark.serialization          BOOPICKLE         _8_K  avgt    5     24867.514 ±    6441.278  ns/op
EventBenchmark.serialization          BOOPICKLE        _64_K  avgt    5    238293.223 ±   13402.739  ns/op
EventBenchmark.serialization              CHILL         _1_K  avgt    5     11784.350 ±    4724.248  ns/op
EventBenchmark.serialization              CHILL         _2_K  avgt    5     18615.841 ±    9401.240  ns/op
EventBenchmark.serialization              CHILL         _4_K  avgt    5     39231.446 ±    4036.894  ns/op
EventBenchmark.serialization              CHILL         _8_K  avgt    5     91520.059 ±   39656.357  ns/op
EventBenchmark.serialization              CHILL        _64_K  avgt    5    713164.048 ±  178567.228  ns/op
EventBenchmark.serialization              CIRCE         _1_K  avgt    5     30997.796 ±    4622.667  ns/op
EventBenchmark.serialization              CIRCE         _2_K  avgt    5     54860.349 ±    3993.884  ns/op
EventBenchmark.serialization              CIRCE         _4_K  avgt    5    114184.023 ±   34362.043  ns/op
EventBenchmark.serialization              CIRCE         _8_K  avgt    5    277751.299 ±   82531.322  ns/op
EventBenchmark.serialization              CIRCE        _64_K  avgt    5   2603836.078 ±  555675.306  ns/op
SiteBenchmark.both                         JSON         _1_K  avgt    5     20800.293 ±    8420.934  ns/op
SiteBenchmark.both                         JSON         _2_K  avgt    5     26537.637 ±   18866.122  ns/op
SiteBenchmark.both                         JSON         _4_K  avgt    5     52140.316 ±    4860.783  ns/op
SiteBenchmark.both                         JSON         _8_K  avgt    5    105663.285 ±   14078.739  ns/op
SiteBenchmark.both                         JSON        _64_K  avgt    5    801838.753 ±  251236.136  ns/op
SiteBenchmark.both                     SCALA_PB         _1_K  avgt    5      5905.359 ±    1025.508  ns/op
SiteBenchmark.both                     SCALA_PB         _2_K  avgt    5     11185.859 ±    3261.816  ns/op
SiteBenchmark.both                     SCALA_PB         _4_K  avgt    5     19937.899 ±    1691.236  ns/op
SiteBenchmark.both                     SCALA_PB         _8_K  avgt    5     39650.021 ±    8731.908  ns/op
SiteBenchmark.both                     SCALA_PB        _64_K  avgt    5    316166.477 ±   49558.436  ns/op
SiteBenchmark.both                      JAVA_PB         _1_K  avgt    5      8526.889 ±     992.905  ns/op
SiteBenchmark.both                      JAVA_PB         _2_K  avgt    5     17955.804 ±    3099.423  ns/op
SiteBenchmark.both                      JAVA_PB         _4_K  avgt    5     29496.356 ±    3194.860  ns/op
SiteBenchmark.both                      JAVA_PB         _8_K  avgt    5     55872.563 ±    4248.275  ns/op
SiteBenchmark.both                      JAVA_PB        _64_K  avgt    5    501389.067 ±   47883.358  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _1_K  avgt    5      8101.105 ±     657.016  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _2_K  avgt    5     16564.937 ±    8494.822  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _4_K  avgt    5     27637.173 ±    2732.888  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _8_K  avgt    5     61680.767 ±    6412.753  ns/op
SiteBenchmark.both                  JAVA_THRIFT        _64_K  avgt    5    487538.456 ±   86965.870  ns/op
SiteBenchmark.both                      SCROOGE         _1_K  avgt    5      8759.365 ±     494.413  ns/op
SiteBenchmark.both                      SCROOGE         _2_K  avgt    5     16325.957 ±    2684.816  ns/op
SiteBenchmark.both                      SCROOGE         _4_K  avgt    5     30651.653 ±    5748.514  ns/op
SiteBenchmark.both                      SCROOGE         _8_K  avgt    5     58602.411 ±    3604.746  ns/op
SiteBenchmark.both                      SCROOGE        _64_K  avgt    5    473974.497 ±   63798.099  ns/op
SiteBenchmark.both                 SERIALIZABLE         _1_K  avgt    5    101661.807 ±    6485.099  ns/op
SiteBenchmark.both                 SERIALIZABLE         _2_K  avgt    5    155867.829 ±   21149.753  ns/op
SiteBenchmark.both                 SERIALIZABLE         _4_K  avgt    5    211603.322 ±   50527.176  ns/op
SiteBenchmark.both                 SERIALIZABLE         _8_K  avgt    5    302584.252 ±  134656.293  ns/op
SiteBenchmark.both                 SERIALIZABLE        _64_K  avgt    5   1564717.476 ±  259081.254  ns/op
SiteBenchmark.both                     PICKLING         _1_K  avgt    5     40342.771 ±    4949.087  ns/op
SiteBenchmark.both                     PICKLING         _2_K  avgt    5     61877.901 ±    9589.031  ns/op
SiteBenchmark.both                     PICKLING         _4_K  avgt    5    114466.108 ±   11640.314  ns/op
SiteBenchmark.both                     PICKLING         _8_K  avgt    5    285895.614 ±   37856.432  ns/op
SiteBenchmark.both                     PICKLING        _64_K  avgt    5   1993813.648 ±  270998.741  ns/op
SiteBenchmark.both                    BOOPICKLE         _1_K  avgt    5      4532.794 ±     510.572  ns/op
SiteBenchmark.both                    BOOPICKLE         _2_K  avgt    5      7979.842 ±     797.307  ns/op
SiteBenchmark.both                    BOOPICKLE         _4_K  avgt    5     12657.313 ±    3086.343  ns/op
SiteBenchmark.both                    BOOPICKLE         _8_K  avgt    5     28112.635 ±    9040.430  ns/op
SiteBenchmark.both                    BOOPICKLE        _64_K  avgt    5    240351.327 ±   47260.708  ns/op
SiteBenchmark.both                        CHILL         _1_K  avgt    5     10650.903 ±    4518.676  ns/op
SiteBenchmark.both                        CHILL         _2_K  avgt    5     18640.185 ±    4629.842  ns/op
SiteBenchmark.both                        CHILL         _4_K  avgt    5     28011.746 ±    3019.617  ns/op
SiteBenchmark.both                        CHILL         _8_K  avgt    5     62051.470 ±   19265.986  ns/op
SiteBenchmark.both                        CHILL        _64_K  avgt    5    536666.557 ±   28327.333  ns/op
SiteBenchmark.both                        CIRCE         _1_K  avgt    5     34819.624 ±    7696.342  ns/op
SiteBenchmark.both                        CIRCE         _2_K  avgt    5     69855.267 ±   24462.357  ns/op
SiteBenchmark.both                        CIRCE         _4_K  avgt    5    125277.264 ±   15547.278  ns/op
SiteBenchmark.both                        CIRCE         _8_K  avgt    5    290570.414 ±   44632.834  ns/op
SiteBenchmark.both                        CIRCE        _64_K  avgt    5   2726816.420 ±  390846.099  ns/op
SiteBenchmark.deserialization              JSON         _1_K  avgt    5     12764.615 ±    4089.143  ns/op
SiteBenchmark.deserialization              JSON         _2_K  avgt    5     15567.189 ±   12079.961  ns/op
SiteBenchmark.deserialization              JSON         _4_K  avgt    5     33969.149 ±    8399.210  ns/op
SiteBenchmark.deserialization              JSON         _8_K  avgt    5     61725.408 ±   11949.476  ns/op
SiteBenchmark.deserialization              JSON        _64_K  avgt    5    459175.677 ±   23745.166  ns/op
SiteBenchmark.deserialization          SCALA_PB         _1_K  avgt    5      2794.624 ±     727.479  ns/op
SiteBenchmark.deserialization          SCALA_PB         _2_K  avgt    5      5350.721 ±     957.064  ns/op
SiteBenchmark.deserialization          SCALA_PB         _4_K  avgt    5      9457.150 ±    1374.196  ns/op
SiteBenchmark.deserialization          SCALA_PB         _8_K  avgt    5     21102.853 ±    3041.673  ns/op
SiteBenchmark.deserialization          SCALA_PB        _64_K  avgt    5    171054.260 ±   52019.760  ns/op
SiteBenchmark.deserialization           JAVA_PB         _1_K  avgt    5      3701.907 ±     475.639  ns/op
SiteBenchmark.deserialization           JAVA_PB         _2_K  avgt    5      7084.335 ±     731.271  ns/op
SiteBenchmark.deserialization           JAVA_PB         _4_K  avgt    5     12688.320 ±    2747.097  ns/op
SiteBenchmark.deserialization           JAVA_PB         _8_K  avgt    5     27503.915 ±    8467.576  ns/op
SiteBenchmark.deserialization           JAVA_PB        _64_K  avgt    5    226378.866 ±   41296.966  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _1_K  avgt    5      3375.221 ±     814.999  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _2_K  avgt    5      6597.794 ±    1694.421  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _4_K  avgt    5     10335.760 ±    3056.719  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _8_K  avgt    5     21975.649 ±    1723.649  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT        _64_K  avgt    5    205648.346 ±   55419.949  ns/op
SiteBenchmark.deserialization           SCROOGE         _1_K  avgt    5      3983.131 ±     269.260  ns/op
SiteBenchmark.deserialization           SCROOGE         _2_K  avgt    5      7133.699 ±     773.803  ns/op
SiteBenchmark.deserialization           SCROOGE         _4_K  avgt    5     13504.847 ±    1620.070  ns/op
SiteBenchmark.deserialization           SCROOGE         _8_K  avgt    5     28591.016 ±    4820.215  ns/op
SiteBenchmark.deserialization           SCROOGE        _64_K  avgt    5    221687.573 ±   77974.014  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _1_K  avgt    5     82986.458 ±   40097.199  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _2_K  avgt    5    107120.048 ±   14842.468  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _4_K  avgt    5    131276.579 ±   19267.958  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _8_K  avgt    5    167841.604 ±   18416.653  ns/op
SiteBenchmark.deserialization      SERIALIZABLE        _64_K  avgt    5    780339.632 ±  665382.280  ns/op
SiteBenchmark.deserialization          PICKLING         _1_K  avgt    5     16625.225 ±    2918.807  ns/op
SiteBenchmark.deserialization          PICKLING         _2_K  avgt    5     24977.152 ±    2473.787  ns/op
SiteBenchmark.deserialization          PICKLING         _4_K  avgt    5     48868.397 ±   12461.955  ns/op
SiteBenchmark.deserialization          PICKLING         _8_K  avgt    5    111635.489 ±   18826.088  ns/op
SiteBenchmark.deserialization          PICKLING        _64_K  avgt    5    855239.997 ±  151763.115  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _1_K  avgt    5      2274.533 ±     362.991  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _2_K  avgt    5      3620.303 ±     898.455  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _4_K  avgt    5      6964.383 ±     587.913  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _8_K  avgt    5     14160.894 ±    1961.779  ns/op
SiteBenchmark.deserialization         BOOPICKLE        _64_K  avgt    5    126688.947 ±   11468.308  ns/op
SiteBenchmark.deserialization             CHILL         _1_K  avgt    5      5244.783 ±    1660.420  ns/op
SiteBenchmark.deserialization             CHILL         _2_K  avgt    5     13315.587 ±    4022.053  ns/op
SiteBenchmark.deserialization             CHILL         _4_K  avgt    5     17117.290 ±    2768.092  ns/op
SiteBenchmark.deserialization             CHILL         _8_K  avgt    5     28726.788 ±   11659.249  ns/op
SiteBenchmark.deserialization             CHILL        _64_K  avgt    5    235030.866 ±   41849.984  ns/op
SiteBenchmark.deserialization             CIRCE         _1_K  avgt    5     16894.174 ±    2202.210  ns/op
SiteBenchmark.deserialization             CIRCE         _2_K  avgt    5     29855.128 ±    3822.143  ns/op
SiteBenchmark.deserialization             CIRCE         _4_K  avgt    5     61034.202 ±    3132.416  ns/op
SiteBenchmark.deserialization             CIRCE         _8_K  avgt    5    148507.228 ±   47309.140  ns/op
SiteBenchmark.deserialization             CIRCE        _64_K  avgt    5   1346675.219 ±  490074.749  ns/op
SiteBenchmark.serialization                JSON         _1_K  avgt    5      5019.879 ±    1630.530  ns/op
SiteBenchmark.serialization                JSON         _2_K  avgt    5      9253.402 ±     642.035  ns/op
SiteBenchmark.serialization                JSON         _4_K  avgt    5     16871.130 ±    3239.797  ns/op
SiteBenchmark.serialization                JSON         _8_K  avgt    5     38505.305 ±    6224.860  ns/op
SiteBenchmark.serialization                JSON        _64_K  avgt    5    296467.398 ±  101669.693  ns/op
SiteBenchmark.serialization            SCALA_PB         _1_K  avgt    5      2088.757 ±     151.752  ns/op
SiteBenchmark.serialization            SCALA_PB         _2_K  avgt    5      3793.788 ±     602.875  ns/op
SiteBenchmark.serialization            SCALA_PB         _4_K  avgt    5      8398.873 ±    1459.608  ns/op
SiteBenchmark.serialization            SCALA_PB         _8_K  avgt    5     17461.042 ±    1421.066  ns/op
SiteBenchmark.serialization            SCALA_PB        _64_K  avgt    5    132362.993 ±   11122.890  ns/op
SiteBenchmark.serialization             JAVA_PB         _1_K  avgt    5      3779.881 ±     329.848  ns/op
SiteBenchmark.serialization             JAVA_PB         _2_K  avgt    5      6698.531 ±    1048.997  ns/op
SiteBenchmark.serialization             JAVA_PB         _4_K  avgt    5     11996.215 ±    1581.393  ns/op
SiteBenchmark.serialization             JAVA_PB         _8_K  avgt    5     23943.213 ±    2637.624  ns/op
SiteBenchmark.serialization             JAVA_PB        _64_K  avgt    5    248858.979 ±   30037.382  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _1_K  avgt    5      4097.179 ±     813.344  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _2_K  avgt    5      7844.693 ±    1310.161  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _4_K  avgt    5     14716.650 ±    3040.541  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _8_K  avgt    5     30927.892 ±    5653.529  ns/op
SiteBenchmark.serialization         JAVA_THRIFT        _64_K  avgt    5    312979.947 ±   60304.659  ns/op
SiteBenchmark.serialization             SCROOGE         _1_K  avgt    5      4078.638 ±     503.292  ns/op
SiteBenchmark.serialization             SCROOGE         _2_K  avgt    5      7252.158 ±     447.707  ns/op
SiteBenchmark.serialization             SCROOGE         _4_K  avgt    5     14695.613 ±    1608.581  ns/op
SiteBenchmark.serialization             SCROOGE         _8_K  avgt    5     29226.463 ±    3158.742  ns/op
SiteBenchmark.serialization             SCROOGE        _64_K  avgt    5    289210.622 ±   28140.204  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _1_K  avgt    5     16007.407 ±    3987.714  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _2_K  avgt    5     27771.765 ±    3268.483  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _4_K  avgt    5     48849.049 ±    4048.609  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _8_K  avgt    5    112937.164 ±   50728.433  ns/op
SiteBenchmark.serialization        SERIALIZABLE        _64_K  avgt    5    891022.245 ±  288597.713  ns/op
SiteBenchmark.serialization            PICKLING         _1_K  avgt    5     19786.192 ±    5857.184  ns/op
SiteBenchmark.serialization            PICKLING         _2_K  avgt    5     31311.123 ±    5705.111  ns/op
SiteBenchmark.serialization            PICKLING         _4_K  avgt    5     67549.809 ±   18199.268  ns/op
SiteBenchmark.serialization            PICKLING         _8_K  avgt    5    152212.827 ±   16737.240  ns/op
SiteBenchmark.serialization            PICKLING        _64_K  avgt    5   1121855.600 ±  135739.198  ns/op
SiteBenchmark.serialization           BOOPICKLE         _1_K  avgt    5      2368.153 ±     452.077  ns/op
SiteBenchmark.serialization           BOOPICKLE         _2_K  avgt    5      3660.567 ±     976.361  ns/op
SiteBenchmark.serialization           BOOPICKLE         _4_K  avgt    5      5884.161 ±    1154.745  ns/op
SiteBenchmark.serialization           BOOPICKLE         _8_K  avgt    5     12617.148 ±    4386.891  ns/op
SiteBenchmark.serialization           BOOPICKLE        _64_K  avgt    5     98836.552 ±   15348.783  ns/op
SiteBenchmark.serialization               CHILL         _1_K  avgt    5      5127.289 ±    3129.632  ns/op
SiteBenchmark.serialization               CHILL         _2_K  avgt    5      7153.530 ±    4590.374  ns/op
SiteBenchmark.serialization               CHILL         _4_K  avgt    5     15965.716 ±    2272.249  ns/op
SiteBenchmark.serialization               CHILL         _8_K  avgt    5     28602.256 ±    6554.577  ns/op
SiteBenchmark.serialization               CHILL        _64_K  avgt    5    295023.015 ±   74329.458  ns/op
SiteBenchmark.serialization               CIRCE         _1_K  avgt    5     15746.944 ±    4791.435  ns/op
SiteBenchmark.serialization               CIRCE         _2_K  avgt    5     29657.449 ±    3602.152  ns/op
SiteBenchmark.serialization               CIRCE         _4_K  avgt    5     58823.162 ±   24197.650  ns/op
SiteBenchmark.serialization               CIRCE         _8_K  avgt    5    139790.952 ±   25158.512  ns/op
SiteBenchmark.serialization               CIRCE        _64_K  avgt    5   1379996.863 ±  245812.933  ns/op

Benchmark result is saved to jmh.json
