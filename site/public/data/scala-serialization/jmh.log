# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 0.00% complete, ETA 02:55:00
# Fork: 1 of 1
# Warmup Iteration   1: 32538.194 ns/op
# Warmup Iteration   2: 17022.247 ns/op
Iteration   1: 18762.402 ns/op
Iteration   2: 23326.861 ns/op
Iteration   3: 19900.771 ns/op
Iteration   4: 20369.907 ns/op
Iteration   5: 20327.623 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  20537.513 ±(99.9%) 6503.219 ns/op [Average]
  (min, avg, max) = (18762.402, 20537.513, 23326.861), stdev = 1688.865
  CI (99.9%): [14034.294, 27040.732] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 0.33% complete, ETA 03:06:21
# Fork: 1 of 1
# Warmup Iteration   1: 47837.670 ns/op
# Warmup Iteration   2: 40150.585 ns/op
Iteration   1: 40578.657 ns/op
Iteration   2: 38838.697 ns/op
Iteration   3: 44624.186 ns/op
Iteration   4: 36786.912 ns/op
Iteration   5: 36819.334 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  39529.557 ±(99.9%) 12536.870 ns/op [Average]
  (min, avg, max) = (36786.912, 39529.557, 44624.186), stdev = 3255.785
  CI (99.9%): [26992.687, 52066.427] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 0.67% complete, ETA 03:07:13
# Fork: 1 of 1
# Warmup Iteration   1: 103725.072 ns/op
# Warmup Iteration   2: 73847.879 ns/op
Iteration   1: 100650.243 ns/op
Iteration   2: 70057.099 ns/op
Iteration   3: 73969.987 ns/op
Iteration   4: 82307.218 ns/op
Iteration   5: 73708.143 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  80138.538 ±(99.9%) 47414.141 ns/op [Average]
  (min, avg, max) = (70057.099, 80138.538, 100650.243), stdev = 12313.302
  CI (99.9%): [32724.397, 127552.679] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 1.00% complete, ETA 03:06:42
# Fork: 1 of 1
# Warmup Iteration   1: 253224.595 ns/op
# Warmup Iteration   2: 173531.760 ns/op
Iteration   1: 197506.984 ns/op
Iteration   2: 178958.794 ns/op
Iteration   3: 166451.870 ns/op
Iteration   4: 200100.507 ns/op
Iteration   5: 188687.767 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  186341.185 ±(99.9%) 53411.117 ns/op [Average]
  (min, avg, max) = (166451.870, 186341.185, 200100.507), stdev = 13870.698
  CI (99.9%): [132930.067, 239752.302] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 1.33% complete, ETA 03:06:03
# Fork: 1 of 1
# Warmup Iteration   1: 2084294.901 ns/op
# Warmup Iteration   2: 2097267.136 ns/op
Iteration   1: 1624412.444 ns/op
Iteration   2: 1686310.976 ns/op
Iteration   3: 2059391.120 ns/op
Iteration   4: 1557893.195 ns/op
Iteration   5: 1656664.038 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1716934.355 ±(99.9%) 759712.952 ns/op [Average]
  (min, avg, max) = (1557893.195, 1716934.355, 2059391.120), stdev = 197295.041
  CI (99.9%): [957221.402, 2476647.307] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 1.67% complete, ETA 03:05:25
# Fork: 1 of 1
# Warmup Iteration   1: 6776.434 ns/op
# Warmup Iteration   2: 5471.370 ns/op
Iteration   1: 5801.479 ns/op
Iteration   2: 6199.680 ns/op
Iteration   3: 5685.012 ns/op
Iteration   4: 5459.851 ns/op
Iteration   5: 6710.050 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5971.214 ±(99.9%) 1896.505 ns/op [Average]
  (min, avg, max) = (5459.851, 5971.214, 6710.050), stdev = 492.516
  CI (99.9%): [4074.709, 7867.720] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 2.00% complete, ETA 03:04:44
# Fork: 1 of 1
# Warmup Iteration   1: 13453.979 ns/op
# Warmup Iteration   2: 11449.679 ns/op
Iteration   1: 12651.927 ns/op
Iteration   2: 12300.220 ns/op
Iteration   3: 14191.215 ns/op
Iteration   4: 11477.574 ns/op
Iteration   5: 11142.382 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  12352.664 ±(99.9%) 4597.910 ns/op [Average]
  (min, avg, max) = (11142.382, 12352.664, 14191.215), stdev = 1194.063
  CI (99.9%): [7754.754, 16950.573] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 2.33% complete, ETA 03:03:55
# Fork: 1 of 1
# Warmup Iteration   1: 27951.107 ns/op
# Warmup Iteration   2: 22196.799 ns/op
Iteration   1: 26819.820 ns/op
Iteration   2: 25374.545 ns/op
Iteration   3: 22451.351 ns/op
Iteration   4: 25049.784 ns/op
Iteration   5: 23367.720 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  24612.644 ±(99.9%) 6631.674 ns/op [Average]
  (min, avg, max) = (22451.351, 24612.644, 26819.820), stdev = 1722.225
  CI (99.9%): [17980.970, 31244.319] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 2.67% complete, ETA 03:03:18
# Fork: 1 of 1
# Warmup Iteration   1: 60539.960 ns/op
# Warmup Iteration   2: 49146.502 ns/op
Iteration   1: 56640.829 ns/op
Iteration   2: 73684.367 ns/op
Iteration   3: 74482.026 ns/op
Iteration   4: 71219.066 ns/op
Iteration   5: 66190.778 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  68443.413 ±(99.9%) 28297.128 ns/op [Average]
  (min, avg, max) = (56640.829, 68443.413, 74482.026), stdev = 7348.674
  CI (99.9%): [40146.285, 96740.542] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 3.00% complete, ETA 03:02:40
# Fork: 1 of 1
# Warmup Iteration   1: 859823.985 ns/op
# Warmup Iteration   2: 686184.305 ns/op
Iteration   1: 672885.902 ns/op
Iteration   2: 639205.253 ns/op
Iteration   3: 678654.048 ns/op
Iteration   4: 634272.352 ns/op
Iteration   5: 730010.208 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  671005.553 ±(99.9%) 147939.060 ns/op [Average]
  (min, avg, max) = (634272.352, 671005.553, 730010.208), stdev = 38419.304
  CI (99.9%): [523066.493, 818944.612] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 3.33% complete, ETA 03:02:31
# Fork: 1 of 1
# Warmup Iteration   1: 15266.115 ns/op
# Warmup Iteration   2: 9917.312 ns/op
Iteration   1: 9956.830 ns/op
Iteration   2: 8328.589 ns/op
Iteration   3: 7495.010 ns/op
Iteration   4: 9197.776 ns/op
Iteration   5: 7765.571 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8548.755 ±(99.9%) 3934.508 ns/op [Average]
  (min, avg, max) = (7495.010, 8548.755, 9956.830), stdev = 1021.779
  CI (99.9%): [4614.247, 12483.264] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 3.67% complete, ETA 03:02:13
# Fork: 1 of 1
# Warmup Iteration   1: 23885.335 ns/op
# Warmup Iteration   2: 19533.397 ns/op
Iteration   1: 18967.473 ns/op
Iteration   2: 19104.841 ns/op
Iteration   3: 22423.187 ns/op
Iteration   4: 16974.376 ns/op
Iteration   5: 17481.590 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18990.293 ±(99.9%) 8199.816 ns/op [Average]
  (min, avg, max) = (16974.376, 18990.293, 22423.187), stdev = 2129.466
  CI (99.9%): [10790.477, 27190.109] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 4.00% complete, ETA 03:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 42878.325 ns/op
# Warmup Iteration   2: 31254.919 ns/op
Iteration   1: 33973.401 ns/op
Iteration   2: 39808.177 ns/op
Iteration   3: 32871.139 ns/op
Iteration   4: 32844.916 ns/op
Iteration   5: 33306.681 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  34560.863 ±(99.9%) 11431.295 ns/op [Average]
  (min, avg, max) = (32844.916, 34560.863, 39808.177), stdev = 2968.671
  CI (99.9%): [23129.568, 45992.157] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 4.33% complete, ETA 03:00:50
# Fork: 1 of 1
# Warmup Iteration   1: 91108.738 ns/op
# Warmup Iteration   2: 68457.284 ns/op
Iteration   1: 67443.427 ns/op
Iteration   2: 65049.487 ns/op
Iteration   3: 63995.805 ns/op
Iteration   4: 69525.463 ns/op
Iteration   5: 66493.831 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  66501.603 ±(99.9%) 8262.859 ns/op [Average]
  (min, avg, max) = (63995.805, 66501.603, 69525.463), stdev = 2145.838
  CI (99.9%): [58238.744, 74764.462] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 4.67% complete, ETA 03:00:16
# Fork: 1 of 1
# Warmup Iteration   1: 750178.769 ns/op
# Warmup Iteration   2: 607181.784 ns/op
Iteration   1: 644569.821 ns/op
Iteration   2: 678094.004 ns/op
Iteration   3: 649323.096 ns/op
Iteration   4: 676383.215 ns/op
Iteration   5: 623987.062 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  654471.440 ±(99.9%) 88061.041 ns/op [Average]
  (min, avg, max) = (623987.062, 654471.440, 678094.004), stdev = 22869.173
  CI (99.9%): [566410.399, 742532.481] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 5.00% complete, ETA 02:59:39
# Fork: 1 of 1
# Warmup Iteration   1: 9544.987 ns/op
# Warmup Iteration   2: 8132.217 ns/op
Iteration   1: 9324.914 ns/op
Iteration   2: 8652.428 ns/op
Iteration   3: 9117.545 ns/op
Iteration   4: 9196.593 ns/op
Iteration   5: 8892.087 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  9036.713 ±(99.9%) 1025.579 ns/op [Average]
  (min, avg, max) = (8652.428, 9036.713, 9324.914), stdev = 266.340
  CI (99.9%): [8011.134, 10062.293] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 5.33% complete, ETA 02:58:59
# Fork: 1 of 1
# Warmup Iteration   1: 23423.406 ns/op
# Warmup Iteration   2: 17197.070 ns/op
Iteration   1: 17584.296 ns/op
Iteration   2: 18904.982 ns/op
Iteration   3: 19271.000 ns/op
Iteration   4: 17054.861 ns/op
Iteration   5: 17200.432 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18003.114 ±(99.9%) 3917.351 ns/op [Average]
  (min, avg, max) = (17054.861, 18003.114, 19271.000), stdev = 1017.324
  CI (99.9%): [14085.763, 21920.466] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 5.67% complete, ETA 02:58:18
# Fork: 1 of 1
# Warmup Iteration   1: 41723.715 ns/op
# Warmup Iteration   2: 38386.562 ns/op
Iteration   1: 35597.685 ns/op
Iteration   2: 37765.001 ns/op
Iteration   3: 36129.208 ns/op
Iteration   4: 36875.864 ns/op
Iteration   5: 41080.305 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  37489.613 ±(99.9%) 8342.597 ns/op [Average]
  (min, avg, max) = (35597.685, 37489.613, 41080.305), stdev = 2166.546
  CI (99.9%): [29147.016, 45832.210] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 6.00% complete, ETA 02:57:40
# Fork: 1 of 1
# Warmup Iteration   1: 106158.132 ns/op
# Warmup Iteration   2: 73803.546 ns/op
Iteration   1: 75162.358 ns/op
Iteration   2: 87627.807 ns/op
Iteration   3: 73434.249 ns/op
Iteration   4: 94383.850 ns/op
Iteration   5: 83737.143 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  82869.081 ±(99.9%) 33591.132 ns/op [Average]
  (min, avg, max) = (73434.249, 82869.081, 94383.850), stdev = 8723.510
  CI (99.9%): [49277.949, 116460.213] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 6.33% complete, ETA 02:56:58
# Fork: 1 of 1
# Warmup Iteration   1: 878048.230 ns/op
# Warmup Iteration   2: 664627.764 ns/op
Iteration   1: 752562.906 ns/op
Iteration   2: 808249.828 ns/op
Iteration   3: 855433.034 ns/op
Iteration   4: 760798.925 ns/op
Iteration   5: 831320.263 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  801672.991 ±(99.9%) 171070.544 ns/op [Average]
  (min, avg, max) = (752562.906, 801672.991, 855433.034), stdev = 44426.477
  CI (99.9%): [630602.447, 972743.535] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 6.67% complete, ETA 02:56:18
# Fork: 1 of 1
# Warmup Iteration   1: 12793.268 ns/op
# Warmup Iteration   2: 11695.693 ns/op
Iteration   1: 10773.568 ns/op
Iteration   2: 11808.925 ns/op
Iteration   3: 11664.562 ns/op
Iteration   4: 10584.457 ns/op
Iteration   5: 10896.264 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11145.555 ±(99.9%) 2130.748 ns/op [Average]
  (min, avg, max) = (10584.457, 11145.555, 11808.925), stdev = 553.348
  CI (99.9%): [9014.808, 13276.303] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 7.00% complete, ETA 02:55:40
# Fork: 1 of 1
# Warmup Iteration   1: 25225.210 ns/op
# Warmup Iteration   2: 19576.796 ns/op
Iteration   1: 20822.155 ns/op
Iteration   2: 19773.028 ns/op
Iteration   3: 23288.175 ns/op
Iteration   4: 19587.824 ns/op
Iteration   5: 19570.723 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  20608.381 ±(99.9%) 6101.502 ns/op [Average]
  (min, avg, max) = (19570.723, 20608.381, 23288.175), stdev = 1584.541
  CI (99.9%): [14506.879, 26709.883] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 7.33% complete, ETA 02:55:00
# Fork: 1 of 1
# Warmup Iteration   1: 61376.529 ns/op
# Warmup Iteration   2: 39400.618 ns/op
Iteration   1: 39081.092 ns/op
Iteration   2: 41541.879 ns/op
Iteration   3: 41733.386 ns/op
Iteration   4: 42401.985 ns/op
Iteration   5: 43315.860 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  41614.841 ±(99.9%) 6073.871 ns/op [Average]
  (min, avg, max) = (39081.092, 41614.841, 43315.860), stdev = 1577.365
  CI (99.9%): [35540.969, 47688.712] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 7.67% complete, ETA 02:54:20
# Fork: 1 of 1
# Warmup Iteration   1: 119173.722 ns/op
# Warmup Iteration   2: 102004.832 ns/op
Iteration   1: 78043.557 ns/op
Iteration   2: 82593.584 ns/op
Iteration   3: 85413.428 ns/op
Iteration   4: 83823.532 ns/op
Iteration   5: 89271.470 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  83829.114 ±(99.9%) 15774.548 ns/op [Average]
  (min, avg, max) = (78043.557, 83829.114, 89271.470), stdev = 4096.600
  CI (99.9%): [68054.566, 99603.662] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 8.00% complete, ETA 02:53:41
# Fork: 1 of 1
# Warmup Iteration   1: 1122588.915 ns/op
# Warmup Iteration   2: 799382.629 ns/op
Iteration   1: 1119832.777 ns/op
Iteration   2: 912172.561 ns/op
Iteration   3: 932902.401 ns/op
Iteration   4: 918256.116 ns/op
Iteration   5: 859799.583 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  948592.687 ±(99.9%) 383619.143 ns/op [Average]
  (min, avg, max) = (859799.583, 948592.687, 1119832.777), stdev = 99624.673
  CI (99.9%): [564973.545, 1332211.830] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 8.33% complete, ETA 02:53:04
# Fork: 1 of 1
# Warmup Iteration   1: 161228.308 ns/op
# Warmup Iteration   2: 149030.594 ns/op
Iteration   1: 123215.646 ns/op
Iteration   2: 138475.500 ns/op
Iteration   3: 125954.549 ns/op
Iteration   4: 120121.315 ns/op
Iteration   5: 127262.898 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  127005.981 ±(99.9%) 26850.246 ns/op [Average]
  (min, avg, max) = (120121.315, 127005.981, 138475.500), stdev = 6972.923
  CI (99.9%): [100155.736, 153856.227] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 8.67% complete, ETA 02:52:23
# Fork: 1 of 1
# Warmup Iteration   1: 353247.204 ns/op
# Warmup Iteration   2: 318491.102 ns/op
Iteration   1: 204178.502 ns/op
Iteration   2: 238378.443 ns/op
Iteration   3: 241408.928 ns/op
Iteration   4: 231164.458 ns/op
Iteration   5: 223082.781 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  227642.623 ±(99.9%) 57390.404 ns/op [Average]
  (min, avg, max) = (204178.502, 227642.623, 241408.928), stdev = 14904.106
  CI (99.9%): [170252.219, 285033.026] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 9.00% complete, ETA 02:51:44
# Fork: 1 of 1
# Warmup Iteration   1: 729713.879 ns/op
# Warmup Iteration   2: 568803.355 ns/op
Iteration   1: 573915.970 ns/op
Iteration   2: 540066.643 ns/op
Iteration   3: 545041.302 ns/op
Iteration   4: 628367.638 ns/op
Iteration   5: 610933.973 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  579665.105 ±(99.9%) 150982.287 ns/op [Average]
  (min, avg, max) = (540066.643, 579665.105, 628367.638), stdev = 39209.620
  CI (99.9%): [428682.818, 730647.392] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 9.33% complete, ETA 02:51:04
# Fork: 1 of 1
# Warmup Iteration   1: 1936725.367 ns/op
# Warmup Iteration   2: 1189074.078 ns/op
Iteration   1: 1567093.666 ns/op
Iteration   2: 1250781.847 ns/op
Iteration   3: 1206938.612 ns/op
Iteration   4: 1179887.613 ns/op
Iteration   5: 1562769.474 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1353494.242 ±(99.9%) 749611.904 ns/op [Average]
  (min, avg, max) = (1179887.613, 1353494.242, 1567093.666), stdev = 194671.831
  CI (99.9%): [603882.339, 2103106.146] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 9.67% complete, ETA 02:50:26
# Fork: 1 of 1
# Warmup Iteration   1: 15094864.036 ns/op
# Warmup Iteration   2: 13949239.057 ns/op
Iteration   1: 12991425.542 ns/op
Iteration   2: 11390867.598 ns/op
Iteration   3: 11313284.593 ns/op
Iteration   4: 11031898.006 ns/op
Iteration   5: 10080078.666 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11361510.881 ±(99.9%) 4043415.666 ns/op [Average]
  (min, avg, max) = (10080078.666, 11361510.881, 12991425.542), stdev = 1050062.208
  CI (99.9%): [7318095.215, 15404926.547] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 10.00% complete, ETA 02:49:46
# Fork: 1 of 1
# Warmup Iteration   1: 117845.880 ns/op
# Warmup Iteration   2: 84501.078 ns/op
Iteration   1: 88706.571 ns/op
Iteration   2: 86899.092 ns/op
Iteration   3: 83708.876 ns/op
Iteration   4: 85168.462 ns/op
Iteration   5: 84477.515 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  85792.103 ±(99.9%) 7743.637 ns/op [Average]
  (min, avg, max) = (83708.876, 85792.103, 88706.571), stdev = 2010.998
  CI (99.9%): [78048.466, 93535.740] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 10.33% complete, ETA 02:49:07
# Fork: 1 of 1
# Warmup Iteration   1: 246221.714 ns/op
# Warmup Iteration   2: 164575.474 ns/op
Iteration   1: 175391.128 ns/op
Iteration   2: 174678.168 ns/op
Iteration   3: 160259.121 ns/op
Iteration   4: 159618.251 ns/op
Iteration   5: 190749.417 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  172139.217 ±(99.9%) 49510.058 ns/op [Average]
  (min, avg, max) = (159618.251, 172139.217, 190749.417), stdev = 12857.605
  CI (99.9%): [122629.159, 221649.275] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 10.67% complete, ETA 02:48:28
# Fork: 1 of 1
# Warmup Iteration   1: 575116.233 ns/op
# Warmup Iteration   2: 351553.190 ns/op
Iteration   1: 447040.154 ns/op
Iteration   2: 428742.123 ns/op
Iteration   3: 353545.650 ns/op
Iteration   4: 460040.302 ns/op
Iteration   5: 351993.175 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  408272.281 ±(99.9%) 199753.730 ns/op [Average]
  (min, avg, max) = (351993.175, 408272.281, 460040.302), stdev = 51875.409
  CI (99.9%): [208518.551, 608026.011] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 11.00% complete, ETA 02:47:50
# Fork: 1 of 1
# Warmup Iteration   1: 1375464.535 ns/op
# Warmup Iteration   2: 905004.361 ns/op
Iteration   1: 925933.942 ns/op
Iteration   2: 884173.100 ns/op
Iteration   3: 890570.339 ns/op
Iteration   4: 1018342.922 ns/op
Iteration   5: 921866.568 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  928177.374 ±(99.9%) 206695.223 ns/op [Average]
  (min, avg, max) = (884173.100, 928177.374, 1018342.922), stdev = 53678.093
  CI (99.9%): [721482.152, 1134872.597] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 11.33% complete, ETA 02:47:13
# Fork: 1 of 1
# Warmup Iteration   1: 11624341.488 ns/op
# Warmup Iteration   2: 8110070.952 ns/op
Iteration   1: 10389631.982 ns/op
Iteration   2: 8731755.090 ns/op
Iteration   3: 9266640.662 ns/op
Iteration   4: 8602621.282 ns/op
Iteration   5: 8008210.098 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  8999771.823 ±(99.9%) 3452551.861 ns/op [Average]
  (min, avg, max) = (8008210.098, 8999771.823, 10389631.982), stdev = 896616.754
  CI (99.9%): [5547219.962, 12452323.684] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 11.67% complete, ETA 02:46:35
# Fork: 1 of 1
# Warmup Iteration   1: 7943.444 ns/op
# Warmup Iteration   2: 5747.501 ns/op
Iteration   1: 6118.175 ns/op
Iteration   2: 7397.329 ns/op
Iteration   3: 6713.658 ns/op
Iteration   4: 5675.555 ns/op
Iteration   5: 6433.709 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  6467.685 ±(99.9%) 2492.174 ns/op [Average]
  (min, avg, max) = (5675.555, 6467.685, 7397.329), stdev = 647.210
  CI (99.9%): [3975.511, 8959.860] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 12.00% complete, ETA 02:45:58
# Fork: 1 of 1
# Warmup Iteration   1: 13068.520 ns/op
# Warmup Iteration   2: 12403.705 ns/op
Iteration   1: 12481.326 ns/op
Iteration   2: 10399.638 ns/op
Iteration   3: 10415.665 ns/op
Iteration   4: 11615.944 ns/op
Iteration   5: 10836.161 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  11149.747 ±(99.9%) 3438.907 ns/op [Average]
  (min, avg, max) = (10399.638, 11149.747, 12481.326), stdev = 893.073
  CI (99.9%): [7710.839, 14588.654] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 12.33% complete, ETA 02:45:18
# Fork: 1 of 1
# Warmup Iteration   1: 24899.555 ns/op
# Warmup Iteration   2: 20817.336 ns/op
Iteration   1: 20389.408 ns/op
Iteration   2: 23214.682 ns/op
Iteration   3: 20805.643 ns/op
Iteration   4: 20139.707 ns/op
Iteration   5: 20577.786 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  21025.445 ±(99.9%) 4805.807 ns/op [Average]
  (min, avg, max) = (20139.707, 21025.445, 23214.682), stdev = 1248.053
  CI (99.9%): [16219.638, 25831.252] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 12.67% complete, ETA 02:44:41
# Fork: 1 of 1
# Warmup Iteration   1: 59692.722 ns/op
# Warmup Iteration   2: 51659.505 ns/op
Iteration   1: 41316.819 ns/op
Iteration   2: 49847.527 ns/op
Iteration   3: 46002.502 ns/op
Iteration   4: 44831.419 ns/op
Iteration   5: 51816.726 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  46762.999 ±(99.9%) 15995.788 ns/op [Average]
  (min, avg, max) = (41316.819, 46762.999, 51816.726), stdev = 4154.055
  CI (99.9%): [30767.211, 62758.786] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 13.00% complete, ETA 02:44:02
# Fork: 1 of 1
# Warmup Iteration   1: 489312.951 ns/op
# Warmup Iteration   2: 409584.218 ns/op
Iteration   1: 476900.711 ns/op
Iteration   2: 468931.124 ns/op
Iteration   3: 504555.661 ns/op
Iteration   4: 414762.222 ns/op
Iteration   5: 406358.906 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  454301.725 ±(99.9%) 162368.438 ns/op [Average]
  (min, avg, max) = (406358.906, 454301.725, 504555.661), stdev = 42166.568
  CI (99.9%): [291933.287, 616670.163] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 13.33% complete, ETA 02:43:23
# Fork: 1 of 1
# Warmup Iteration   1: 21749.801 ns/op
# Warmup Iteration   2: 19466.519 ns/op
Iteration   1: 19453.231 ns/op
Iteration   2: 19407.857 ns/op
Iteration   3: 19131.305 ns/op
Iteration   4: 19175.293 ns/op
Iteration   5: 15825.523 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  18598.642 ±(99.9%) 5993.783 ns/op [Average]
  (min, avg, max) = (15825.523, 18598.642, 19453.231), stdev = 1556.566
  CI (99.9%): [12604.859, 24592.424] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 13.67% complete, ETA 02:42:45
# Fork: 1 of 1
# Warmup Iteration   1: 35945.514 ns/op
# Warmup Iteration   2: 33343.681 ns/op
Iteration   1: 32872.910 ns/op
Iteration   2: 32616.979 ns/op
Iteration   3: 33291.972 ns/op
Iteration   4: 33003.486 ns/op
Iteration   5: 32847.477 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  32926.565 ±(99.9%) 951.850 ns/op [Average]
  (min, avg, max) = (32616.979, 32926.565, 33291.972), stdev = 247.192
  CI (99.9%): [31974.715, 33878.415] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 14.00% complete, ETA 02:42:06
# Fork: 1 of 1
# Warmup Iteration   1: 86574.729 ns/op
# Warmup Iteration   2: 68021.773 ns/op
Iteration   1: 72216.116 ns/op
Iteration   2: 70956.240 ns/op
Iteration   3: 69804.676 ns/op
Iteration   4: 71959.142 ns/op
Iteration   5: 70569.523 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  71101.139 ±(99.9%) 3833.166 ns/op [Average]
  (min, avg, max) = (69804.676, 71101.139, 72216.116), stdev = 995.461
  CI (99.9%): [67267.974, 74934.305] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 14.33% complete, ETA 02:41:28
# Fork: 1 of 1
# Warmup Iteration   1: 168008.169 ns/op
# Warmup Iteration   2: 150122.840 ns/op
Iteration   1: 151044.491 ns/op
Iteration   2: 149239.582 ns/op
Iteration   3: 149145.332 ns/op
Iteration   4: 149100.858 ns/op
Iteration   5: 149268.129 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  149559.678 ±(99.9%) 3206.878 ns/op [Average]
  (min, avg, max) = (149100.858, 149559.678, 151044.491), stdev = 832.816
  CI (99.9%): [146352.800, 152766.556] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 14.67% complete, ETA 02:40:51
# Fork: 1 of 1
# Warmup Iteration   1: 1510546.284 ns/op
# Warmup Iteration   2: 1383314.641 ns/op
Iteration   1: 1427462.171 ns/op
Iteration   2: 1345312.256 ns/op
Iteration   3: 1379162.601 ns/op
Iteration   4: 1377812.005 ns/op
Iteration   5: 1376503.393 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  1381250.485 ±(99.9%) 113345.611 ns/op [Average]
  (min, avg, max) = (1345312.256, 1381250.485, 1427462.171), stdev = 29435.495
  CI (99.9%): [1267904.874, 1494596.096] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 15.00% complete, ETA 02:40:14
# Fork: 1 of 1
# Warmup Iteration   1: 90152.352 ns/op
# Warmup Iteration   2: 82791.637 ns/op
Iteration   1: 68221.290 ns/op
Iteration   2: 75437.317 ns/op
Iteration   3: 65561.331 ns/op
Iteration   4: 67321.891 ns/op
Iteration   5: 65324.869 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  68373.340 ±(99.9%) 15903.323 ns/op [Average]
  (min, avg, max) = (65324.869, 68373.340, 75437.317), stdev = 4130.042
  CI (99.9%): [52470.017, 84276.662] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 15.33% complete, ETA 02:39:36
# Fork: 1 of 1
# Warmup Iteration   1: 216864.985 ns/op
# Warmup Iteration   2: 157466.800 ns/op
Iteration   1: 115818.302 ns/op
Iteration   2: 114407.964 ns/op
Iteration   3: 112109.833 ns/op
Iteration   4: 127773.821 ns/op
Iteration   5: 105144.557 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  115050.895 ±(99.9%) 31616.371 ns/op [Average]
  (min, avg, max) = (105144.557, 115050.895, 127773.821), stdev = 8210.671
  CI (99.9%): [83434.524, 146667.267] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 15.67% complete, ETA 02:38:58
# Fork: 1 of 1
# Warmup Iteration   1: 467243.391 ns/op
# Warmup Iteration   2: 272074.393 ns/op
Iteration   1: 282069.102 ns/op
Iteration   2: 298114.252 ns/op
Iteration   3: 298811.195 ns/op
Iteration   4: 264551.335 ns/op
Iteration   5: 236472.302 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  276003.637 ±(99.9%) 100776.132 ns/op [Average]
  (min, avg, max) = (236472.302, 276003.637, 298811.195), stdev = 26171.242
  CI (99.9%): [175227.505, 376779.769] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 16.00% complete, ETA 02:38:21
# Fork: 1 of 1
# Warmup Iteration   1: 918482.887 ns/op
# Warmup Iteration   2: 672245.411 ns/op
Iteration   1: 741162.114 ns/op
Iteration   2: 647296.387 ns/op
Iteration   3: 645921.223 ns/op
Iteration   4: 638914.952 ns/op
Iteration   5: 643720.078 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  663402.951 ±(99.9%) 167830.187 ns/op [Average]
  (min, avg, max) = (638914.952, 663402.951, 741162.114), stdev = 43584.967
  CI (99.9%): [495572.764, 831233.138] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 16.33% complete, ETA 02:37:42
# Fork: 1 of 1
# Warmup Iteration   1: 8837297.543 ns/op
# Warmup Iteration   2: 5758128.098 ns/op
Iteration   1: 5663138.080 ns/op
Iteration   2: 6393045.988 ns/op
Iteration   3: 5843295.955 ns/op
Iteration   4: 5227457.376 ns/op
Iteration   5: 6202253.087 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.both":
  5865838.097 ±(99.9%) 1764847.821 ns/op [Average]
  (min, avg, max) = (5227457.376, 5865838.097, 6393045.988), stdev = 458325.375
  CI (99.9%): [4100990.277, 7630685.918] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 16.67% complete, ETA 02:37:06
# Fork: 1 of 1
# Warmup Iteration   1: 12363.345 ns/op
# Warmup Iteration   2: 9635.865 ns/op
Iteration   1: 12124.560 ns/op
Iteration   2: 10263.718 ns/op
Iteration   3: 10539.536 ns/op
Iteration   4: 11351.207 ns/op
Iteration   5: 13356.893 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  11527.183 ±(99.9%) 4835.379 ns/op [Average]
  (min, avg, max) = (10263.718, 11527.183, 13356.893), stdev = 1255.732
  CI (99.9%): [6691.804, 16362.561] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 17.00% complete, ETA 02:36:28
# Fork: 1 of 1
# Warmup Iteration   1: 22827.363 ns/op
# Warmup Iteration   2: 19875.570 ns/op
Iteration   1: 21990.421 ns/op
Iteration   2: 19215.319 ns/op
Iteration   3: 25944.176 ns/op
Iteration   4: 19806.614 ns/op
Iteration   5: 21904.362 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  21772.178 ±(99.9%) 10164.467 ns/op [Average]
  (min, avg, max) = (19215.319, 21772.178, 25944.176), stdev = 2639.680
  CI (99.9%): [11607.711, 31936.646] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 17.33% complete, ETA 02:35:50
# Fork: 1 of 1
# Warmup Iteration   1: 61030.714 ns/op
# Warmup Iteration   2: 41184.852 ns/op
Iteration   1: 48278.177 ns/op
Iteration   2: 50343.414 ns/op
Iteration   3: 55654.815 ns/op
Iteration   4: 48720.096 ns/op
Iteration   5: 42241.069 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  49047.514 ±(99.9%) 18503.391 ns/op [Average]
  (min, avg, max) = (42241.069, 49047.514, 55654.815), stdev = 4805.272
  CI (99.9%): [30544.123, 67550.905] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 17.67% complete, ETA 02:35:12
# Fork: 1 of 1
# Warmup Iteration   1: 101237.779 ns/op
# Warmup Iteration   2: 84228.298 ns/op
Iteration   1: 107423.970 ns/op
Iteration   2: 106733.816 ns/op
Iteration   3: 88339.950 ns/op
Iteration   4: 110757.996 ns/op
Iteration   5: 84761.616 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  99603.470 ±(99.9%) 46510.495 ns/op [Average]
  (min, avg, max) = (84761.616, 99603.470, 110757.996), stdev = 12078.628
  CI (99.9%): [53092.975, 146113.964] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 18.00% complete, ETA 02:34:35
# Fork: 1 of 1
# Warmup Iteration   1: 1102685.342 ns/op
# Warmup Iteration   2: 912125.028 ns/op
Iteration   1: 1172831.956 ns/op
Iteration   2: 917340.649 ns/op
Iteration   3: 1032690.011 ns/op
Iteration   4: 955808.776 ns/op
Iteration   5: 710132.253 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  957760.729 ±(99.9%) 652418.536 ns/op [Average]
  (min, avg, max) = (710132.253, 957760.729, 1172831.956), stdev = 169431.022
  CI (99.9%): [305342.193, 1610179.266] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 18.33% complete, ETA 02:33:58
# Fork: 1 of 1
# Warmup Iteration   1: 4337.320 ns/op
# Warmup Iteration   2: 4121.368 ns/op
Iteration   1: 3983.527 ns/op
Iteration   2: 3717.204 ns/op
Iteration   3: 4578.612 ns/op
Iteration   4: 4437.974 ns/op
Iteration   5: 3478.293 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4039.122 ±(99.9%) 1797.248 ns/op [Average]
  (min, avg, max) = (3478.293, 4039.122, 4578.612), stdev = 466.740
  CI (99.9%): [2241.874, 5836.370] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 18.67% complete, ETA 02:33:20
# Fork: 1 of 1
# Warmup Iteration   1: 7794.592 ns/op
# Warmup Iteration   2: 8128.446 ns/op
Iteration   1: 7584.543 ns/op
Iteration   2: 7306.082 ns/op
Iteration   3: 7853.986 ns/op
Iteration   4: 7253.971 ns/op
Iteration   5: 8450.139 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7689.744 ±(99.9%) 1879.865 ns/op [Average]
  (min, avg, max) = (7253.971, 7689.744, 8450.139), stdev = 488.195
  CI (99.9%): [5809.879, 9569.610] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 19.00% complete, ETA 02:32:43
# Fork: 1 of 1
# Warmup Iteration   1: 14318.313 ns/op
# Warmup Iteration   2: 14247.290 ns/op
Iteration   1: 13140.633 ns/op
Iteration   2: 15983.463 ns/op
Iteration   3: 13873.176 ns/op
Iteration   4: 13519.386 ns/op
Iteration   5: 14597.912 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14222.914 ±(99.9%) 4317.513 ns/op [Average]
  (min, avg, max) = (13140.633, 14222.914, 15983.463), stdev = 1121.244
  CI (99.9%): [9905.402, 18540.427] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 19.33% complete, ETA 02:32:04
# Fork: 1 of 1
# Warmup Iteration   1: 35638.549 ns/op
# Warmup Iteration   2: 29452.910 ns/op
Iteration   1: 33116.812 ns/op
Iteration   2: 30272.882 ns/op
Iteration   3: 30209.325 ns/op
Iteration   4: 32420.266 ns/op
Iteration   5: 31224.120 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  31448.681 ±(99.9%) 4981.926 ns/op [Average]
  (min, avg, max) = (30209.325, 31448.681, 33116.812), stdev = 1293.790
  CI (99.9%): [26466.755, 36430.607] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 19.67% complete, ETA 02:31:26
# Fork: 1 of 1
# Warmup Iteration   1: 367019.631 ns/op
# Warmup Iteration   2: 297178.284 ns/op
Iteration   1: 328447.431 ns/op
Iteration   2: 374454.176 ns/op
Iteration   3: 373926.626 ns/op
Iteration   4: 324775.560 ns/op
Iteration   5: 307385.257 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  341797.810 ±(99.9%) 117915.754 ns/op [Average]
  (min, avg, max) = (307385.257, 341797.810, 374454.176), stdev = 30622.347
  CI (99.9%): [223882.056, 459713.564] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 20.00% complete, ETA 02:30:48
# Fork: 1 of 1
# Warmup Iteration   1: 4360.726 ns/op
# Warmup Iteration   2: 3146.043 ns/op
Iteration   1: 3475.148 ns/op
Iteration   2: 3509.780 ns/op
Iteration   3: 3234.731 ns/op
Iteration   4: 3572.348 ns/op
Iteration   5: 3772.097 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3512.821 ±(99.9%) 744.505 ns/op [Average]
  (min, avg, max) = (3234.731, 3512.821, 3772.097), stdev = 193.346
  CI (99.9%): [2768.316, 4257.325] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 20.33% complete, ETA 02:30:12
# Fork: 1 of 1
# Warmup Iteration   1: 7390.195 ns/op
# Warmup Iteration   2: 6582.808 ns/op
Iteration   1: 7659.628 ns/op
Iteration   2: 9195.421 ns/op
Iteration   3: 7056.964 ns/op
Iteration   4: 8940.958 ns/op
Iteration   5: 8953.041 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8361.202 ±(99.9%) 3640.617 ns/op [Average]
  (min, avg, max) = (7056.964, 8361.202, 9195.421), stdev = 945.457
  CI (99.9%): [4720.586, 12001.819] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 20.67% complete, ETA 02:29:34
# Fork: 1 of 1
# Warmup Iteration   1: 14342.513 ns/op
# Warmup Iteration   2: 16931.614 ns/op
Iteration   1: 15315.806 ns/op
Iteration   2: 12942.912 ns/op
Iteration   3: 15701.285 ns/op
Iteration   4: 14751.739 ns/op
Iteration   5: 13970.889 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  14536.526 ±(99.9%) 4248.731 ns/op [Average]
  (min, avg, max) = (12942.912, 14536.526, 15701.285), stdev = 1103.382
  CI (99.9%): [10287.795, 18785.257] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 21.00% complete, ETA 02:28:56
# Fork: 1 of 1
# Warmup Iteration   1: 37972.250 ns/op
# Warmup Iteration   2: 26043.624 ns/op
Iteration   1: 35142.749 ns/op
Iteration   2: 36670.026 ns/op
Iteration   3: 39113.252 ns/op
Iteration   4: 44039.718 ns/op
Iteration   5: 36776.638 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  38348.477 ±(99.9%) 13413.797 ns/op [Average]
  (min, avg, max) = (35142.749, 38348.477, 44039.718), stdev = 3483.521
  CI (99.9%): [24934.679, 51762.274] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 21.33% complete, ETA 02:28:18
# Fork: 1 of 1
# Warmup Iteration   1: 302082.383 ns/op
# Warmup Iteration   2: 285935.398 ns/op
Iteration   1: 337976.977 ns/op
Iteration   2: 302394.474 ns/op
Iteration   3: 280929.717 ns/op
Iteration   4: 352925.948 ns/op
Iteration   5: 287791.407 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  312403.705 ±(99.9%) 121655.461 ns/op [Average]
  (min, avg, max) = (280929.717, 312403.705, 352925.948), stdev = 31593.537
  CI (99.9%): [190748.244, 434059.166] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 21.67% complete, ETA 02:27:41
# Fork: 1 of 1
# Warmup Iteration   1: 3776.112 ns/op
# Warmup Iteration   2: 3815.764 ns/op
Iteration   1: 3576.566 ns/op
Iteration   2: 3713.002 ns/op
Iteration   3: 3820.617 ns/op
Iteration   4: 3857.231 ns/op
Iteration   5: 4323.893 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3858.262 ±(99.9%) 1086.885 ns/op [Average]
  (min, avg, max) = (3576.566, 3858.262, 4323.893), stdev = 282.260
  CI (99.9%): [2771.377, 4945.146] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 22.00% complete, ETA 02:27:02
# Fork: 1 of 1
# Warmup Iteration   1: 8801.065 ns/op
# Warmup Iteration   2: 9037.289 ns/op
Iteration   1: 8047.457 ns/op
Iteration   2: 9532.296 ns/op
Iteration   3: 7000.370 ns/op
Iteration   4: 7942.884 ns/op
Iteration   5: 7420.335 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  7988.668 ±(99.9%) 3697.458 ns/op [Average]
  (min, avg, max) = (7000.370, 7988.668, 9532.296), stdev = 960.218
  CI (99.9%): [4291.210, 11686.126] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 22.33% complete, ETA 02:26:24
# Fork: 1 of 1
# Warmup Iteration   1: 19723.890 ns/op
# Warmup Iteration   2: 16592.156 ns/op
Iteration   1: 17750.083 ns/op
Iteration   2: 19029.830 ns/op
Iteration   3: 16028.995 ns/op
Iteration   4: 20346.909 ns/op
Iteration   5: 21143.195 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  18859.803 ±(99.9%) 7867.768 ns/op [Average]
  (min, avg, max) = (16028.995, 18859.803, 21143.195), stdev = 2043.234
  CI (99.9%): [10992.034, 26727.571] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 22.67% complete, ETA 02:25:46
# Fork: 1 of 1
# Warmup Iteration   1: 33168.551 ns/op
# Warmup Iteration   2: 31246.003 ns/op
Iteration   1: 32871.249 ns/op
Iteration   2: 33093.796 ns/op
Iteration   3: 40679.227 ns/op
Iteration   4: 25945.878 ns/op
Iteration   5: 32589.915 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  33036.013 ±(99.9%) 20093.410 ns/op [Average]
  (min, avg, max) = (25945.878, 33036.013, 40679.227), stdev = 5218.195
  CI (99.9%): [12942.604, 53129.423] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 23.00% complete, ETA 02:25:09
# Fork: 1 of 1
# Warmup Iteration   1: 300007.293 ns/op
# Warmup Iteration   2: 287524.537 ns/op
Iteration   1: 352034.196 ns/op
Iteration   2: 318372.397 ns/op
Iteration   3: 348395.700 ns/op
Iteration   4: 292395.885 ns/op
Iteration   5: 279541.721 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  318147.980 ±(99.9%) 125025.377 ns/op [Average]
  (min, avg, max) = (279541.721, 318147.980, 352034.196), stdev = 32468.693
  CI (99.9%): [193122.603, 443173.356] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 23.33% complete, ETA 02:24:31
# Fork: 1 of 1
# Warmup Iteration   1: 4770.767 ns/op
# Warmup Iteration   2: 4955.303 ns/op
Iteration   1: 4135.400 ns/op
Iteration   2: 4342.905 ns/op
Iteration   3: 5159.205 ns/op
Iteration   4: 3322.355 ns/op
Iteration   5: 4389.032 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4269.779 ±(99.9%) 2529.669 ns/op [Average]
  (min, avg, max) = (3322.355, 4269.779, 5159.205), stdev = 656.947
  CI (99.9%): [1740.111, 6799.448] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 23.67% complete, ETA 02:23:53
# Fork: 1 of 1
# Warmup Iteration   1: 11682.152 ns/op
# Warmup Iteration   2: 9151.587 ns/op
Iteration   1: 10424.725 ns/op
Iteration   2: 7376.085 ns/op
Iteration   3: 8358.876 ns/op
Iteration   4: 8374.165 ns/op
Iteration   5: 6899.704 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  8286.711 ±(99.9%) 5215.096 ns/op [Average]
  (min, avg, max) = (6899.704, 8286.711, 10424.725), stdev = 1354.344
  CI (99.9%): [3071.615, 13501.806] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 24.00% complete, ETA 02:23:15
# Fork: 1 of 1
# Warmup Iteration   1: 17386.274 ns/op
# Warmup Iteration   2: 14013.809 ns/op
Iteration   1: 18475.529 ns/op
Iteration   2: 15226.465 ns/op
Iteration   3: 13091.757 ns/op
Iteration   4: 16403.803 ns/op
Iteration   5: 13708.114 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  15381.133 ±(99.9%) 8322.492 ns/op [Average]
  (min, avg, max) = (13091.757, 15381.133, 18475.529), stdev = 2161.325
  CI (99.9%): [7058.642, 23703.625] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 24.33% complete, ETA 02:22:36
# Fork: 1 of 1
# Warmup Iteration   1: 35540.658 ns/op
# Warmup Iteration   2: 32530.074 ns/op
Iteration   1: 36144.306 ns/op
Iteration   2: 30371.107 ns/op
Iteration   3: 34601.305 ns/op
Iteration   4: 28143.286 ns/op
Iteration   5: 32762.125 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  32404.426 ±(99.9%) 12363.001 ns/op [Average]
  (min, avg, max) = (28143.286, 32404.426, 36144.306), stdev = 3210.632
  CI (99.9%): [20041.425, 44767.427] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 24.67% complete, ETA 02:21:58
# Fork: 1 of 1
# Warmup Iteration   1: 396620.269 ns/op
# Warmup Iteration   2: 355545.897 ns/op
Iteration   1: 459896.711 ns/op
Iteration   2: 354859.977 ns/op
Iteration   3: 400587.276 ns/op
Iteration   4: 392504.078 ns/op
Iteration   5: 380574.384 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  397684.485 ±(99.9%) 149535.903 ns/op [Average]
  (min, avg, max) = (354859.977, 397684.485, 459896.711), stdev = 38833.999
  CI (99.9%): [248148.582, 547220.388] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 25.00% complete, ETA 02:21:21
# Fork: 1 of 1
# Warmup Iteration   1: 97933.481 ns/op
# Warmup Iteration   2: 94918.097 ns/op
Iteration   1: 83858.322 ns/op
Iteration   2: 95073.822 ns/op
Iteration   3: 94822.203 ns/op
Iteration   4: 120999.926 ns/op
Iteration   5: 130895.462 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  105129.947 ±(99.9%) 76422.800 ns/op [Average]
  (min, avg, max) = (83858.322, 105129.947, 130895.462), stdev = 19846.758
  CI (99.9%): [28707.147, 181552.746] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 25.33% complete, ETA 02:20:44
# Fork: 1 of 1
# Warmup Iteration   1: 234591.410 ns/op
# Warmup Iteration   2: 209207.439 ns/op
Iteration   1: 223757.404 ns/op
Iteration   2: 240101.051 ns/op
Iteration   3: 171769.804 ns/op
Iteration   4: 196526.925 ns/op
Iteration   5: 175825.401 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  201596.117 ±(99.9%) 114765.793 ns/op [Average]
  (min, avg, max) = (171769.804, 201596.117, 240101.051), stdev = 29804.312
  CI (99.9%): [86830.323, 316361.910] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 25.67% complete, ETA 02:20:07
# Fork: 1 of 1
# Warmup Iteration   1: 557424.091 ns/op
# Warmup Iteration   2: 539691.644 ns/op
Iteration   1: 352294.012 ns/op
Iteration   2: 458004.998 ns/op
Iteration   3: 396929.699 ns/op
Iteration   4: 435064.753 ns/op
Iteration   5: 462965.695 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  421051.832 ±(99.9%) 178839.356 ns/op [Average]
  (min, avg, max) = (352294.012, 421051.832, 462965.695), stdev = 46444.013
  CI (99.9%): [242212.475, 599891.188] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 26.00% complete, ETA 02:19:29
# Fork: 1 of 1
# Warmup Iteration   1: 1197335.674 ns/op
# Warmup Iteration   2: 859716.844 ns/op
Iteration   1: 861069.389 ns/op
Iteration   2: 1071603.093 ns/op
Iteration   3: 994864.448 ns/op
Iteration   4: 972805.311 ns/op
Iteration   5: 1267422.027 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1033552.854 ±(99.9%) 581052.515 ns/op [Average]
  (min, avg, max) = (861069.389, 1033552.854, 1267422.027), stdev = 150897.493
  CI (99.9%): [452500.338, 1614605.369] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 26.33% complete, ETA 02:18:51
# Fork: 1 of 1
# Warmup Iteration   1: 9836287.255 ns/op
# Warmup Iteration   2: 10185678.227 ns/op
Iteration   1: 7999251.495 ns/op
Iteration   2: 11713730.568 ns/op
Iteration   3: 9313769.520 ns/op
Iteration   4: 9279987.938 ns/op
Iteration   5: 10379722.186 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9737292.342 ±(99.9%) 5352363.567 ns/op [Average]
  (min, avg, max) = (7999251.495, 9737292.342, 11713730.568), stdev = 1389991.821
  CI (99.9%): [4384928.775, 15089655.908] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 26.67% complete, ETA 02:18:13
# Fork: 1 of 1
# Warmup Iteration   1: 16120.550 ns/op
# Warmup Iteration   2: 14493.510 ns/op
Iteration   1: 14443.647 ns/op
Iteration   2: 14243.186 ns/op
Iteration   3: 12953.598 ns/op
Iteration   4: 14050.671 ns/op
Iteration   5: 14297.804 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  13997.781 ±(99.9%) 2312.111 ns/op [Average]
  (min, avg, max) = (12953.598, 13997.781, 14443.647), stdev = 600.448
  CI (99.9%): [11685.671, 16309.892] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 27.00% complete, ETA 02:17:35
# Fork: 1 of 1
# Warmup Iteration   1: 37436.765 ns/op
# Warmup Iteration   2: 25864.986 ns/op
Iteration   1: 33258.740 ns/op
Iteration   2: 29066.059 ns/op
Iteration   3: 28266.326 ns/op
Iteration   4: 25195.199 ns/op
Iteration   5: 26994.247 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  28556.114 ±(99.9%) 11582.999 ns/op [Average]
  (min, avg, max) = (25195.199, 28556.114, 33258.740), stdev = 3008.068
  CI (99.9%): [16973.116, 40139.113] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 27.33% complete, ETA 02:16:57
# Fork: 1 of 1
# Warmup Iteration   1: 73190.556 ns/op
# Warmup Iteration   2: 60696.051 ns/op
Iteration   1: 66748.368 ns/op
Iteration   2: 68186.748 ns/op
Iteration   3: 68141.959 ns/op
Iteration   4: 64349.011 ns/op
Iteration   5: 70786.098 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  67642.437 ±(99.9%) 9045.821 ns/op [Average]
  (min, avg, max) = (64349.011, 67642.437, 70786.098), stdev = 2349.171
  CI (99.9%): [58596.616, 76688.258] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 27.67% complete, ETA 02:16:20
# Fork: 1 of 1
# Warmup Iteration   1: 214609.423 ns/op
# Warmup Iteration   2: 148827.178 ns/op
Iteration   1: 129511.554 ns/op
Iteration   2: 138301.591 ns/op
Iteration   3: 129532.527 ns/op
Iteration   4: 135473.129 ns/op
Iteration   5: 155755.467 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  137714.853 ±(99.9%) 41520.849 ns/op [Average]
  (min, avg, max) = (129511.554, 137714.853, 155755.467), stdev = 10782.833
  CI (99.9%): [96194.005, 179235.702] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 28.00% complete, ETA 02:15:43
# Fork: 1 of 1
# Warmup Iteration   1: 1683823.159 ns/op
# Warmup Iteration   2: 1253715.481 ns/op
Iteration   1: 1219251.692 ns/op
Iteration   2: 1369686.375 ns/op
Iteration   3: 1396421.899 ns/op
Iteration   4: 1293083.051 ns/op
Iteration   5: 1223394.620 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  1300367.527 ±(99.9%) 313946.849 ns/op [Average]
  (min, avg, max) = (1219251.692, 1300367.527, 1396421.899), stdev = 81531.000
  CI (99.9%): [986420.678, 1614314.377] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 28.33% complete, ETA 02:15:04
# Fork: 1 of 1
# Warmup Iteration   1: 2896.143 ns/op
# Warmup Iteration   2: 2581.973 ns/op
Iteration   1: 2523.412 ns/op
Iteration   2: 2826.565 ns/op
Iteration   3: 2760.008 ns/op
Iteration   4: 3319.665 ns/op
Iteration   5: 2521.888 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  2790.307 ±(99.9%) 1256.239 ns/op [Average]
  (min, avg, max) = (2521.888, 2790.307, 3319.665), stdev = 326.241
  CI (99.9%): [1534.068, 4046.547] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 28.67% complete, ETA 02:14:26
# Fork: 1 of 1
# Warmup Iteration   1: 3938.652 ns/op
# Warmup Iteration   2: 4880.725 ns/op
Iteration   1: 4799.158 ns/op
Iteration   2: 4586.227 ns/op
Iteration   3: 5307.986 ns/op
Iteration   4: 4353.861 ns/op
Iteration   5: 5042.389 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  4817.924 ±(99.9%) 1440.695 ns/op [Average]
  (min, avg, max) = (4353.861, 4817.924, 5307.986), stdev = 374.144
  CI (99.9%): [3377.229, 6258.620] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 29.00% complete, ETA 02:13:48
# Fork: 1 of 1
# Warmup Iteration   1: 10095.257 ns/op
# Warmup Iteration   2: 8231.592 ns/op
Iteration   1: 10544.763 ns/op
Iteration   2: 8893.893 ns/op
Iteration   3: 8466.654 ns/op
Iteration   4: 9802.063 ns/op
Iteration   5: 11685.159 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  9878.506 ±(99.9%) 4974.835 ns/op [Average]
  (min, avg, max) = (8466.654, 9878.506, 11685.159), stdev = 1291.949
  CI (99.9%): [4903.671, 14853.341] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 29.33% complete, ETA 02:13:10
# Fork: 1 of 1
# Warmup Iteration   1: 18586.889 ns/op
# Warmup Iteration   2: 16766.912 ns/op
Iteration   1: 17673.727 ns/op
Iteration   2: 16856.073 ns/op
Iteration   3: 18413.165 ns/op
Iteration   4: 16686.931 ns/op
Iteration   5: 17239.048 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  17373.789 ±(99.9%) 2673.512 ns/op [Average]
  (min, avg, max) = (16686.931, 17373.789, 18413.165), stdev = 694.303
  CI (99.9%): [14700.276, 20047.301] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 29.67% complete, ETA 02:12:33
# Fork: 1 of 1
# Warmup Iteration   1: 202741.113 ns/op
# Warmup Iteration   2: 209234.736 ns/op
Iteration   1: 198332.083 ns/op
Iteration   2: 230936.522 ns/op
Iteration   3: 174414.254 ns/op
Iteration   4: 184648.839 ns/op
Iteration   5: 205689.931 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  198804.326 ±(99.9%) 83377.024 ns/op [Average]
  (min, avg, max) = (174414.254, 198804.326, 230936.522), stdev = 21652.748
  CI (99.9%): [115427.302, 282181.350] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 30.00% complete, ETA 02:11:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Buffer underflow.
Serialization trace:
lookupKey (com.komanov.serialization.domain.PrimaryEntryPointSet)
	at com.esotericsoftware.kryo.io.Input.require(Input.java:199)
	at com.esotericsoftware.kryo.io.Input.readAscii_slow(Input.java:616)
	at com.esotericsoftware.kryo.io.Input.readAscii(Input.java:594)
	at com.esotericsoftware.kryo.io.Input.readString(Input.java:472)
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer.read(DefaultSerializers.java:195)
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer.read(DefaultSerializers.java:184)
	at com.esotericsoftware.kryo.Kryo.readObjectOrNull(Kryo.java:759)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:132)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.siteEventFromByteArray(ChillConverter.scala:24)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:82)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at com.komanov.serialization.jmh.EventBenchmark.deserialization(Benchmarks.scala:81)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(EventBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_AverageTime(EventBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 30.33% complete, ETA 02:09:58
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Buffer underflow.
Serialization trace:
userName (com.komanov.serialization.domain.FreeEntryPointAdded)
	at com.esotericsoftware.kryo.io.Input.require(Input.java:199)
	at com.esotericsoftware.kryo.io.Input.readVarInt(Input.java:373)
	at com.esotericsoftware.kryo.Kryo.readReferenceOrNull(Kryo.java:808)
	at com.esotericsoftware.kryo.Kryo.readObjectOrNull(Kryo.java:757)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:132)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.siteEventFromByteArray(ChillConverter.scala:24)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:82)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at com.komanov.serialization.jmh.EventBenchmark.deserialization(Benchmarks.scala:81)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(EventBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_AverageTime(EventBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 30.67% complete, ETA 02:08:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Buffer underflow.
Serialization trace:
text (com.komanov.serialization.domain.ButtonComponentDataSet)
	at com.esotericsoftware.kryo.io.Input.require(Input.java:199)
	at com.esotericsoftware.kryo.io.Input.readVarInt(Input.java:373)
	at com.esotericsoftware.kryo.Kryo.readReferenceOrNull(Kryo.java:808)
	at com.esotericsoftware.kryo.Kryo.readObjectOrNull(Kryo.java:757)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:132)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.siteEventFromByteArray(ChillConverter.scala:24)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:82)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at com.komanov.serialization.jmh.EventBenchmark.deserialization(Benchmarks.scala:81)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(EventBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_AverageTime(EventBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 31.00% complete, ETA 02:06:12
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Buffer underflow.
Serialization trace:
path (com.komanov.serialization.domain.PageAdded)
	at com.esotericsoftware.kryo.io.Input.require(Input.java:199)
	at com.esotericsoftware.kryo.io.Input.readAscii_slow(Input.java:616)
	at com.esotericsoftware.kryo.io.Input.readAscii(Input.java:594)
	at com.esotericsoftware.kryo.io.Input.readString(Input.java:472)
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer.read(DefaultSerializers.java:195)
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer.read(DefaultSerializers.java:184)
	at com.esotericsoftware.kryo.Kryo.readObjectOrNull(Kryo.java:759)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:132)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.siteEventFromByteArray(ChillConverter.scala:24)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:82)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at com.komanov.serialization.jmh.EventBenchmark.deserialization(Benchmarks.scala:81)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(EventBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_AverageTime(EventBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 31.33% complete, ETA 02:04:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Buffer underflow.
Serialization trace:
value (com.komanov.serialization.domain.PageMetaTagAdded)
	at com.esotericsoftware.kryo.io.Input.require(Input.java:199)
	at com.esotericsoftware.kryo.io.Input.readAscii_slow(Input.java:616)
	at com.esotericsoftware.kryo.io.Input.readAscii(Input.java:594)
	at com.esotericsoftware.kryo.io.Input.readString(Input.java:472)
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer.read(DefaultSerializers.java:195)
	at com.esotericsoftware.kryo.serializers.DefaultSerializers$StringSerializer.read(DefaultSerializers.java:184)
	at com.esotericsoftware.kryo.Kryo.readObjectOrNull(Kryo.java:759)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:132)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.siteEventFromByteArray(ChillConverter.scala:24)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:82)
	at com.komanov.serialization.jmh.EventBenchmark$$anonfun$deserialization$2.apply(Benchmarks.scala:81)
	at scala.collection.TraversableLike$WithFilter$$anonfun$foreach$1.apply(TraversableLike.scala:733)
	at scala.collection.immutable.List.foreach(List.scala:381)
	at scala.collection.TraversableLike$WithFilter.foreach(TraversableLike.scala:732)
	at com.komanov.serialization.jmh.EventBenchmark.deserialization(Benchmarks.scala:81)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(EventBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.EventBenchmark_deserialization_jmhTest.deserialization_AverageTime(EventBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 31.67% complete, ETA 02:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 40254.202 ns/op
# Warmup Iteration   2: 31889.266 ns/op
Iteration   1: 30822.314 ns/op
Iteration   2: 35009.894 ns/op
Iteration   3: 29596.655 ns/op
Iteration   4: 30634.810 ns/op
Iteration   5: 39637.036 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  33140.142 ±(99.9%) 16098.147 ns/op [Average]
  (min, avg, max) = (29596.655, 33140.142, 39637.036), stdev = 4180.638
  CI (99.9%): [17041.995, 49238.289] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 32.00% complete, ETA 02:02:03
# Fork: 1 of 1
# Warmup Iteration   1: 94757.415 ns/op
# Warmup Iteration   2: 69321.097 ns/op
Iteration   1: 60671.900 ns/op
Iteration   2: 62395.224 ns/op
Iteration   3: 68738.718 ns/op
Iteration   4: 55092.702 ns/op
Iteration   5: 58690.001 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  61117.709 ±(99.9%) 19454.808 ns/op [Average]
  (min, avg, max) = (55092.702, 61117.709, 68738.718), stdev = 5052.352
  CI (99.9%): [41662.901, 80572.517] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 32.33% complete, ETA 02:01:31
# Fork: 1 of 1
# Warmup Iteration   1: 142437.783 ns/op
# Warmup Iteration   2: 128562.077 ns/op
Iteration   1: 128420.251 ns/op
Iteration   2: 153608.835 ns/op
Iteration   3: 187838.157 ns/op
Iteration   4: 163958.297 ns/op
Iteration   5: 132074.946 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  153180.097 ±(99.9%) 93848.572 ns/op [Average]
  (min, avg, max) = (128420.251, 153180.097, 187838.157), stdev = 24372.176
  CI (99.9%): [59331.525, 247028.670] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 32.67% complete, ETA 02:00:59
# Fork: 1 of 1
# Warmup Iteration   1: 533470.814 ns/op
# Warmup Iteration   2: 265388.956 ns/op
Iteration   1: 270169.270 ns/op
Iteration   2: 297914.307 ns/op
Iteration   3: 376622.219 ns/op
Iteration   4: 310890.965 ns/op
Iteration   5: 260445.783 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  303208.509 ±(99.9%) 176425.726 ns/op [Average]
  (min, avg, max) = (260445.783, 303208.509, 376622.219), stdev = 45817.201
  CI (99.9%): [126782.783, 479634.235] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 33.00% complete, ETA 02:00:27
# Fork: 1 of 1
# Warmup Iteration   1: 4505111.264 ns/op
# Warmup Iteration   2: 3315112.852 ns/op
Iteration   1: 2869474.153 ns/op
Iteration   2: 2918398.099 ns/op
Iteration   3: 3923073.069 ns/op
Iteration   4: 2964015.778 ns/op
Iteration   5: 2448016.198 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.deserialization":
  3024595.459 ±(99.9%) 2090296.846 ns/op [Average]
  (min, avg, max) = (2448016.198, 3024595.459, 3923073.069), stdev = 542843.453
  CI (99.9%): [934298.614, 5114892.305] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 33.33% complete, ETA 01:59:55
# Fork: 1 of 1
# Warmup Iteration   1: 11314.232 ns/op
# Warmup Iteration   2: 8780.112 ns/op
Iteration   1: 9439.901 ns/op
Iteration   2: 9674.108 ns/op
Iteration   3: 8896.799 ns/op
Iteration   4: 8374.010 ns/op
Iteration   5: 11011.702 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9479.304 ±(99.9%) 3825.886 ns/op [Average]
  (min, avg, max) = (8374.010, 9479.304, 11011.702), stdev = 993.571
  CI (99.9%): [5653.418, 13305.190] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 33.67% complete, ETA 01:59:23
# Fork: 1 of 1
# Warmup Iteration   1: 21300.135 ns/op
# Warmup Iteration   2: 16933.287 ns/op
Iteration   1: 17402.207 ns/op
Iteration   2: 19302.867 ns/op
Iteration   3: 17310.030 ns/op
Iteration   4: 18444.348 ns/op
Iteration   5: 17510.140 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17993.918 ±(99.9%) 3316.978 ns/op [Average]
  (min, avg, max) = (17310.030, 17993.918, 19302.867), stdev = 861.409
  CI (99.9%): [14676.940, 21310.897] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 34.00% complete, ETA 01:58:50
# Fork: 1 of 1
# Warmup Iteration   1: 43203.684 ns/op
# Warmup Iteration   2: 37785.880 ns/op
Iteration   1: 33674.974 ns/op
Iteration   2: 35355.049 ns/op
Iteration   3: 30301.690 ns/op
Iteration   4: 33349.378 ns/op
Iteration   5: 38713.263 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  34278.871 ±(99.9%) 11847.946 ns/op [Average]
  (min, avg, max) = (30301.690, 34278.871, 38713.263), stdev = 3076.874
  CI (99.9%): [22430.925, 46126.817] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 34.33% complete, ETA 01:58:17
# Fork: 1 of 1
# Warmup Iteration   1: 137719.993 ns/op
# Warmup Iteration   2: 73043.144 ns/op
Iteration   1: 79591.240 ns/op
Iteration   2: 123307.537 ns/op
Iteration   3: 101462.783 ns/op
Iteration   4: 101517.757 ns/op
Iteration   5: 66762.195 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  94528.303 ±(99.9%) 84347.043 ns/op [Average]
  (min, avg, max) = (66762.195, 94528.303, 123307.537), stdev = 21904.659
  CI (99.9%): [10181.260, 178875.345] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 34.67% complete, ETA 01:57:45
# Fork: 1 of 1
# Warmup Iteration   1: 614701.278 ns/op
# Warmup Iteration   2: 694423.156 ns/op
Iteration   1: 606474.206 ns/op
Iteration   2: 650713.864 ns/op
Iteration   3: 615372.584 ns/op
Iteration   4: 843603.904 ns/op
Iteration   5: 798043.955 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  702841.703 ±(99.9%) 424149.429 ns/op [Average]
  (min, avg, max) = (606474.206, 702841.703, 843603.904), stdev = 110150.260
  CI (99.9%): [278692.274, 1126991.132] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 35.00% complete, ETA 01:57:12
# Fork: 1 of 1
# Warmup Iteration   1: 2217.153 ns/op
# Warmup Iteration   2: 2305.592 ns/op
Iteration   1: 2594.403 ns/op
Iteration   2: 2084.723 ns/op
Iteration   3: 2629.188 ns/op
Iteration   4: 2270.715 ns/op
Iteration   5: 2779.139 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2471.634 ±(99.9%) 1096.797 ns/op [Average]
  (min, avg, max) = (2084.723, 2471.634, 2779.139), stdev = 284.835
  CI (99.9%): [1374.837, 3568.431] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 35.33% complete, ETA 01:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 5450.140 ns/op
# Warmup Iteration   2: 4005.901 ns/op
Iteration   1: 4433.903 ns/op
Iteration   2: 5739.697 ns/op
Iteration   3: 4365.970 ns/op
Iteration   4: 5581.532 ns/op
Iteration   5: 3791.417 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4782.504 ±(99.9%) 3240.003 ns/op [Average]
  (min, avg, max) = (3791.417, 4782.504, 5739.697), stdev = 841.418
  CI (99.9%): [1542.501, 8022.506] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 35.67% complete, ETA 01:56:05
# Fork: 1 of 1
# Warmup Iteration   1: 9393.386 ns/op
# Warmup Iteration   2: 8119.073 ns/op
Iteration   1: 10018.675 ns/op
Iteration   2: 10205.343 ns/op
Iteration   3: 8011.585 ns/op
Iteration   4: 8873.320 ns/op
Iteration   5: 10492.077 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9520.200 ±(99.9%) 4018.722 ns/op [Average]
  (min, avg, max) = (8011.585, 9520.200, 10492.077), stdev = 1043.649
  CI (99.9%): [5501.478, 13538.922] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 36.00% complete, ETA 01:55:32
# Fork: 1 of 1
# Warmup Iteration   1: 20281.664 ns/op
# Warmup Iteration   2: 17304.183 ns/op
Iteration   1: 16202.907 ns/op
Iteration   2: 17584.168 ns/op
Iteration   3: 23276.739 ns/op
Iteration   4: 19486.561 ns/op
Iteration   5: 18821.770 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  19074.429 ±(99.9%) 10253.060 ns/op [Average]
  (min, avg, max) = (16202.907, 19074.429, 23276.739), stdev = 2662.687
  CI (99.9%): [8821.368, 29327.489] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 36.33% complete, ETA 01:54:58
# Fork: 1 of 1
# Warmup Iteration   1: 207261.010 ns/op
# Warmup Iteration   2: 159428.264 ns/op
Iteration   1: 257748.638 ns/op
Iteration   2: 212527.778 ns/op
Iteration   3: 223802.900 ns/op
Iteration   4: 157395.879 ns/op
Iteration   5: 202476.655 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  210790.370 ±(99.9%) 140132.665 ns/op [Average]
  (min, avg, max) = (157395.879, 210790.370, 257748.638), stdev = 36392.008
  CI (99.9%): [70657.705, 350923.035] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 36.67% complete, ETA 01:54:25
# Fork: 1 of 1
# Warmup Iteration   1: 3774.182 ns/op
# Warmup Iteration   2: 4660.371 ns/op
Iteration   1: 3937.959 ns/op
Iteration   2: 3798.933 ns/op
Iteration   3: 3971.085 ns/op
Iteration   4: 4695.086 ns/op
Iteration   5: 4075.430 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  4095.699 ±(99.9%) 1345.186 ns/op [Average]
  (min, avg, max) = (3798.933, 4095.699, 4695.086), stdev = 349.341
  CI (99.9%): [2750.512, 5440.885] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 37.00% complete, ETA 01:53:51
# Fork: 1 of 1
# Warmup Iteration   1: 9615.189 ns/op
# Warmup Iteration   2: 8966.381 ns/op
Iteration   1: 7598.202 ns/op
Iteration   2: 8457.378 ns/op
Iteration   3: 8064.014 ns/op
Iteration   4: 8962.775 ns/op
Iteration   5: 8394.917 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  8295.457 ±(99.9%) 1945.580 ns/op [Average]
  (min, avg, max) = (7598.202, 8295.457, 8962.775), stdev = 505.261
  CI (99.9%): [6349.877, 10241.038] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 37.33% complete, ETA 01:53:17
# Fork: 1 of 1
# Warmup Iteration   1: 15988.558 ns/op
# Warmup Iteration   2: 14960.475 ns/op
Iteration   1: 16942.311 ns/op
Iteration   2: 18952.450 ns/op
Iteration   3: 13787.698 ns/op
Iteration   4: 21811.438 ns/op
Iteration   5: 15272.291 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17353.238 ±(99.9%) 12122.697 ns/op [Average]
  (min, avg, max) = (13787.698, 17353.238, 21811.438), stdev = 3148.226
  CI (99.9%): [5230.541, 29475.935] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 37.67% complete, ETA 01:52:44
# Fork: 1 of 1
# Warmup Iteration   1: 31461.203 ns/op
# Warmup Iteration   2: 31940.596 ns/op
Iteration   1: 34924.106 ns/op
Iteration   2: 29210.887 ns/op
Iteration   3: 34311.658 ns/op
Iteration   4: 33368.899 ns/op
Iteration   5: 36820.313 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  33727.173 ±(99.9%) 10868.606 ns/op [Average]
  (min, avg, max) = (29210.887, 33727.173, 36820.313), stdev = 2822.543
  CI (99.9%): [22858.566, 44595.779] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 38.00% complete, ETA 01:52:10
# Fork: 1 of 1
# Warmup Iteration   1: 441054.330 ns/op
# Warmup Iteration   2: 331604.660 ns/op
Iteration   1: 346611.559 ns/op
Iteration   2: 372780.501 ns/op
Iteration   3: 357395.586 ns/op
Iteration   4: 330847.994 ns/op
Iteration   5: 382583.249 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  358043.778 ±(99.9%) 79151.180 ns/op [Average]
  (min, avg, max) = (330847.994, 358043.778, 382583.249), stdev = 20555.310
  CI (99.9%): [278892.598, 437194.958] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 38.33% complete, ETA 01:51:36
# Fork: 1 of 1
# Warmup Iteration   1: 6794.863 ns/op
# Warmup Iteration   2: 5144.203 ns/op
Iteration   1: 5006.830 ns/op
Iteration   2: 4923.171 ns/op
Iteration   3: 4775.475 ns/op
Iteration   4: 7512.802 ns/op
Iteration   5: 5047.932 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5453.242 ±(99.9%) 4451.488 ns/op [Average]
  (min, avg, max) = (4775.475, 5453.242, 7512.802), stdev = 1156.037
  CI (99.9%): [1001.754, 9904.730] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 38.67% complete, ETA 01:51:02
# Fork: 1 of 1
# Warmup Iteration   1: 11520.129 ns/op
# Warmup Iteration   2: 9510.969 ns/op
Iteration   1: 10081.919 ns/op
Iteration   2: 11308.210 ns/op
Iteration   3: 8104.561 ns/op
Iteration   4: 8367.656 ns/op
Iteration   5: 10464.887 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9665.447 ±(99.9%) 5318.856 ns/op [Average]
  (min, avg, max) = (8104.561, 9665.447, 11308.210), stdev = 1381.290
  CI (99.9%): [4346.591, 14984.302] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 39.00% complete, ETA 01:50:28
# Fork: 1 of 1
# Warmup Iteration   1: 22286.701 ns/op
# Warmup Iteration   2: 23525.117 ns/op
Iteration   1: 21674.965 ns/op
Iteration   2: 21432.914 ns/op
Iteration   3: 17365.367 ns/op
Iteration   4: 14692.625 ns/op
Iteration   5: 17961.158 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  18625.406 ±(99.9%) 11337.777 ns/op [Average]
  (min, avg, max) = (14692.625, 18625.406, 21674.965), stdev = 2944.385
  CI (99.9%): [7287.629, 29963.182] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 39.33% complete, ETA 01:49:55
# Fork: 1 of 1
# Warmup Iteration   1: 46008.035 ns/op
# Warmup Iteration   2: 50582.205 ns/op
Iteration   1: 39821.426 ns/op
Iteration   2: 42173.638 ns/op
Iteration   3: 41717.987 ns/op
Iteration   4: 38053.634 ns/op
Iteration   5: 39020.280 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  40157.393 ±(99.9%) 6761.252 ns/op [Average]
  (min, avg, max) = (38053.634, 40157.393, 42173.638), stdev = 1755.876
  CI (99.9%): [33396.141, 46918.645] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 39.67% complete, ETA 01:49:21
# Fork: 1 of 1
# Warmup Iteration   1: 476724.952 ns/op
# Warmup Iteration   2: 495320.634 ns/op
Iteration   1: 568624.022 ns/op
Iteration   2: 588839.450 ns/op
Iteration   3: 500805.462 ns/op
Iteration   4: 517261.718 ns/op
Iteration   5: 609907.791 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  557087.689 ±(99.9%) 179427.422 ns/op [Average]
  (min, avg, max) = (500805.462, 557087.689, 609907.791), stdev = 46596.732
  CI (99.9%): [377660.267, 736515.110] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 40.00% complete, ETA 01:48:47
# Fork: 1 of 1
# Warmup Iteration   1: 5854.926 ns/op
# Warmup Iteration   2: 6296.123 ns/op
Iteration   1: 5462.650 ns/op
Iteration   2: 6560.368 ns/op
Iteration   3: 5404.736 ns/op
Iteration   4: 5452.559 ns/op
Iteration   5: 5670.923 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  5710.247 ±(99.9%) 1871.920 ns/op [Average]
  (min, avg, max) = (5404.736, 5710.247, 6560.368), stdev = 486.132
  CI (99.9%): [3838.327, 7582.167] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 40.33% complete, ETA 01:48:12
# Fork: 1 of 1
# Warmup Iteration   1: 13198.065 ns/op
# Warmup Iteration   2: 11269.322 ns/op
Iteration   1: 11468.930 ns/op
Iteration   2: 12022.658 ns/op
Iteration   3: 12079.831 ns/op
Iteration   4: 13155.764 ns/op
Iteration   5: 11719.131 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  12089.263 ±(99.9%) 2483.411 ns/op [Average]
  (min, avg, max) = (11468.930, 12089.263, 13155.764), stdev = 644.934
  CI (99.9%): [9605.852, 14572.674] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 40.67% complete, ETA 01:47:38
# Fork: 1 of 1
# Warmup Iteration   1: 26136.113 ns/op
# Warmup Iteration   2: 24404.408 ns/op
Iteration   1: 23379.267 ns/op
Iteration   2: 25044.362 ns/op
Iteration   3: 24550.301 ns/op
Iteration   4: 23162.543 ns/op
Iteration   5: 21234.768 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  23474.248 ±(99.9%) 5693.421 ns/op [Average]
  (min, avg, max) = (21234.768, 23474.248, 25044.362), stdev = 1478.563
  CI (99.9%): [17780.827, 29167.669] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 41.00% complete, ETA 01:47:04
# Fork: 1 of 1
# Warmup Iteration   1: 63048.611 ns/op
# Warmup Iteration   2: 50475.193 ns/op
Iteration   1: 48517.547 ns/op
Iteration   2: 50231.637 ns/op
Iteration   3: 46198.112 ns/op
Iteration   4: 52587.346 ns/op
Iteration   5: 65420.938 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  52591.116 ±(99.9%) 29048.505 ns/op [Average]
  (min, avg, max) = (46198.112, 52591.116, 65420.938), stdev = 7543.805
  CI (99.9%): [23542.610, 81639.621] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 41.33% complete, ETA 01:46:30
# Fork: 1 of 1
# Warmup Iteration   1: 780254.314 ns/op
# Warmup Iteration   2: 576763.219 ns/op
Iteration   1: 610184.674 ns/op
Iteration   2: 700790.588 ns/op
Iteration   3: 459552.882 ns/op
Iteration   4: 467191.184 ns/op
Iteration   5: 520539.001 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  551651.666 ±(99.9%) 395756.887 ns/op [Average]
  (min, avg, max) = (459552.882, 551651.666, 700790.588), stdev = 102776.807
  CI (99.9%): [155894.778, 947408.553] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 41.67% complete, ETA 01:45:56
# Fork: 1 of 1
# Warmup Iteration   1: 26047.508 ns/op
# Warmup Iteration   2: 22422.875 ns/op
Iteration   1: 23656.000 ns/op
Iteration   2: 23163.280 ns/op
Iteration   3: 27876.913 ns/op
Iteration   4: 24089.477 ns/op
Iteration   5: 26070.700 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  24971.274 ±(99.9%) 7562.333 ns/op [Average]
  (min, avg, max) = (23163.280, 24971.274, 27876.913), stdev = 1963.914
  CI (99.9%): [17408.941, 32533.607] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 42.00% complete, ETA 01:45:21
# Fork: 1 of 1
# Warmup Iteration   1: 64060.656 ns/op
# Warmup Iteration   2: 38917.856 ns/op
Iteration   1: 41042.668 ns/op
Iteration   2: 38785.474 ns/op
Iteration   3: 35580.844 ns/op
Iteration   4: 49547.656 ns/op
Iteration   5: 37356.752 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  40462.679 ±(99.9%) 21017.365 ns/op [Average]
  (min, avg, max) = (35580.844, 40462.679, 49547.656), stdev = 5458.143
  CI (99.9%): [19445.314, 61480.044] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 42.33% complete, ETA 01:44:47
# Fork: 1 of 1
# Warmup Iteration   1: 121479.304 ns/op
# Warmup Iteration   2: 85871.572 ns/op
Iteration   1: 95721.989 ns/op
Iteration   2: 97534.379 ns/op
Iteration   3: 88382.324 ns/op
Iteration   4: 98819.528 ns/op
Iteration   5: 98990.682 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  95889.780 ±(99.9%) 16926.828 ns/op [Average]
  (min, avg, max) = (88382.324, 95889.780, 98990.682), stdev = 4395.844
  CI (99.9%): [78962.952, 112816.609] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 42.67% complete, ETA 01:44:12
# Fork: 1 of 1
# Warmup Iteration   1: 227840.130 ns/op
# Warmup Iteration   2: 218160.240 ns/op
Iteration   1: 214275.449 ns/op
Iteration   2: 279144.799 ns/op
Iteration   3: 177437.196 ns/op
Iteration   4: 202164.876 ns/op
Iteration   5: 243492.682 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  223303.000 ±(99.9%) 151084.650 ns/op [Average]
  (min, avg, max) = (177437.196, 223303.000, 279144.799), stdev = 39236.204
  CI (99.9%): [72218.350, 374387.650] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 43.00% complete, ETA 01:43:38
# Fork: 1 of 1
# Warmup Iteration   1: 2473685.162 ns/op
# Warmup Iteration   2: 2448624.162 ns/op
Iteration   1: 2023123.404 ns/op
Iteration   2: 2056035.891 ns/op
Iteration   3: 2100444.328 ns/op
Iteration   4: 1815431.927 ns/op
Iteration   5: 1999817.719 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  1998970.654 ±(99.9%) 421042.360 ns/op [Average]
  (min, avg, max) = (1815431.927, 1998970.654, 2100444.328), stdev = 109343.364
  CI (99.9%): [1577928.293, 2420013.014] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 43.33% complete, ETA 01:43:03
# Fork: 1 of 1
# Warmup Iteration   1: 94012.902 ns/op
# Warmup Iteration   2: 87412.680 ns/op
Iteration   1: 81997.145 ns/op
Iteration   2: 85251.730 ns/op
Iteration   3: 88613.589 ns/op
Iteration   4: 88488.806 ns/op
Iteration   5: 76674.209 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  84205.096 ±(99.9%) 19298.385 ns/op [Average]
  (min, avg, max) = (76674.209, 84205.096, 88613.589), stdev = 5011.729
  CI (99.9%): [64906.710, 103503.481] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 43.67% complete, ETA 01:42:28
# Fork: 1 of 1
# Warmup Iteration   1: 130059.636 ns/op
# Warmup Iteration   2: 116050.084 ns/op
Iteration   1: 121286.110 ns/op
Iteration   2: 124275.507 ns/op
Iteration   3: 179017.532 ns/op
Iteration   4: 129055.612 ns/op
Iteration   5: 179206.653 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  146568.283 ±(99.9%) 114892.960 ns/op [Average]
  (min, avg, max) = (121286.110, 146568.283, 179206.653), stdev = 29837.337
  CI (99.9%): [31675.322, 261461.243] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 44.00% complete, ETA 01:41:53
# Fork: 1 of 1
# Warmup Iteration   1: 319304.144 ns/op
# Warmup Iteration   2: 309545.196 ns/op
Iteration   1: 332031.278 ns/op
Iteration   2: 312905.808 ns/op
Iteration   3: 294748.938 ns/op
Iteration   4: 280083.517 ns/op
Iteration   5: 325630.572 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  309080.023 ±(99.9%) 83068.099 ns/op [Average]
  (min, avg, max) = (280083.517, 309080.023, 332031.278), stdev = 21572.522
  CI (99.9%): [226011.923, 392148.122] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 44.33% complete, ETA 01:41:18
# Fork: 1 of 1
# Warmup Iteration   1: 778582.330 ns/op
# Warmup Iteration   2: 878342.786 ns/op
Iteration   1: 660548.688 ns/op
Iteration   2: 732173.906 ns/op
Iteration   3: 706926.754 ns/op
Iteration   4: 672873.417 ns/op
Iteration   5: 842296.004 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  722963.754 ±(99.9%) 278918.492 ns/op [Average]
  (min, avg, max) = (660548.688, 722963.754, 842296.004), stdev = 72434.247
  CI (99.9%): [444045.261, 1001882.246] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 44.67% complete, ETA 01:40:43
# Fork: 1 of 1
# Warmup Iteration   1: 9934957.214 ns/op
# Warmup Iteration   2: 6864188.572 ns/op
Iteration   1: 6842582.759 ns/op
Iteration   2: 6355372.071 ns/op
Iteration   3: 6595909.652 ns/op
Iteration   4: 6369084.047 ns/op
Iteration   5: 6151079.105 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6462805.527 ±(99.9%) 1017777.128 ns/op [Average]
  (min, avg, max) = (6151079.105, 6462805.527, 6842582.759), stdev = 264313.488
  CI (99.9%): [5445028.399, 7480582.654] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 45.00% complete, ETA 01:40:09
# Fork: 1 of 1
# Warmup Iteration   1: 4576.510 ns/op
# Warmup Iteration   2: 3503.612 ns/op
Iteration   1: 3704.642 ns/op
Iteration   2: 3720.176 ns/op
Iteration   3: 4108.204 ns/op
Iteration   4: 3943.687 ns/op
Iteration   5: 4096.010 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  3914.544 ±(99.9%) 753.392 ns/op [Average]
  (min, avg, max) = (3704.642, 3914.544, 4108.204), stdev = 195.653
  CI (99.9%): [3161.152, 4667.935] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 45.33% complete, ETA 01:39:34
# Fork: 1 of 1
# Warmup Iteration   1: 7307.604 ns/op
# Warmup Iteration   2: 6438.056 ns/op
Iteration   1: 7663.207 ns/op
Iteration   2: 6597.780 ns/op
Iteration   3: 7566.661 ns/op
Iteration   4: 6557.013 ns/op
Iteration   5: 6462.199 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  6969.372 ±(99.9%) 2280.922 ns/op [Average]
  (min, avg, max) = (6462.199, 6969.372, 7663.207), stdev = 592.348
  CI (99.9%): [4688.450, 9250.294] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 45.67% complete, ETA 01:38:59
# Fork: 1 of 1
# Warmup Iteration   1: 13400.143 ns/op
# Warmup Iteration   2: 15713.287 ns/op
Iteration   1: 13851.533 ns/op
Iteration   2: 15217.304 ns/op
Iteration   3: 15858.920 ns/op
Iteration   4: 13320.824 ns/op
Iteration   5: 13382.468 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  14326.210 ±(99.9%) 4419.869 ns/op [Average]
  (min, avg, max) = (13320.824, 14326.210, 15858.920), stdev = 1147.826
  CI (99.9%): [9906.341, 18746.079] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 46.00% complete, ETA 01:38:24
# Fork: 1 of 1
# Warmup Iteration   1: 28488.711 ns/op
# Warmup Iteration   2: 28188.634 ns/op
Iteration   1: 25872.781 ns/op
Iteration   2: 29392.000 ns/op
Iteration   3: 28642.062 ns/op
Iteration   4: 25997.875 ns/op
Iteration   5: 25627.834 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  27106.511 ±(99.9%) 6812.219 ns/op [Average]
  (min, avg, max) = (25627.834, 27106.511, 29392.000), stdev = 1769.112
  CI (99.9%): [20294.292, 33918.730] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 46.33% complete, ETA 01:37:48
# Fork: 1 of 1
# Warmup Iteration   1: 243286.289 ns/op
# Warmup Iteration   2: 249783.934 ns/op
Iteration   1: 257026.154 ns/op
Iteration   2: 219879.453 ns/op
Iteration   3: 288458.722 ns/op
Iteration   4: 248041.722 ns/op
Iteration   5: 228736.578 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  248428.526 ±(99.9%) 103311.201 ns/op [Average]
  (min, avg, max) = (219879.453, 248428.526, 288458.722), stdev = 26829.591
  CI (99.9%): [145117.324, 351739.727] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 46.67% complete, ETA 01:37:13
# Fork: 1 of 1
# Warmup Iteration   1: 9545.229 ns/op
# Warmup Iteration   2: 8585.183 ns/op
Iteration   1: 8337.295 ns/op
Iteration   2: 9617.267 ns/op
Iteration   3: 7538.579 ns/op
Iteration   4: 10599.079 ns/op
Iteration   5: 10594.060 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  9337.256 ±(99.9%) 5267.549 ns/op [Average]
  (min, avg, max) = (7538.579, 9337.256, 10599.079), stdev = 1367.966
  CI (99.9%): [4069.707, 14604.805] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 47.00% complete, ETA 01:36:39
# Fork: 1 of 1
# Warmup Iteration   1: 19600.805 ns/op
# Warmup Iteration   2: 16534.556 ns/op
Iteration   1: 17246.930 ns/op
Iteration   2: 18291.794 ns/op
Iteration   3: 16979.041 ns/op
Iteration   4: 18157.975 ns/op
Iteration   5: 15763.093 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  17287.767 ±(99.9%) 3939.598 ns/op [Average]
  (min, avg, max) = (15763.093, 17287.767, 18291.794), stdev = 1023.101
  CI (99.9%): [13348.169, 21227.364] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 47.33% complete, ETA 01:36:04
# Fork: 1 of 1
# Warmup Iteration   1: 34038.441 ns/op
# Warmup Iteration   2: 33180.547 ns/op
Iteration   1: 33478.276 ns/op
Iteration   2: 35144.774 ns/op
Iteration   3: 35329.660 ns/op
Iteration   4: 36259.022 ns/op
Iteration   5: 36227.887 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  35287.924 ±(99.9%) 4358.046 ns/op [Average]
  (min, avg, max) = (33478.276, 35287.924, 36259.022), stdev = 1131.771
  CI (99.9%): [30929.878, 39645.970] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 47.67% complete, ETA 01:35:28
# Fork: 1 of 1
# Warmup Iteration   1: 82738.906 ns/op
# Warmup Iteration   2: 71543.325 ns/op
Iteration   1: 71524.055 ns/op
Iteration   2: 74784.649 ns/op
Iteration   3: 74737.323 ns/op
Iteration   4: 74738.787 ns/op
Iteration   5: 74746.267 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  74106.216 ±(99.9%) 5558.793 ns/op [Average]
  (min, avg, max) = (71524.055, 74106.216, 74784.649), stdev = 1443.601
  CI (99.9%): [68547.423, 79665.009] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 48.00% complete, ETA 01:34:53
# Fork: 1 of 1
# Warmup Iteration   1: 812152.745 ns/op
# Warmup Iteration   2: 715119.309 ns/op
Iteration   1: 626412.171 ns/op
Iteration   2: 625353.327 ns/op
Iteration   3: 646820.413 ns/op
Iteration   4: 648992.487 ns/op
Iteration   5: 633624.753 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  636240.630 ±(99.9%) 42901.273 ns/op [Average]
  (min, avg, max) = (625353.327, 636240.630, 648992.487), stdev = 11141.324
  CI (99.9%): [593339.357, 679141.904] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 48.33% complete, ETA 01:34:18
# Fork: 1 of 1
# Warmup Iteration   1: 37812.373 ns/op
# Warmup Iteration   2: 33947.392 ns/op
Iteration   1: 32254.331 ns/op
Iteration   2: 28104.695 ns/op
Iteration   3: 34443.918 ns/op
Iteration   4: 29110.131 ns/op
Iteration   5: 34538.828 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  31690.381 ±(99.9%) 11476.033 ns/op [Average]
  (min, avg, max) = (28104.695, 31690.381, 34538.828), stdev = 2980.289
  CI (99.9%): [20214.348, 43166.413] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 48.67% complete, ETA 01:33:43
# Fork: 1 of 1
# Warmup Iteration   1: 74023.562 ns/op
# Warmup Iteration   2: 46698.967 ns/op
Iteration   1: 53018.524 ns/op
Iteration   2: 55827.416 ns/op
Iteration   3: 64056.200 ns/op
Iteration   4: 53206.820 ns/op
Iteration   5: 52353.504 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  55692.493 ±(99.9%) 18711.051 ns/op [Average]
  (min, avg, max) = (52353.504, 55692.493, 64056.200), stdev = 4859.201
  CI (99.9%): [36981.442, 74403.544] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 49.00% complete, ETA 01:33:08
# Fork: 1 of 1
# Warmup Iteration   1: 159493.226 ns/op
# Warmup Iteration   2: 118579.311 ns/op
Iteration   1: 148940.487 ns/op
Iteration   2: 115198.346 ns/op
Iteration   3: 110225.535 ns/op
Iteration   4: 122497.416 ns/op
Iteration   5: 104481.958 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  120268.748 ±(99.9%) 66773.803 ns/op [Average]
  (min, avg, max) = (104481.958, 120268.748, 148940.487), stdev = 17340.945
  CI (99.9%): [53494.945, 187042.551] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 49.33% complete, ETA 01:32:32
# Fork: 1 of 1
# Warmup Iteration   1: 276008.298 ns/op
# Warmup Iteration   2: 262579.377 ns/op
Iteration   1: 309324.062 ns/op
Iteration   2: 281388.239 ns/op
Iteration   3: 247796.759 ns/op
Iteration   4: 281686.468 ns/op
Iteration   5: 375351.323 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  299109.370 ±(99.9%) 184346.490 ns/op [Average]
  (min, avg, max) = (247796.759, 299109.370, 375351.323), stdev = 47874.198
  CI (99.9%): [114762.880, 483455.860] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.EventBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 49.67% complete, ETA 01:31:57
# Fork: 1 of 1
# Warmup Iteration   1: 3733303.832 ns/op
# Warmup Iteration   2: 3899635.151 ns/op
Iteration   1: 3126818.722 ns/op
Iteration   2: 2823633.611 ns/op
Iteration   3: 2660096.198 ns/op
Iteration   4: 2987070.526 ns/op
Iteration   5: 2228924.336 ns/op


Result "com.komanov.serialization.jmh.EventBenchmark.serialization":
  2765308.679 ±(99.9%) 1336744.059 ns/op [Average]
  (min, avg, max) = (2228924.336, 2765308.679, 3126818.722), stdev = 347148.187
  CI (99.9%): [1428564.620, 4102052.738] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 50.00% complete, ETA 01:31:22
# Fork: 1 of 1
# Warmup Iteration   1: 13902.600 ns/op
# Warmup Iteration   2: 12164.598 ns/op
Iteration   1: 12529.867 ns/op
Iteration   2: 14373.692 ns/op
Iteration   3: 13076.288 ns/op
Iteration   4: 15383.267 ns/op
Iteration   5: 13438.973 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  13760.417 ±(99.9%) 4346.011 ns/op [Average]
  (min, avg, max) = (12529.867, 13760.417, 15383.267), stdev = 1128.645
  CI (99.9%): [9414.406, 18106.428] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 50.33% complete, ETA 01:30:47
# Fork: 1 of 1
# Warmup Iteration   1: 36789.066 ns/op
# Warmup Iteration   2: 23742.981 ns/op
Iteration   1: 27327.949 ns/op
Iteration   2: 28083.906 ns/op
Iteration   3: 30282.497 ns/op
Iteration   4: 35261.142 ns/op
Iteration   5: 31230.820 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30437.263 ±(99.9%) 12043.595 ns/op [Average]
  (min, avg, max) = (27327.949, 30437.263, 35261.142), stdev = 3127.683
  CI (99.9%): [18393.668, 42480.858] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 50.67% complete, ETA 01:30:11
# Fork: 1 of 1
# Warmup Iteration   1: 69927.002 ns/op
# Warmup Iteration   2: 73038.037 ns/op
Iteration   1: 44465.285 ns/op
Iteration   2: 55454.198 ns/op
Iteration   3: 53175.494 ns/op
Iteration   4: 60608.743 ns/op
Iteration   5: 55113.974 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  53763.539 ±(99.9%) 22645.433 ns/op [Average]
  (min, avg, max) = (44465.285, 53763.539, 60608.743), stdev = 5880.947
  CI (99.9%): [31118.106, 76408.972] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 51.00% complete, ETA 01:29:36
# Fork: 1 of 1
# Warmup Iteration   1: 127604.828 ns/op
# Warmup Iteration   2: 93411.238 ns/op
Iteration   1: 98008.247 ns/op
Iteration   2: 84647.417 ns/op
Iteration   3: 89865.872 ns/op
Iteration   4: 105758.306 ns/op
Iteration   5: 97820.173 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  95220.003 ±(99.9%) 31403.253 ns/op [Average]
  (min, avg, max) = (84647.417, 95220.003, 105758.306), stdev = 8155.325
  CI (99.9%): [63816.750, 126623.256] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 51.33% complete, ETA 01:29:00
# Fork: 1 of 1
# Warmup Iteration   1: 1247069.393 ns/op
# Warmup Iteration   2: 623641.288 ns/op
Iteration   1: 900753.587 ns/op
Iteration   2: 608748.287 ns/op
Iteration   3: 616753.766 ns/op
Iteration   4: 752722.594 ns/op
Iteration   5: 804364.920 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  736668.631 ±(99.9%) 481359.675 ns/op [Average]
  (min, avg, max) = (608748.287, 736668.631, 900753.587), stdev = 125007.579
  CI (99.9%): [255308.956, 1218028.305] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 51.67% complete, ETA 01:28:24
# Fork: 1 of 1
# Warmup Iteration   1: 8389.403 ns/op
# Warmup Iteration   2: 6436.807 ns/op
Iteration   1: 6668.867 ns/op
Iteration   2: 6064.176 ns/op
Iteration   3: 5583.733 ns/op
Iteration   4: 6371.410 ns/op
Iteration   5: 5577.854 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  6053.208 ±(99.9%) 1853.493 ns/op [Average]
  (min, avg, max) = (5577.854, 6053.208, 6668.867), stdev = 481.346
  CI (99.9%): [4199.714, 7906.701] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 52.00% complete, ETA 01:27:49
# Fork: 1 of 1
# Warmup Iteration   1: 17203.256 ns/op
# Warmup Iteration   2: 11279.757 ns/op
Iteration   1: 10241.379 ns/op
Iteration   2: 10568.831 ns/op
Iteration   3: 10754.264 ns/op
Iteration   4: 12149.371 ns/op
Iteration   5: 11409.381 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  11024.645 ±(99.9%) 2924.594 ns/op [Average]
  (min, avg, max) = (10241.379, 11024.645, 12149.371), stdev = 759.508
  CI (99.9%): [8100.051, 13949.239] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 52.33% complete, ETA 01:27:13
# Fork: 1 of 1
# Warmup Iteration   1: 27979.562 ns/op
# Warmup Iteration   2: 24424.657 ns/op
Iteration   1: 21602.656 ns/op
Iteration   2: 25681.065 ns/op
Iteration   3: 21518.323 ns/op
Iteration   4: 19277.986 ns/op
Iteration   5: 21427.839 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  21901.574 ±(99.9%) 8953.973 ns/op [Average]
  (min, avg, max) = (19277.986, 21901.574, 25681.065), stdev = 2325.318
  CI (99.9%): [12947.601, 30855.547] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 52.67% complete, ETA 01:26:37
# Fork: 1 of 1
# Warmup Iteration   1: 55197.173 ns/op
# Warmup Iteration   2: 54486.116 ns/op
Iteration   1: 37338.555 ns/op
Iteration   2: 55897.477 ns/op
Iteration   3: 38954.553 ns/op
Iteration   4: 46152.209 ns/op
Iteration   5: 40993.810 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  43867.321 ±(99.9%) 28877.423 ns/op [Average]
  (min, avg, max) = (37338.555, 43867.321, 55897.477), stdev = 7499.375
  CI (99.9%): [14989.898, 72744.744] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 53.00% complete, ETA 01:26:02
# Fork: 1 of 1
# Warmup Iteration   1: 569915.494 ns/op
# Warmup Iteration   2: 396009.297 ns/op
Iteration   1: 323308.132 ns/op
Iteration   2: 266776.572 ns/op
Iteration   3: 317921.072 ns/op
Iteration   4: 275032.208 ns/op
Iteration   5: 388693.990 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  314346.395 ±(99.9%) 186956.092 ns/op [Average]
  (min, avg, max) = (266776.572, 314346.395, 388693.990), stdev = 48551.903
  CI (99.9%): [127390.303, 501302.487] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 53.33% complete, ETA 01:25:26
# Fork: 1 of 1
# Warmup Iteration   1: 12584.870 ns/op
# Warmup Iteration   2: 8498.468 ns/op
Iteration   1: 8200.318 ns/op
Iteration   2: 12291.343 ns/op
Iteration   3: 9602.854 ns/op
Iteration   4: 9294.371 ns/op
Iteration   5: 10891.095 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10055.996 ±(99.9%) 6064.954 ns/op [Average]
  (min, avg, max) = (8200.318, 10055.996, 12291.343), stdev = 1575.049
  CI (99.9%): [3991.043, 16120.950] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 53.67% complete, ETA 01:24:50
# Fork: 1 of 1
# Warmup Iteration   1: 29437.168 ns/op
# Warmup Iteration   2: 22259.233 ns/op
Iteration   1: 14041.007 ns/op
Iteration   2: 17184.273 ns/op
Iteration   3: 15852.580 ns/op
Iteration   4: 17059.939 ns/op
Iteration   5: 17831.409 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  16393.842 ±(99.9%) 5764.357 ns/op [Average]
  (min, avg, max) = (14041.007, 16393.842, 17831.409), stdev = 1496.985
  CI (99.9%): [10629.484, 22158.199] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 54.00% complete, ETA 01:24:15
# Fork: 1 of 1
# Warmup Iteration   1: 43781.802 ns/op
# Warmup Iteration   2: 22930.072 ns/op
Iteration   1: 25873.860 ns/op
Iteration   2: 23681.116 ns/op
Iteration   3: 25741.210 ns/op
Iteration   4: 23578.374 ns/op
Iteration   5: 25186.627 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  24812.237 ±(99.9%) 4275.799 ns/op [Average]
  (min, avg, max) = (23578.374, 24812.237, 25873.860), stdev = 1110.411
  CI (99.9%): [20536.438, 29088.036] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 54.33% complete, ETA 01:23:39
# Fork: 1 of 1
# Warmup Iteration   1: 88769.962 ns/op
# Warmup Iteration   2: 56644.858 ns/op
Iteration   1: 61598.365 ns/op
Iteration   2: 58525.406 ns/op
Iteration   3: 54917.524 ns/op
Iteration   4: 61034.005 ns/op
Iteration   5: 54976.594 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  58210.379 ±(99.9%) 12305.625 ns/op [Average]
  (min, avg, max) = (54917.524, 58210.379, 61598.365), stdev = 3195.732
  CI (99.9%): [45904.754, 70516.004] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 54.67% complete, ETA 01:23:03
# Fork: 1 of 1
# Warmup Iteration   1: 819787.352 ns/op
# Warmup Iteration   2: 475157.778 ns/op
Iteration   1: 545338.569 ns/op
Iteration   2: 506420.081 ns/op
Iteration   3: 488840.711 ns/op
Iteration   4: 663239.700 ns/op
Iteration   5: 526473.314 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  546062.475 ±(99.9%) 265112.087 ns/op [Average]
  (min, avg, max) = (488840.711, 546062.475, 663239.700), stdev = 68848.767
  CI (99.9%): [280950.388, 811174.562] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 55.00% complete, ETA 01:22:28
# Fork: 1 of 1
# Warmup Iteration   1: 12920.291 ns/op
# Warmup Iteration   2: 8691.421 ns/op
Iteration   1: 9972.837 ns/op
Iteration   2: 10118.791 ns/op
Iteration   3: 9089.701 ns/op
Iteration   4: 8957.929 ns/op
Iteration   5: 8836.405 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  9395.133 ±(99.9%) 2321.620 ns/op [Average]
  (min, avg, max) = (8836.405, 9395.133, 10118.791), stdev = 602.917
  CI (99.9%): [7073.513, 11716.753] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 55.33% complete, ETA 01:21:52
# Fork: 1 of 1
# Warmup Iteration   1: 21916.123 ns/op
# Warmup Iteration   2: 17480.587 ns/op
Iteration   1: 13812.968 ns/op
Iteration   2: 16293.726 ns/op
Iteration   3: 13470.655 ns/op
Iteration   4: 16961.737 ns/op
Iteration   5: 13669.619 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14841.741 ±(99.9%) 6360.784 ns/op [Average]
  (min, avg, max) = (13470.655, 14841.741, 16961.737), stdev = 1651.875
  CI (99.9%): [8480.957, 21202.525] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 55.67% complete, ETA 01:21:16
# Fork: 1 of 1
# Warmup Iteration   1: 45115.727 ns/op
# Warmup Iteration   2: 25531.512 ns/op
Iteration   1: 31687.389 ns/op
Iteration   2: 27728.037 ns/op
Iteration   3: 28692.781 ns/op
Iteration   4: 23778.339 ns/op
Iteration   5: 27239.552 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27825.220 ±(99.9%) 10958.907 ns/op [Average]
  (min, avg, max) = (23778.339, 27825.220, 31687.389), stdev = 2845.993
  CI (99.9%): [16866.313, 38784.127] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 56.00% complete, ETA 01:20:40
# Fork: 1 of 1
# Warmup Iteration   1: 90642.617 ns/op
# Warmup Iteration   2: 63169.694 ns/op
Iteration   1: 76445.392 ns/op
Iteration   2: 70978.045 ns/op
Iteration   3: 93328.488 ns/op
Iteration   4: 83967.098 ns/op
Iteration   5: 73195.774 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  79582.959 ±(99.9%) 35125.664 ns/op [Average]
  (min, avg, max) = (70978.045, 79582.959, 93328.488), stdev = 9122.023
  CI (99.9%): [44457.295, 114708.624] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 56.33% complete, ETA 01:20:04
# Fork: 1 of 1
# Warmup Iteration   1: 766321.952 ns/op
# Warmup Iteration   2: 421926.211 ns/op
Iteration   1: 407216.008 ns/op
Iteration   2: 651925.882 ns/op
Iteration   3: 467920.302 ns/op
Iteration   4: 533128.905 ns/op
Iteration   5: 525261.883 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  517090.596 ±(99.9%) 349723.987 ns/op [Average]
  (min, avg, max) = (407216.008, 517090.596, 651925.882), stdev = 90822.209
  CI (99.9%): [167366.609, 866814.583] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 56.67% complete, ETA 01:19:28
# Fork: 1 of 1
# Warmup Iteration   1: 14350.117 ns/op
# Warmup Iteration   2: 9440.337 ns/op
Iteration   1: 10374.725 ns/op
Iteration   2: 7289.235 ns/op
Iteration   3: 8878.536 ns/op
Iteration   4: 7659.982 ns/op
Iteration   5: 8789.408 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  8598.377 ±(99.9%) 4662.632 ns/op [Average]
  (min, avg, max) = (7289.235, 8598.377, 10374.725), stdev = 1210.871
  CI (99.9%): [3935.745, 13261.009] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 57.00% complete, ETA 01:18:52
# Fork: 1 of 1
# Warmup Iteration   1: 25190.242 ns/op
# Warmup Iteration   2: 16958.603 ns/op
Iteration   1: 16523.898 ns/op
Iteration   2: 14986.022 ns/op
Iteration   3: 16580.454 ns/op
Iteration   4: 15538.852 ns/op
Iteration   5: 15511.832 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  15828.212 ±(99.9%) 2683.706 ns/op [Average]
  (min, avg, max) = (14986.022, 15828.212, 16580.454), stdev = 696.950
  CI (99.9%): [13144.506, 18511.918] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 57.33% complete, ETA 01:18:16
# Fork: 1 of 1
# Warmup Iteration   1: 44464.852 ns/op
# Warmup Iteration   2: 27442.053 ns/op
Iteration   1: 28060.998 ns/op
Iteration   2: 31584.819 ns/op
Iteration   3: 26140.328 ns/op
Iteration   4: 32350.328 ns/op
Iteration   5: 30788.162 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  29784.927 ±(99.9%) 10019.521 ns/op [Average]
  (min, avg, max) = (26140.328, 29784.927, 32350.328), stdev = 2602.038
  CI (99.9%): [19765.406, 39804.448] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 57.67% complete, ETA 01:17:40
# Fork: 1 of 1
# Warmup Iteration   1: 88000.677 ns/op
# Warmup Iteration   2: 54566.779 ns/op
Iteration   1: 59406.359 ns/op
Iteration   2: 55747.451 ns/op
Iteration   3: 53438.212 ns/op
Iteration   4: 67199.274 ns/op
Iteration   5: 57413.143 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  58640.888 ±(99.9%) 20264.331 ns/op [Average]
  (min, avg, max) = (53438.212, 58640.888, 67199.274), stdev = 5262.582
  CI (99.9%): [38376.557, 78905.218] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 58.00% complete, ETA 01:17:04
# Fork: 1 of 1
# Warmup Iteration   1: 720141.890 ns/op
# Warmup Iteration   2: 490528.543 ns/op
Iteration   1: 596085.337 ns/op
Iteration   2: 571583.576 ns/op
Iteration   3: 572668.742 ns/op
Iteration   4: 576377.311 ns/op
Iteration   5: 627445.143 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  588832.022 ±(99.9%) 91477.395 ns/op [Average]
  (min, avg, max) = (571583.576, 588832.022, 627445.143), stdev = 23756.389
  CI (99.9%): [497354.626, 680309.417] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 58.33% complete, ETA 01:16:28
# Fork: 1 of 1
# Warmup Iteration   1: 133431.138 ns/op
# Warmup Iteration   2: 80624.327 ns/op
Iteration   1: 97014.255 ns/op
Iteration   2: 105384.195 ns/op
Iteration   3: 77757.207 ns/op
Iteration   4: 96509.204 ns/op
Iteration   5: 109626.269 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  97258.226 ±(99.9%) 47157.033 ns/op [Average]
  (min, avg, max) = (77757.207, 97258.226, 109626.269), stdev = 12246.532
  CI (99.9%): [50101.193, 144415.259] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 58.67% complete, ETA 01:15:52
# Fork: 1 of 1
# Warmup Iteration   1: 229764.239 ns/op
# Warmup Iteration   2: 177434.973 ns/op
Iteration   1: 125100.693 ns/op
Iteration   2: 130063.809 ns/op
Iteration   3: 144826.760 ns/op
Iteration   4: 142433.973 ns/op
Iteration   5: 177416.384 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  143968.324 ±(99.9%) 78707.457 ns/op [Average]
  (min, avg, max) = (125100.693, 143968.324, 177416.384), stdev = 20440.077
  CI (99.9%): [65260.867, 222675.781] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 59.00% complete, ETA 01:15:16
# Fork: 1 of 1
# Warmup Iteration   1: 295495.772 ns/op
# Warmup Iteration   2: 169680.956 ns/op
Iteration   1: 169964.944 ns/op
Iteration   2: 225713.483 ns/op
Iteration   3: 166756.208 ns/op
Iteration   4: 198635.279 ns/op
Iteration   5: 215160.334 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  195246.050 ±(99.9%) 101644.155 ns/op [Average]
  (min, avg, max) = (166756.208, 195246.050, 225713.483), stdev = 26396.664
  CI (99.9%): [93601.895, 296890.204] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 59.33% complete, ETA 01:14:40
# Fork: 1 of 1
# Warmup Iteration   1: 472477.502 ns/op
# Warmup Iteration   2: 319663.329 ns/op
Iteration   1: 266536.174 ns/op
Iteration   2: 292191.662 ns/op
Iteration   3: 336785.517 ns/op
Iteration   4: 273808.823 ns/op
Iteration   5: 280512.167 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  289966.869 ±(99.9%) 107135.247 ns/op [Average]
  (min, avg, max) = (266536.174, 289966.869, 336785.517), stdev = 27822.683
  CI (99.9%): [182831.622, 397102.115] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 59.67% complete, ETA 01:14:04
# Fork: 1 of 1
# Warmup Iteration   1: 2229499.404 ns/op
# Warmup Iteration   2: 1787049.673 ns/op
Iteration   1: 1590691.223 ns/op
Iteration   2: 1764453.704 ns/op
Iteration   3: 1739451.535 ns/op
Iteration   4: 1740042.640 ns/op
Iteration   5: 1489939.101 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  1664915.640 ±(99.9%) 460605.044 ns/op [Average]
  (min, avg, max) = (1489939.101, 1664915.640, 1764453.704), stdev = 119617.667
  CI (99.9%): [1204310.596, 2125520.685] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 60.00% complete, ETA 01:13:28
# Fork: 1 of 1
# Warmup Iteration   1: 58585.145 ns/op
# Warmup Iteration   2: 39826.247 ns/op
Iteration   1: 38366.294 ns/op
Iteration   2: 40697.208 ns/op
Iteration   3: 37754.535 ns/op
Iteration   4: 35041.979 ns/op
Iteration   5: 38463.221 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  38064.647 ±(99.9%) 7800.031 ns/op [Average]
  (min, avg, max) = (35041.979, 38064.647, 40697.208), stdev = 2025.643
  CI (99.9%): [30264.616, 45864.678] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 60.33% complete, ETA 01:12:51
# Fork: 1 of 1
# Warmup Iteration   1: 92754.563 ns/op
# Warmup Iteration   2: 55737.049 ns/op
Iteration   1: 58827.733 ns/op
Iteration   2: 58863.936 ns/op
Iteration   3: 60317.223 ns/op
Iteration   4: 57974.967 ns/op
Iteration   5: 58375.190 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  58871.810 ±(99.9%) 3412.865 ns/op [Average]
  (min, avg, max) = (57974.967, 58871.810, 60317.223), stdev = 886.310
  CI (99.9%): [55458.945, 62284.674] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 60.67% complete, ETA 01:12:15
# Fork: 1 of 1
# Warmup Iteration   1: 148470.635 ns/op
# Warmup Iteration   2: 103930.851 ns/op
Iteration   1: 105683.469 ns/op
Iteration   2: 109667.169 ns/op
Iteration   3: 113758.769 ns/op
Iteration   4: 117002.421 ns/op
Iteration   5: 105363.411 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  110295.048 ±(99.9%) 19536.863 ns/op [Average]
  (min, avg, max) = (105363.411, 110295.048, 117002.421), stdev = 5073.661
  CI (99.9%): [90758.184, 129831.911] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 61.00% complete, ETA 01:11:39
# Fork: 1 of 1
# Warmup Iteration   1: 431439.878 ns/op
# Warmup Iteration   2: 332457.092 ns/op
Iteration   1: 290016.409 ns/op
Iteration   2: 273677.377 ns/op
Iteration   3: 250412.863 ns/op
Iteration   4: 308074.397 ns/op
Iteration   5: 375884.807 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  299613.171 ±(99.9%) 183405.370 ns/op [Average]
  (min, avg, max) = (250412.863, 299613.171, 375884.807), stdev = 47629.792
  CI (99.9%): [116207.800, 483018.541] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 61.33% complete, ETA 01:11:03
# Fork: 1 of 1
# Warmup Iteration   1: 2760843.817 ns/op
# Warmup Iteration   2: 2109559.973 ns/op
Iteration   1: 1977794.595 ns/op
Iteration   2: 1898198.995 ns/op
Iteration   3: 1934625.658 ns/op
Iteration   4: 2044650.352 ns/op
Iteration   5: 2199226.450 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  2010899.210 ±(99.9%) 456513.275 ns/op [Average]
  (min, avg, max) = (1898198.995, 2010899.210, 2199226.450), stdev = 118555.048
  CI (99.9%): [1554385.935, 2467412.485] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 61.67% complete, ETA 01:10:27
# Fork: 1 of 1
# Warmup Iteration   1: 4744.062 ns/op
# Warmup Iteration   2: 4028.986 ns/op
Iteration   1: 5196.589 ns/op
Iteration   2: 4644.177 ns/op
Iteration   3: 6657.010 ns/op
Iteration   4: 5978.244 ns/op
Iteration   5: 4337.820 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  5362.768 ±(99.9%) 3677.506 ns/op [Average]
  (min, avg, max) = (4337.820, 5362.768, 6657.010), stdev = 955.037
  CI (99.9%): [1685.262, 9040.274] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 62.00% complete, ETA 01:09:50
# Fork: 1 of 1
# Warmup Iteration   1: 10217.127 ns/op
# Warmup Iteration   2: 6780.365 ns/op
Iteration   1: 6734.952 ns/op
Iteration   2: 8460.930 ns/op
Iteration   3: 8409.794 ns/op
Iteration   4: 8530.988 ns/op
Iteration   5: 7727.096 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  7972.752 ±(99.9%) 2941.049 ns/op [Average]
  (min, avg, max) = (6734.952, 7972.752, 8530.988), stdev = 763.781
  CI (99.9%): [5031.702, 10913.801] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 62.33% complete, ETA 01:09:14
# Fork: 1 of 1
# Warmup Iteration   1: 16489.404 ns/op
# Warmup Iteration   2: 14720.017 ns/op
Iteration   1: 15935.698 ns/op
Iteration   2: 13043.404 ns/op
Iteration   3: 13790.132 ns/op
Iteration   4: 13926.925 ns/op
Iteration   5: 14789.975 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  14297.227 ±(99.9%) 4259.155 ns/op [Average]
  (min, avg, max) = (13043.404, 14297.227, 15935.698), stdev = 1106.089
  CI (99.9%): [10038.072, 18556.381] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 62.67% complete, ETA 01:08:38
# Fork: 1 of 1
# Warmup Iteration   1: 33067.652 ns/op
# Warmup Iteration   2: 28846.728 ns/op
Iteration   1: 22529.474 ns/op
Iteration   2: 26294.269 ns/op
Iteration   3: 32046.081 ns/op
Iteration   4: 32070.527 ns/op
Iteration   5: 26317.133 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  27851.497 ±(99.9%) 15934.632 ns/op [Average]
  (min, avg, max) = (22529.474, 27851.497, 32070.527), stdev = 4138.173
  CI (99.9%): [11916.865, 43786.129] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 63.00% complete, ETA 01:08:02
# Fork: 1 of 1
# Warmup Iteration   1: 253175.236 ns/op
# Warmup Iteration   2: 280409.652 ns/op
Iteration   1: 333714.367 ns/op
Iteration   2: 260271.411 ns/op
Iteration   3: 272668.369 ns/op
Iteration   4: 274637.280 ns/op
Iteration   5: 275865.396 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  283431.365 ±(99.9%) 110855.513 ns/op [Average]
  (min, avg, max) = (260271.411, 283431.365, 333714.367), stdev = 28788.825
  CI (99.9%): [172575.852, 394286.877] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 63.33% complete, ETA 01:07:25
# Fork: 1 of 1
# Warmup Iteration   1: 11900.170 ns/op
# Warmup Iteration   2: 8244.526 ns/op
Iteration   1: 14026.711 ns/op
Iteration   2: 8332.027 ns/op
Iteration   3: 10597.725 ns/op
Iteration   4: 10453.885 ns/op
Iteration   5: 11505.977 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  10983.265 ±(99.9%) 7936.843 ns/op [Average]
  (min, avg, max) = (8332.027, 10983.265, 14026.711), stdev = 2061.173
  CI (99.9%): [3046.422, 18920.108] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 63.67% complete, ETA 01:06:49
# Fork: 1 of 1
# Warmup Iteration   1: 17630.093 ns/op
# Warmup Iteration   2: 20863.074 ns/op
Iteration   1: 16881.184 ns/op
Iteration   2: 19992.156 ns/op
Iteration   3: 19705.604 ns/op
Iteration   4: 26267.030 ns/op
Iteration   5: 16900.824 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  19949.360 ±(99.9%) 14748.705 ns/op [Average]
  (min, avg, max) = (16881.184, 19949.360, 26267.030), stdev = 3830.192
  CI (99.9%): [5200.655, 34698.064] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 64.00% complete, ETA 01:06:13
# Fork: 1 of 1
# Warmup Iteration   1: 35465.062 ns/op
# Warmup Iteration   2: 42579.101 ns/op
Iteration   1: 36370.840 ns/op
Iteration   2: 26621.758 ns/op
Iteration   3: 28261.547 ns/op
Iteration   4: 30773.540 ns/op
Iteration   5: 28846.209 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  30174.779 ±(99.9%) 14510.237 ns/op [Average]
  (min, avg, max) = (26621.758, 30174.779, 36370.840), stdev = 3768.262
  CI (99.9%): [15664.542, 44685.016] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 64.33% complete, ETA 01:05:37
# Fork: 1 of 1
# Warmup Iteration   1: 66811.090 ns/op
# Warmup Iteration   2: 56090.492 ns/op
Iteration   1: 62516.708 ns/op
Iteration   2: 67818.435 ns/op
Iteration   3: 60659.174 ns/op
Iteration   4: 79821.730 ns/op
Iteration   5: 64216.639 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  67006.537 ±(99.9%) 29396.298 ns/op [Average]
  (min, avg, max) = (60659.174, 67006.537, 79821.730), stdev = 7634.125
  CI (99.9%): [37610.239, 96402.835] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 64.67% complete, ETA 01:05:00
# Fork: 1 of 1
# Warmup Iteration   1: 663787.724 ns/op
# Warmup Iteration   2: 624010.103 ns/op
Iteration   1: 532839.923 ns/op
Iteration   2: 609559.936 ns/op
Iteration   3: 489276.877 ns/op
Iteration   4: 502869.212 ns/op
Iteration   5: 715293.550 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  569967.899 ±(99.9%) 360600.188 ns/op [Average]
  (min, avg, max) = (489276.877, 569967.899, 715293.550), stdev = 93646.724
  CI (99.9%): [209367.711, 930568.088] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 65.00% complete, ETA 01:04:24
# Fork: 1 of 1
# Warmup Iteration   1: 61362.920 ns/op
# Warmup Iteration   2: 42363.158 ns/op
Iteration   1: 37951.347 ns/op
Iteration   2: 42456.260 ns/op
Iteration   3: 28717.058 ns/op
Iteration   4: 36841.740 ns/op
Iteration   5: 35221.926 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  36237.666 ±(99.9%) 19211.182 ns/op [Average]
  (min, avg, max) = (28717.058, 36237.666, 42456.260), stdev = 4989.083
  CI (99.9%): [17026.485, 55448.848] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 65.33% complete, ETA 01:03:47
# Fork: 1 of 1
# Warmup Iteration   1: 100367.650 ns/op
# Warmup Iteration   2: 69431.134 ns/op
Iteration   1: 62061.012 ns/op
Iteration   2: 60813.917 ns/op
Iteration   3: 61814.608 ns/op
Iteration   4: 74362.693 ns/op
Iteration   5: 62827.570 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  64375.960 ±(99.9%) 21675.057 ns/op [Average]
  (min, avg, max) = (60813.917, 64375.960, 74362.693), stdev = 5628.943
  CI (99.9%): [42700.903, 86051.017] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 65.67% complete, ETA 01:03:11
# Fork: 1 of 1
# Warmup Iteration   1: 195418.672 ns/op
# Warmup Iteration   2: 126594.287 ns/op
Iteration   1: 129134.350 ns/op
Iteration   2: 126027.503 ns/op
Iteration   3: 165021.765 ns/op
Iteration   4: 112042.300 ns/op
Iteration   5: 142999.494 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  135045.082 ±(99.9%) 77187.300 ns/op [Average]
  (min, avg, max) = (112042.300, 135045.082, 165021.765), stdev = 20045.297
  CI (99.9%): [57857.782, 212232.382] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 66.00% complete, ETA 01:02:35
# Fork: 1 of 1
# Warmup Iteration   1: 411509.352 ns/op
# Warmup Iteration   2: 375866.626 ns/op
Iteration   1: 302003.870 ns/op
Iteration   2: 257170.540 ns/op
Iteration   3: 269102.574 ns/op
Iteration   4: 367175.597 ns/op
Iteration   5: 272994.766 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  293689.469 ±(99.9%) 170429.154 ns/op [Average]
  (min, avg, max) = (257170.540, 293689.469, 367175.597), stdev = 44259.910
  CI (99.9%): [123260.315, 464118.623] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.both
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 66.33% complete, ETA 01:01:58
# Fork: 1 of 1
# Warmup Iteration   1: 3848765.557 ns/op
# Warmup Iteration   2: 2794679.798 ns/op
Iteration   1: 2477903.951 ns/op
Iteration   2: 2546656.799 ns/op
Iteration   3: 2885997.254 ns/op
Iteration   4: 2526712.542 ns/op
Iteration   5: 3184130.578 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.both":
  2724280.225 ±(99.9%) 1169384.016 ns/op [Average]
  (min, avg, max) = (2477903.951, 2724280.225, 3184130.578), stdev = 303685.316
  CI (99.9%): [1554896.208, 3893664.241] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 66.67% complete, ETA 01:01:22
# Fork: 1 of 1
# Warmup Iteration   1: 10164.126 ns/op
# Warmup Iteration   2: 8626.557 ns/op
Iteration   1: 11930.140 ns/op
Iteration   2: 9501.884 ns/op
Iteration   3: 7631.331 ns/op
Iteration   4: 8250.533 ns/op
Iteration   5: 13465.908 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  10155.959 ±(99.9%) 9536.797 ns/op [Average]
  (min, avg, max) = (7631.331, 10155.959, 13465.908), stdev = 2476.676
  CI (99.9%): [619.162, 19692.756] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 67.00% complete, ETA 01:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 20835.183 ns/op
# Warmup Iteration   2: 28756.671 ns/op
Iteration   1: 23883.724 ns/op
Iteration   2: 19517.055 ns/op
Iteration   3: 17728.256 ns/op
Iteration   4: 13889.054 ns/op
Iteration   5: 16129.480 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  18229.514 ±(99.9%) 14552.282 ns/op [Average]
  (min, avg, max) = (13889.054, 18229.514, 23883.724), stdev = 3779.182
  CI (99.9%): [3677.231, 32781.796] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 67.33% complete, ETA 01:00:09
# Fork: 1 of 1
# Warmup Iteration   1: 45104.622 ns/op
# Warmup Iteration   2: 30639.499 ns/op
Iteration   1: 26375.966 ns/op
Iteration   2: 29251.078 ns/op
Iteration   3: 40226.225 ns/op
Iteration   4: 39056.555 ns/op
Iteration   5: 31699.134 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  33321.792 ±(99.9%) 23423.102 ns/op [Average]
  (min, avg, max) = (26375.966, 33321.792, 40226.225), stdev = 6082.905
  CI (99.9%): [9898.690, 56744.894] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 67.67% complete, ETA 00:59:33
# Fork: 1 of 1
# Warmup Iteration   1: 89412.278 ns/op
# Warmup Iteration   2: 55179.182 ns/op
Iteration   1: 53315.677 ns/op
Iteration   2: 75948.742 ns/op
Iteration   3: 49102.639 ns/op
Iteration   4: 51392.874 ns/op
Iteration   5: 65684.988 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  59088.984 ±(99.9%) 43906.079 ns/op [Average]
  (min, avg, max) = (49102.639, 59088.984, 75948.742), stdev = 11402.269
  CI (99.9%): [15182.905, 102995.063] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 68.00% complete, ETA 00:58:56
# Fork: 1 of 1
# Warmup Iteration   1: 405295.001 ns/op
# Warmup Iteration   2: 456556.546 ns/op
Iteration   1: 643072.973 ns/op
Iteration   2: 488946.294 ns/op
Iteration   3: 359431.551 ns/op
Iteration   4: 439640.615 ns/op
Iteration   5: 606199.236 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  507458.134 ±(99.9%) 451507.349 ns/op [Average]
  (min, avg, max) = (359431.551, 507458.134, 643072.973), stdev = 117255.025
  CI (99.9%): [55950.785, 958965.483] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 68.33% complete, ETA 00:58:20
# Fork: 1 of 1
# Warmup Iteration   1: 2895.899 ns/op
# Warmup Iteration   2: 3090.076 ns/op
Iteration   1: 3075.064 ns/op
Iteration   2: 3737.805 ns/op
Iteration   3: 4045.917 ns/op
Iteration   4: 3731.781 ns/op
Iteration   5: 2768.402 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3471.794 ±(99.9%) 2037.686 ns/op [Average]
  (min, avg, max) = (2768.402, 3471.794, 4045.917), stdev = 529.180
  CI (99.9%): [1434.108, 5509.479] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 68.67% complete, ETA 00:57:43
# Fork: 1 of 1
# Warmup Iteration   1: 5955.344 ns/op
# Warmup Iteration   2: 6180.825 ns/op
Iteration   1: 4628.728 ns/op
Iteration   2: 5221.291 ns/op
Iteration   3: 5404.560 ns/op
Iteration   4: 4918.740 ns/op
Iteration   5: 5302.081 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5095.080 ±(99.9%) 1222.445 ns/op [Average]
  (min, avg, max) = (4628.728, 5095.080, 5404.560), stdev = 317.465
  CI (99.9%): [3872.635, 6317.525] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 69.00% complete, ETA 00:57:07
# Fork: 1 of 1
# Warmup Iteration   1: 13251.566 ns/op
# Warmup Iteration   2: 9587.355 ns/op
Iteration   1: 9612.906 ns/op
Iteration   2: 9907.956 ns/op
Iteration   3: 8623.041 ns/op
Iteration   4: 9871.367 ns/op
Iteration   5: 9555.996 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  9514.253 ±(99.9%) 2008.496 ns/op [Average]
  (min, avg, max) = (8623.041, 9514.253, 9907.956), stdev = 521.600
  CI (99.9%): [7505.757, 11522.749] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 69.33% complete, ETA 00:56:30
# Fork: 1 of 1
# Warmup Iteration   1: 32707.619 ns/op
# Warmup Iteration   2: 15924.064 ns/op
Iteration   1: 21474.340 ns/op
Iteration   2: 17778.754 ns/op
Iteration   3: 18741.868 ns/op
Iteration   4: 21582.734 ns/op
Iteration   5: 18971.775 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  19709.894 ±(99.9%) 6622.658 ns/op [Average]
  (min, avg, max) = (17778.754, 19709.894, 21582.734), stdev = 1719.883
  CI (99.9%): [13087.236, 26332.552] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 69.67% complete, ETA 00:55:54
# Fork: 1 of 1
# Warmup Iteration   1: 202201.537 ns/op
# Warmup Iteration   2: 179062.514 ns/op
Iteration   1: 185958.875 ns/op
Iteration   2: 199008.740 ns/op
Iteration   3: 192834.937 ns/op
Iteration   4: 196938.245 ns/op
Iteration   5: 168060.851 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  188560.330 ±(99.9%) 48118.691 ns/op [Average]
  (min, avg, max) = (168060.851, 188560.330, 199008.740), stdev = 12496.271
  CI (99.9%): [140441.638, 236679.021] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 70.00% complete, ETA 00:55:17
# Fork: 1 of 1
# Warmup Iteration   1: 5475.243 ns/op
# Warmup Iteration   2: 4724.271 ns/op
Iteration   1: 6049.669 ns/op
Iteration   2: 4141.604 ns/op
Iteration   3: 4002.443 ns/op
Iteration   4: 4315.102 ns/op
Iteration   5: 3600.320 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4421.827 ±(99.9%) 3648.240 ns/op [Average]
  (min, avg, max) = (3600.320, 4421.827, 6049.669), stdev = 947.436
  CI (99.9%): [773.588, 8070.067] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 70.33% complete, ETA 00:54:41
# Fork: 1 of 1
# Warmup Iteration   1: 9457.240 ns/op
# Warmup Iteration   2: 7462.098 ns/op
Iteration   1: 7661.967 ns/op
Iteration   2: 6492.087 ns/op
Iteration   3: 6867.126 ns/op
Iteration   4: 6795.015 ns/op
Iteration   5: 6072.524 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6777.744 ±(99.9%) 2252.768 ns/op [Average]
  (min, avg, max) = (6072.524, 6777.744, 7661.967), stdev = 585.037
  CI (99.9%): [4524.976, 9030.512] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 70.67% complete, ETA 00:54:04
# Fork: 1 of 1
# Warmup Iteration   1: 17960.179 ns/op
# Warmup Iteration   2: 11467.970 ns/op
Iteration   1: 12027.070 ns/op
Iteration   2: 11573.290 ns/op
Iteration   3: 13755.589 ns/op
Iteration   4: 13090.000 ns/op
Iteration   5: 12455.907 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  12580.371 ±(99.9%) 3321.783 ns/op [Average]
  (min, avg, max) = (11573.290, 12580.371, 13755.589), stdev = 862.657
  CI (99.9%): [9258.588, 15902.154] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 71.00% complete, ETA 00:53:28
# Fork: 1 of 1
# Warmup Iteration   1: 27303.898 ns/op
# Warmup Iteration   2: 26556.531 ns/op
Iteration   1: 27641.851 ns/op
Iteration   2: 23408.785 ns/op
Iteration   3: 30397.281 ns/op
Iteration   4: 27125.472 ns/op
Iteration   5: 30733.582 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27861.394 ±(99.9%) 11405.919 ns/op [Average]
  (min, avg, max) = (23408.785, 27861.394, 30733.582), stdev = 2962.081
  CI (99.9%): [16455.476, 39267.313] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 71.33% complete, ETA 00:52:51
# Fork: 1 of 1
# Warmup Iteration   1: 274436.265 ns/op
# Warmup Iteration   2: 248719.073 ns/op
Iteration   1: 250989.387 ns/op
Iteration   2: 322154.045 ns/op
Iteration   3: 271339.027 ns/op
Iteration   4: 232924.889 ns/op
Iteration   5: 238622.922 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  263206.054 ±(99.9%) 138990.875 ns/op [Average]
  (min, avg, max) = (232924.889, 263206.054, 322154.045), stdev = 36095.489
  CI (99.9%): [124215.180, 402196.929] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 71.67% complete, ETA 00:52:15
# Fork: 1 of 1
# Warmup Iteration   1: 4735.907 ns/op
# Warmup Iteration   2: 3134.520 ns/op
Iteration   1: 3118.623 ns/op
Iteration   2: 3990.733 ns/op
Iteration   3: 3364.693 ns/op
Iteration   4: 3568.613 ns/op
Iteration   5: 3575.812 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  3523.694 ±(99.9%) 1236.146 ns/op [Average]
  (min, avg, max) = (3118.623, 3523.694, 3990.733), stdev = 321.023
  CI (99.9%): [2287.549, 4759.840] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 72.00% complete, ETA 00:51:38
# Fork: 1 of 1
# Warmup Iteration   1: 11628.190 ns/op
# Warmup Iteration   2: 6671.687 ns/op
Iteration   1: 6069.671 ns/op
Iteration   2: 6146.158 ns/op
Iteration   3: 5769.987 ns/op
Iteration   4: 6454.806 ns/op
Iteration   5: 5320.322 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  5952.189 ±(99.9%) 1652.306 ns/op [Average]
  (min, avg, max) = (5320.322, 5952.189, 6454.806), stdev = 429.099
  CI (99.9%): [4299.883, 7604.495] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 72.33% complete, ETA 00:51:01
# Fork: 1 of 1
# Warmup Iteration   1: 13745.485 ns/op
# Warmup Iteration   2: 13789.792 ns/op
Iteration   1: 13149.028 ns/op
Iteration   2: 13217.104 ns/op
Iteration   3: 13930.452 ns/op
Iteration   4: 10544.718 ns/op
Iteration   5: 14322.300 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13032.721 ±(99.9%) 5681.044 ns/op [Average]
  (min, avg, max) = (10544.718, 13032.721, 14322.300), stdev = 1475.349
  CI (99.9%): [7351.677, 18713.765] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 72.67% complete, ETA 00:50:25
# Fork: 1 of 1
# Warmup Iteration   1: 27523.585 ns/op
# Warmup Iteration   2: 21399.007 ns/op
Iteration   1: 23544.206 ns/op
Iteration   2: 22771.627 ns/op
Iteration   3: 26061.755 ns/op
Iteration   4: 20738.850 ns/op
Iteration   5: 21448.553 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  22912.998 ±(99.9%) 7985.933 ns/op [Average]
  (min, avg, max) = (20738.850, 22912.998, 26061.755), stdev = 2073.921
  CI (99.9%): [14927.065, 30898.931] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 73.00% complete, ETA 00:49:48
# Fork: 1 of 1
# Warmup Iteration   1: 301930.853 ns/op
# Warmup Iteration   2: 209425.289 ns/op
Iteration   1: 194482.794 ns/op
Iteration   2: 187067.779 ns/op
Iteration   3: 197050.657 ns/op
Iteration   4: 196067.232 ns/op
Iteration   5: 202800.344 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  195493.761 ±(99.9%) 21795.986 ns/op [Average]
  (min, avg, max) = (187067.779, 195493.761, 202800.344), stdev = 5660.348
  CI (99.9%): [173697.775, 217289.747] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 73.33% complete, ETA 00:49:12
# Fork: 1 of 1
# Warmup Iteration   1: 5292.336 ns/op
# Warmup Iteration   2: 3333.668 ns/op
Iteration   1: 4094.963 ns/op
Iteration   2: 4873.229 ns/op
Iteration   3: 5172.261 ns/op
Iteration   4: 3756.023 ns/op
Iteration   5: 3364.047 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4252.105 ±(99.9%) 2914.762 ns/op [Average]
  (min, avg, max) = (3364.047, 4252.105, 5172.261), stdev = 756.954
  CI (99.9%): [1337.343, 7166.867] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 73.67% complete, ETA 00:48:35
# Fork: 1 of 1
# Warmup Iteration   1: 10248.555 ns/op
# Warmup Iteration   2: 6866.182 ns/op
Iteration   1: 8419.031 ns/op
Iteration   2: 7589.678 ns/op
Iteration   3: 9554.349 ns/op
Iteration   4: 11086.218 ns/op
Iteration   5: 6702.130 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  8670.281 ±(99.9%) 6592.022 ns/op [Average]
  (min, avg, max) = (6702.130, 8670.281, 11086.218), stdev = 1711.927
  CI (99.9%): [2078.259, 15262.303] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 74.00% complete, ETA 00:47:58
# Fork: 1 of 1
# Warmup Iteration   1: 12672.857 ns/op
# Warmup Iteration   2: 12769.965 ns/op
Iteration   1: 13635.933 ns/op
Iteration   2: 12157.721 ns/op
Iteration   3: 12670.900 ns/op
Iteration   4: 17200.572 ns/op
Iteration   5: 13635.180 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  13860.061 ±(99.9%) 7597.558 ns/op [Average]
  (min, avg, max) = (12157.721, 13860.061, 17200.572), stdev = 1973.062
  CI (99.9%): [6262.503, 21457.619] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 74.33% complete, ETA 00:47:22
# Fork: 1 of 1
# Warmup Iteration   1: 30110.309 ns/op
# Warmup Iteration   2: 30949.803 ns/op
Iteration   1: 27016.610 ns/op
Iteration   2: 30088.982 ns/op
Iteration   3: 33057.848 ns/op
Iteration   4: 22407.940 ns/op
Iteration   5: 23296.481 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  27173.573 ±(99.9%) 17316.346 ns/op [Average]
  (min, avg, max) = (22407.940, 27173.573, 33057.848), stdev = 4497.000
  CI (99.9%): [9857.227, 44489.918] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 74.67% complete, ETA 00:46:45
# Fork: 1 of 1
# Warmup Iteration   1: 379577.167 ns/op
# Warmup Iteration   2: 251290.817 ns/op
Iteration   1: 290714.164 ns/op
Iteration   2: 296388.754 ns/op
Iteration   3: 259426.498 ns/op
Iteration   4: 311966.245 ns/op
Iteration   5: 254484.386 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  282596.009 ±(99.9%) 95217.725 ns/op [Average]
  (min, avg, max) = (254484.386, 282596.009, 311966.245), stdev = 24727.741
  CI (99.9%): [187378.285, 377813.734] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 75.00% complete, ETA 00:46:08
# Fork: 1 of 1
# Warmup Iteration   1: 113247.961 ns/op
# Warmup Iteration   2: 86327.723 ns/op
Iteration   1: 76013.360 ns/op
Iteration   2: 81109.766 ns/op
Iteration   3: 89516.454 ns/op
Iteration   4: 76586.991 ns/op
Iteration   5: 76637.265 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  79972.767 ±(99.9%) 22006.075 ns/op [Average]
  (min, avg, max) = (76013.360, 79972.767, 89516.454), stdev = 5714.908
  CI (99.9%): [57966.692, 101978.843] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 75.33% complete, ETA 00:45:32
# Fork: 1 of 1
# Warmup Iteration   1: 122581.485 ns/op
# Warmup Iteration   2: 96149.166 ns/op
Iteration   1: 111367.070 ns/op
Iteration   2: 92210.587 ns/op
Iteration   3: 142749.604 ns/op
Iteration   4: 102304.546 ns/op
Iteration   5: 108781.867 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  111482.735 ±(99.9%) 73075.543 ns/op [Average]
  (min, avg, max) = (92210.587, 111482.735, 142749.604), stdev = 18977.487
  CI (99.9%): [38407.191, 184558.278] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 75.67% complete, ETA 00:44:55
# Fork: 1 of 1
# Warmup Iteration   1: 149073.989 ns/op
# Warmup Iteration   2: 116884.663 ns/op
Iteration   1: 110509.751 ns/op
Iteration   2: 167599.817 ns/op
Iteration   3: 113188.606 ns/op
Iteration   4: 139131.798 ns/op
Iteration   5: 124863.210 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  131058.636 ±(99.9%) 89902.677 ns/op [Average]
  (min, avg, max) = (110509.751, 131058.636, 167599.817), stdev = 23347.440
  CI (99.9%): [41155.959, 220961.313] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 76.00% complete, ETA 00:44:18
# Fork: 1 of 1
# Warmup Iteration   1: 178027.578 ns/op
# Warmup Iteration   2: 155020.169 ns/op
Iteration   1: 156836.044 ns/op
Iteration   2: 152921.819 ns/op
Iteration   3: 217350.375 ns/op
Iteration   4: 135665.327 ns/op
Iteration   5: 175293.779 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  167613.469 ±(99.9%) 120011.485 ns/op [Average]
  (min, avg, max) = (135665.327, 167613.469, 217350.375), stdev = 31166.602
  CI (99.9%): [47601.984, 287624.954] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 76.33% complete, ETA 00:43:41
# Fork: 1 of 1
# Warmup Iteration   1: 759878.642 ns/op
# Warmup Iteration   2: 812773.910 ns/op
Iteration   1: 582668.274 ns/op
Iteration   2: 712206.991 ns/op
Iteration   3: 912884.636 ns/op
Iteration   4: 629250.348 ns/op
Iteration   5: 616392.126 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  690680.475 ±(99.9%) 512284.488 ns/op [Average]
  (min, avg, max) = (582668.274, 690680.475, 912884.636), stdev = 133038.655
  CI (99.9%): [178395.987, 1202964.963] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 76.67% complete, ETA 00:43:05
# Fork: 1 of 1
# Warmup Iteration   1: 18628.673 ns/op
# Warmup Iteration   2: 16714.567 ns/op
Iteration   1: 14347.118 ns/op
Iteration   2: 17108.819 ns/op
Iteration   3: 16817.093 ns/op
Iteration   4: 14025.876 ns/op
Iteration   5: 15269.655 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  15513.712 ±(99.9%) 5403.720 ns/op [Average]
  (min, avg, max) = (14025.876, 15513.712, 17108.819), stdev = 1403.329
  CI (99.9%): [10109.993, 20917.432] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 77.00% complete, ETA 00:42:28
# Fork: 1 of 1
# Warmup Iteration   1: 31893.656 ns/op
# Warmup Iteration   2: 22771.946 ns/op
Iteration   1: 25683.765 ns/op
Iteration   2: 21868.076 ns/op
Iteration   3: 23597.277 ns/op
Iteration   4: 24912.007 ns/op
Iteration   5: 22779.672 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  23768.160 ±(99.9%) 5963.700 ns/op [Average]
  (min, avg, max) = (21868.076, 23768.160, 25683.765), stdev = 1548.754
  CI (99.9%): [17804.459, 29731.860] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 77.33% complete, ETA 00:41:51
# Fork: 1 of 1
# Warmup Iteration   1: 54593.015 ns/op
# Warmup Iteration   2: 42818.546 ns/op
Iteration   1: 50211.416 ns/op
Iteration   2: 40716.748 ns/op
Iteration   3: 41194.666 ns/op
Iteration   4: 46003.924 ns/op
Iteration   5: 40834.159 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  43792.183 ±(99.9%) 16229.180 ns/op [Average]
  (min, avg, max) = (40716.748, 43792.183, 50211.416), stdev = 4214.667
  CI (99.9%): [27563.003, 60021.363] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 77.67% complete, ETA 00:41:15
# Fork: 1 of 1
# Warmup Iteration   1: 140995.864 ns/op
# Warmup Iteration   2: 106300.908 ns/op
Iteration   1: 108021.904 ns/op
Iteration   2: 103396.750 ns/op
Iteration   3: 116343.540 ns/op
Iteration   4: 114279.210 ns/op
Iteration   5: 102635.604 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  108935.402 ±(99.9%) 23941.856 ns/op [Average]
  (min, avg, max) = (102635.604, 108935.402, 116343.540), stdev = 6217.624
  CI (99.9%): [84993.546, 132877.257] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 78.00% complete, ETA 00:40:38
# Fork: 1 of 1
# Warmup Iteration   1: 1007600.286 ns/op
# Warmup Iteration   2: 905367.709 ns/op
Iteration   1: 817174.070 ns/op
Iteration   2: 799835.769 ns/op
Iteration   3: 807375.429 ns/op
Iteration   4: 830660.309 ns/op
Iteration   5: 752375.213 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  801484.158 ±(99.9%) 114658.281 ns/op [Average]
  (min, avg, max) = (752375.213, 801484.158, 830660.309), stdev = 29776.391
  CI (99.9%): [686825.877, 916142.439] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 78.33% complete, ETA 00:40:01
# Fork: 1 of 1
# Warmup Iteration   1: 2487.008 ns/op
# Warmup Iteration   2: 2698.685 ns/op
Iteration   1: 2456.531 ns/op
Iteration   2: 2301.434 ns/op
Iteration   3: 2193.770 ns/op
Iteration   4: 2151.964 ns/op
Iteration   5: 2277.170 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  2276.174 ±(99.9%) 453.111 ns/op [Average]
  (min, avg, max) = (2151.964, 2276.174, 2456.531), stdev = 117.671
  CI (99.9%): [1823.063, 2729.285] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 78.67% complete, ETA 00:39:24
# Fork: 1 of 1
# Warmup Iteration   1: 5528.482 ns/op
# Warmup Iteration   2: 4142.362 ns/op
Iteration   1: 5073.273 ns/op
Iteration   2: 4148.287 ns/op
Iteration   3: 5236.364 ns/op
Iteration   4: 4454.285 ns/op
Iteration   5: 4841.688 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  4750.779 ±(99.9%) 1720.946 ns/op [Average]
  (min, avg, max) = (4148.287, 4750.779, 5236.364), stdev = 446.924
  CI (99.9%): [3029.833, 6471.725] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 79.00% complete, ETA 00:38:48
# Fork: 1 of 1
# Warmup Iteration   1: 8782.844 ns/op
# Warmup Iteration   2: 7109.326 ns/op
Iteration   1: 5973.249 ns/op
Iteration   2: 8160.239 ns/op
Iteration   3: 6863.194 ns/op
Iteration   4: 6557.181 ns/op
Iteration   5: 6949.471 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  6900.667 ±(99.9%) 3085.561 ns/op [Average]
  (min, avg, max) = (5973.249, 6900.667, 8160.239), stdev = 801.310
  CI (99.9%): [3815.106, 9986.228] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 79.33% complete, ETA 00:38:11
# Fork: 1 of 1
# Warmup Iteration   1: 14977.563 ns/op
# Warmup Iteration   2: 21116.045 ns/op
Iteration   1: 16988.391 ns/op
Iteration   2: 15797.444 ns/op
Iteration   3: 16413.799 ns/op
Iteration   4: 18586.804 ns/op
Iteration   5: 17945.173 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  17146.322 ±(99.9%) 4345.497 ns/op [Average]
  (min, avg, max) = (15797.444, 17146.322, 18586.804), stdev = 1128.512
  CI (99.9%): [12800.825, 21491.819] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 79.67% complete, ETA 00:37:34
# Fork: 1 of 1
# Warmup Iteration   1: 132712.212 ns/op
# Warmup Iteration   2: 134952.287 ns/op
Iteration   1: 109510.100 ns/op
Iteration   2: 134904.463 ns/op
Iteration   3: 112206.723 ns/op
Iteration   4: 106350.828 ns/op
Iteration   5: 140677.944 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  120730.012 ±(99.9%) 61009.589 ns/op [Average]
  (min, avg, max) = (106350.828, 120730.012, 140677.944), stdev = 15843.996
  CI (99.9%): [59720.423, 181739.600] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 80.00% complete, ETA 00:36:57
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Unable to find class: com.komanov.serialization.domain.SiteFlagg
Serialization trace:
flags (com.komanov.serialization.domain.Site)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:156)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:133)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:670)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:781)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:43)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:21)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:708)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.fromByteArray(ChillConverter.scala:16)
	at com.komanov.serialization.jmh.SiteBenchmark.deserialization(Benchmarks.scala:43)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(SiteBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_AverageTime(SiteBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: com.komanov.serialization.domain.SiteFlagg
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:154)
	... 27 more




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 80.33% complete, ETA 00:36:12
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Unable to find class: com.komanov.serialization.domain.Pagå com.komanov.serialization.domain.PageComponent
Serialization trace:
pages (com.komanov.serialization.domain.Site)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:156)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:133)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:670)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:781)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:43)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:21)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:708)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.fromByteArray(ChillConverter.scala:16)
	at com.komanov.serialization.jmh.SiteBenchmark.deserialization(Benchmarks.scala:43)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(SiteBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_AverageTime(SiteBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: com.komanov.serialization.domain.Pagå com.komanov.serialization.domain.PageComponent
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:154)
	... 27 more




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 80.67% complete, ETA 00:35:27
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Unable to find class: scala.collection.immutable.Nil¤ index
Serialization trace:
metaTags (com.komanov.serialization.domain.Page)
pages (com.komanov.serialization.domain.Site)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:156)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:133)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:670)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:118)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:790)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:43)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:21)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:708)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.fromByteArray(ChillConverter.scala:16)
	at com.komanov.serialization.jmh.SiteBenchmark.deserialization(Benchmarks.scala:43)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(SiteBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_AverageTime(SiteBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: scala.collection.immutable.Nil¤ index
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:154)
	... 29 more




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 81.00% complete, ETA 00:34:42
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Unable to find class: com.komanov.serialization.domain.ButtonComponentDataO
Serialization trace:
data (com.komanov.serialization.domain.PageComponent)
components (com.komanov.serialization.domain.Page)
pages (com.komanov.serialization.domain.Site)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:156)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:133)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:670)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:118)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:790)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:43)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:21)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:708)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:790)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:43)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:21)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:708)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.fromByteArray(ChillConverter.scala:16)
	at com.komanov.serialization.jmh.SiteBenchmark.deserialization(Benchmarks.scala:43)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(SiteBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_AverageTime(SiteBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: com.komanov.serialization.domain.ButtonComponentDataO
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:154)
	... 35 more




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 81.33% complete, ETA 00:33:58
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

com.esotericsoftware.kryo.KryoException: Unable to find class: com.komanov.serialization.domain.Pagåcom.komanov.serialization.domain.PageComponent
Serialization trace:
pages (com.komanov.serialization.domain.Site)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:156)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readClass(DefaultClassResolver.java:133)
	at com.esotericsoftware.kryo.Kryo.readClass(Kryo.java:670)
	at com.esotericsoftware.kryo.Kryo.readClassAndObject(Kryo.java:781)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:43)
	at com.twitter.chill.TraversableSerializer.read(Traversable.scala:21)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:708)
	at com.esotericsoftware.kryo.serializers.ObjectField.read(ObjectField.java:125)
	at com.esotericsoftware.kryo.serializers.FieldSerializer.read(FieldSerializer.java:551)
	at com.esotericsoftware.kryo.Kryo.readObject(Kryo.java:686)
	at com.twitter.chill.SerDeState.readObject(SerDeState.java:58)
	at com.twitter.chill.KryoPool.fromBytes(KryoPool.java:105)
	at com.komanov.serialization.converters.ChillConverter$.fromByteArray(ChillConverter.scala:16)
	at com.komanov.serialization.jmh.SiteBenchmark.deserialization(Benchmarks.scala:43)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_avgt_jmhStub(SiteBenchmark_deserialization_jmhTest.java:232)
	at com.komanov.serialization.jmh.generated.SiteBenchmark_deserialization_jmhTest.deserialization_AverageTime(SiteBenchmark_deserialization_jmhTest.java:173)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:453)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:437)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
Caused by: java.lang.ClassNotFoundException: com.komanov.serialization.domain.Pagåcom.komanov.serialization.domain.PageComponent
	at java.net.URLClassLoader.findClass(URLClassLoader.java:381)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:424)
	at sun.misc.Launcher$AppClassLoader.loadClass(Launcher.java:335)
	at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
	at java.lang.Class.forName0(Native Method)
	at java.lang.Class.forName(Class.java:348)
	at com.esotericsoftware.kryo.util.DefaultClassResolver.readName(DefaultClassResolver.java:154)
	... 27 more




# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 81.67% complete, ETA 00:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 20277.762 ns/op
# Warmup Iteration   2: 18428.160 ns/op
Iteration   1: 17394.276 ns/op
Iteration   2: 15570.073 ns/op
Iteration   3: 15618.688 ns/op
Iteration   4: 15129.260 ns/op
Iteration   5: 19805.626 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  16703.585 ±(99.9%) 7466.692 ns/op [Average]
  (min, avg, max) = (15129.260, 16703.585, 19805.626), stdev = 1939.076
  CI (99.9%): [9236.893, 24170.277] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 82.00% complete, ETA 00:32:38
# Fork: 1 of 1
# Warmup Iteration   1: 40209.134 ns/op
# Warmup Iteration   2: 27109.495 ns/op
Iteration   1: 34293.675 ns/op
Iteration   2: 27567.671 ns/op
Iteration   3: 29238.715 ns/op
Iteration   4: 41239.939 ns/op
Iteration   5: 34923.940 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  33452.788 ±(99.9%) 20727.780 ns/op [Average]
  (min, avg, max) = (27567.671, 33452.788, 41239.939), stdev = 5382.939
  CI (99.9%): [12725.008, 54180.568] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 82.33% complete, ETA 00:32:02
# Fork: 1 of 1
# Warmup Iteration   1: 102822.378 ns/op
# Warmup Iteration   2: 85292.694 ns/op
Iteration   1: 92371.086 ns/op
Iteration   2: 61734.546 ns/op
Iteration   3: 60092.660 ns/op
Iteration   4: 66911.068 ns/op
Iteration   5: 65432.405 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  69308.353 ±(99.9%) 50755.196 ns/op [Average]
  (min, avg, max) = (60092.660, 69308.353, 92371.086), stdev = 13180.963
  CI (99.9%): [18553.157, 120063.549] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 82.67% complete, ETA 00:31:26
# Fork: 1 of 1
# Warmup Iteration   1: 190714.176 ns/op
# Warmup Iteration   2: 131783.063 ns/op
Iteration   1: 130331.609 ns/op
Iteration   2: 140178.196 ns/op
Iteration   3: 173143.943 ns/op
Iteration   4: 130717.797 ns/op
Iteration   5: 145374.220 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  143949.153 ±(99.9%) 67498.752 ns/op [Average]
  (min, avg, max) = (130331.609, 143949.153, 173143.943), stdev = 17529.211
  CI (99.9%): [76450.401, 211447.904] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.deserialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 83.00% complete, ETA 00:30:50
# Fork: 1 of 1
# Warmup Iteration   1: 1331632.499 ns/op
# Warmup Iteration   2: 1387224.381 ns/op
Iteration   1: 1068012.476 ns/op
Iteration   2: 1139829.257 ns/op
Iteration   3: 1083755.917 ns/op
Iteration   4: 1235865.216 ns/op
Iteration   5: 1065410.106 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.deserialization":
  1118574.594 ±(99.9%) 277701.792 ns/op [Average]
  (min, avg, max) = (1065410.106, 1118574.594, 1235865.216), stdev = 72118.274
  CI (99.9%): [840872.802, 1396276.386] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _1_K)

# Run progress: 83.33% complete, ETA 00:30:14
# Fork: 1 of 1
# Warmup Iteration   1: 6616.249 ns/op
# Warmup Iteration   2: 4685.095 ns/op
Iteration   1: 6331.385 ns/op
Iteration   2: 5727.032 ns/op
Iteration   3: 4293.016 ns/op
Iteration   4: 4130.203 ns/op
Iteration   5: 4548.021 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  5005.931 ±(99.9%) 3734.153 ns/op [Average]
  (min, avg, max) = (4130.203, 5005.931, 6331.385), stdev = 969.748
  CI (99.9%): [1271.778, 8740.085] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _2_K)

# Run progress: 83.67% complete, ETA 00:29:38
# Fork: 1 of 1
# Warmup Iteration   1: 11469.670 ns/op
# Warmup Iteration   2: 12979.563 ns/op
Iteration   1: 9813.121 ns/op
Iteration   2: 9936.256 ns/op
Iteration   3: 9458.455 ns/op
Iteration   4: 9672.739 ns/op
Iteration   5: 8007.155 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  9377.545 ±(99.9%) 3028.048 ns/op [Average]
  (min, avg, max) = (8007.155, 9377.545, 9936.256), stdev = 786.374
  CI (99.9%): [6349.498, 12405.593] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _4_K)

# Run progress: 84.00% complete, ETA 00:29:02
# Fork: 1 of 1
# Warmup Iteration   1: 19258.308 ns/op
# Warmup Iteration   2: 16902.415 ns/op
Iteration   1: 15593.156 ns/op
Iteration   2: 26860.462 ns/op
Iteration   3: 18250.176 ns/op
Iteration   4: 15855.238 ns/op
Iteration   5: 20425.416 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19396.890 ±(99.9%) 17759.925 ns/op [Average]
  (min, avg, max) = (15593.156, 19396.890, 26860.462), stdev = 4612.196
  CI (99.9%): [1636.965, 37156.814] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _8_K)

# Run progress: 84.33% complete, ETA 00:28:26
# Fork: 1 of 1
# Warmup Iteration   1: 49564.748 ns/op
# Warmup Iteration   2: 32531.037 ns/op
Iteration   1: 30574.822 ns/op
Iteration   2: 44069.105 ns/op
Iteration   3: 33570.813 ns/op
Iteration   4: 32924.863 ns/op
Iteration   5: 30396.597 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  34307.240 ±(99.9%) 21694.832 ns/op [Average]
  (min, avg, max) = (30396.597, 34307.240, 44069.105), stdev = 5634.079
  CI (99.9%): [12612.408, 56002.072] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JSON, inputType = _64_K)

# Run progress: 84.67% complete, ETA 00:27:50
# Fork: 1 of 1
# Warmup Iteration   1: 439405.003 ns/op
# Warmup Iteration   2: 307064.574 ns/op
Iteration   1: 254714.972 ns/op
Iteration   2: 268135.737 ns/op
Iteration   3: 323370.867 ns/op
Iteration   4: 338165.627 ns/op
Iteration   5: 295317.780 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  295940.997 ±(99.9%) 136255.447 ns/op [Average]
  (min, avg, max) = (254714.972, 295940.997, 338165.627), stdev = 35385.107
  CI (99.9%): [159685.550, 432196.444] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _1_K)

# Run progress: 85.00% complete, ETA 00:27:14
# Fork: 1 of 1
# Warmup Iteration   1: 2581.231 ns/op
# Warmup Iteration   2: 2058.769 ns/op
Iteration   1: 2451.533 ns/op
Iteration   2: 2402.181 ns/op
Iteration   3: 2626.056 ns/op
Iteration   4: 2185.478 ns/op
Iteration   5: 2010.529 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2335.155 ±(99.9%) 924.244 ns/op [Average]
  (min, avg, max) = (2010.529, 2335.155, 2626.056), stdev = 240.023
  CI (99.9%): [1410.911, 3259.400] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _2_K)

# Run progress: 85.33% complete, ETA 00:26:38
# Fork: 1 of 1
# Warmup Iteration   1: 5086.932 ns/op
# Warmup Iteration   2: 3685.184 ns/op
Iteration   1: 4800.487 ns/op
Iteration   2: 3578.665 ns/op
Iteration   3: 4345.057 ns/op
Iteration   4: 5106.088 ns/op
Iteration   5: 3449.099 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4255.879 ±(99.9%) 2814.476 ns/op [Average]
  (min, avg, max) = (3449.099, 4255.879, 5106.088), stdev = 730.910
  CI (99.9%): [1441.404, 7070.355] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _4_K)

# Run progress: 85.67% complete, ETA 00:26:02
# Fork: 1 of 1
# Warmup Iteration   1: 9557.674 ns/op
# Warmup Iteration   2: 6481.984 ns/op
Iteration   1: 6464.392 ns/op
Iteration   2: 7263.982 ns/op
Iteration   3: 9543.670 ns/op
Iteration   4: 6367.629 ns/op
Iteration   5: 7131.484 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7354.231 ±(99.9%) 4952.458 ns/op [Average]
  (min, avg, max) = (6367.629, 7354.231, 9543.670), stdev = 1286.138
  CI (99.9%): [2401.773, 12306.689] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _8_K)

# Run progress: 86.00% complete, ETA 00:25:26
# Fork: 1 of 1
# Warmup Iteration   1: 22029.677 ns/op
# Warmup Iteration   2: 22396.296 ns/op
Iteration   1: 15218.556 ns/op
Iteration   2: 19189.074 ns/op
Iteration   3: 14981.049 ns/op
Iteration   4: 20375.929 ns/op
Iteration   5: 25026.872 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18958.296 ±(99.9%) 15957.504 ns/op [Average]
  (min, avg, max) = (14981.049, 18958.296, 25026.872), stdev = 4144.113
  CI (99.9%): [3000.792, 34915.801] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCALA_PB, inputType = _64_K)

# Run progress: 86.33% complete, ETA 00:24:49
# Fork: 1 of 1
# Warmup Iteration   1: 230624.863 ns/op
# Warmup Iteration   2: 125751.522 ns/op
Iteration   1: 134234.652 ns/op
Iteration   2: 149512.667 ns/op
Iteration   3: 133694.730 ns/op
Iteration   4: 155970.896 ns/op
Iteration   5: 147117.778 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  144106.144 ±(99.9%) 37773.456 ns/op [Average]
  (min, avg, max) = (133694.730, 144106.144, 155970.896), stdev = 9809.647
  CI (99.9%): [106332.688, 181879.601] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _1_K)

# Run progress: 86.67% complete, ETA 00:24:13
# Fork: 1 of 1
# Warmup Iteration   1: 4540.874 ns/op
# Warmup Iteration   2: 4579.108 ns/op
Iteration   1: 3524.451 ns/op
Iteration   2: 4470.474 ns/op
Iteration   3: 4164.814 ns/op
Iteration   4: 3431.187 ns/op
Iteration   5: 4294.237 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3977.033 ±(99.9%) 1808.309 ns/op [Average]
  (min, avg, max) = (3431.187, 3977.033, 4470.474), stdev = 469.612
  CI (99.9%): [2168.724, 5785.342] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _2_K)

# Run progress: 87.00% complete, ETA 00:23:37
# Fork: 1 of 1
# Warmup Iteration   1: 8266.357 ns/op
# Warmup Iteration   2: 6343.869 ns/op
Iteration   1: 8090.445 ns/op
Iteration   2: 5972.770 ns/op
Iteration   3: 7232.119 ns/op
Iteration   4: 7665.051 ns/op
Iteration   5: 8212.071 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7434.491 ±(99.9%) 3479.269 ns/op [Average]
  (min, avg, max) = (5972.770, 7434.491, 8212.071), stdev = 903.555
  CI (99.9%): [3955.222, 10913.760] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _4_K)

# Run progress: 87.33% complete, ETA 00:23:01
# Fork: 1 of 1
# Warmup Iteration   1: 18503.772 ns/op
# Warmup Iteration   2: 17612.323 ns/op
Iteration   1: 13319.013 ns/op
Iteration   2: 14334.797 ns/op
Iteration   3: 13369.448 ns/op
Iteration   4: 14475.781 ns/op
Iteration   5: 13514.819 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  13802.772 ±(99.9%) 2144.553 ns/op [Average]
  (min, avg, max) = (13319.013, 13802.772, 14475.781), stdev = 556.934
  CI (99.9%): [11658.219, 15947.325] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _8_K)

# Run progress: 87.67% complete, ETA 00:22:25
# Fork: 1 of 1
# Warmup Iteration   1: 45354.324 ns/op
# Warmup Iteration   2: 33569.848 ns/op
Iteration   1: 31595.175 ns/op
Iteration   2: 32601.313 ns/op
Iteration   3: 34445.029 ns/op
Iteration   4: 38759.985 ns/op
Iteration   5: 25501.480 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  32580.596 ±(99.9%) 18541.793 ns/op [Average]
  (min, avg, max) = (25501.480, 32580.596, 38759.985), stdev = 4815.245
  CI (99.9%): [14038.803, 51122.389] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_PB, inputType = _64_K)

# Run progress: 88.00% complete, ETA 00:21:49
# Fork: 1 of 1
# Warmup Iteration   1: 304626.664 ns/op
# Warmup Iteration   2: 293528.320 ns/op
Iteration   1: 295322.657 ns/op
Iteration   2: 221778.519 ns/op
Iteration   3: 222164.583 ns/op
Iteration   4: 271005.152 ns/op
Iteration   5: 265790.260 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  255212.234 ±(99.9%) 124479.435 ns/op [Average]
  (min, avg, max) = (221778.519, 255212.234, 295322.657), stdev = 32326.914
  CI (99.9%): [130732.799, 379691.669] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _1_K)

# Run progress: 88.33% complete, ETA 00:21:13
# Fork: 1 of 1
# Warmup Iteration   1: 4816.935 ns/op
# Warmup Iteration   2: 4808.179 ns/op
Iteration   1: 4169.577 ns/op
Iteration   2: 5283.123 ns/op
Iteration   3: 4767.691 ns/op
Iteration   4: 3948.899 ns/op
Iteration   5: 3819.518 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4397.762 ±(99.9%) 2364.798 ns/op [Average]
  (min, avg, max) = (3819.518, 4397.762, 5283.123), stdev = 614.130
  CI (99.9%): [2032.964, 6762.559] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _2_K)

# Run progress: 88.67% complete, ETA 00:20:36
# Fork: 1 of 1
# Warmup Iteration   1: 9835.449 ns/op
# Warmup Iteration   2: 7643.174 ns/op
Iteration   1: 7657.601 ns/op
Iteration   2: 9494.988 ns/op
Iteration   3: 8340.317 ns/op
Iteration   4: 8418.758 ns/op
Iteration   5: 6518.329 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  8085.999 ±(99.9%) 4218.947 ns/op [Average]
  (min, avg, max) = (6518.329, 8085.999, 9494.988), stdev = 1095.647
  CI (99.9%): [3867.052, 12304.945] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _4_K)

# Run progress: 89.00% complete, ETA 00:20:00
# Fork: 1 of 1
# Warmup Iteration   1: 20290.098 ns/op
# Warmup Iteration   2: 15885.847 ns/op
Iteration   1: 18833.612 ns/op
Iteration   2: 12748.895 ns/op
Iteration   3: 13999.703 ns/op
Iteration   4: 14011.329 ns/op
Iteration   5: 16501.353 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  15218.978 ±(99.9%) 9384.127 ns/op [Average]
  (min, avg, max) = (12748.895, 15218.978, 18833.612), stdev = 2437.028
  CI (99.9%): [5834.851, 24603.105] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _8_K)

# Run progress: 89.33% complete, ETA 00:19:24
# Fork: 1 of 1
# Warmup Iteration   1: 44704.487 ns/op
# Warmup Iteration   2: 32727.362 ns/op
Iteration   1: 34368.034 ns/op
Iteration   2: 30979.647 ns/op
Iteration   3: 25223.571 ns/op
Iteration   4: 30482.082 ns/op
Iteration   5: 26563.782 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  29523.423 ±(99.9%) 14116.441 ns/op [Average]
  (min, avg, max) = (25223.571, 29523.423, 34368.034), stdev = 3665.995
  CI (99.9%): [15406.982, 43639.865] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = JAVA_THRIFT, inputType = _64_K)

# Run progress: 89.67% complete, ETA 00:18:48
# Fork: 1 of 1
# Warmup Iteration   1: 428837.134 ns/op
# Warmup Iteration   2: 288220.154 ns/op
Iteration   1: 346213.527 ns/op
Iteration   2: 436176.021 ns/op
Iteration   3: 329205.538 ns/op
Iteration   4: 293630.324 ns/op
Iteration   5: 377589.623 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  356563.007 ±(99.9%) 207331.486 ns/op [Average]
  (min, avg, max) = (293630.324, 356563.007, 436176.021), stdev = 53843.329
  CI (99.9%): [149231.520, 563894.493] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _1_K)

# Run progress: 90.00% complete, ETA 00:18:11
# Fork: 1 of 1
# Warmup Iteration   1: 4426.370 ns/op
# Warmup Iteration   2: 4305.251 ns/op
Iteration   1: 3870.428 ns/op
Iteration   2: 4628.222 ns/op
Iteration   3: 4753.650 ns/op
Iteration   4: 4610.269 ns/op
Iteration   5: 3745.985 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4321.711 ±(99.9%) 1825.406 ns/op [Average]
  (min, avg, max) = (3745.985, 4321.711, 4753.650), stdev = 474.052
  CI (99.9%): [2496.304, 6147.117] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _2_K)

# Run progress: 90.33% complete, ETA 00:17:35
# Fork: 1 of 1
# Warmup Iteration   1: 10811.810 ns/op
# Warmup Iteration   2: 7540.494 ns/op
Iteration   1: 8562.119 ns/op
Iteration   2: 7517.679 ns/op
Iteration   3: 7055.707 ns/op
Iteration   4: 7065.067 ns/op
Iteration   5: 6610.846 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7362.284 ±(99.9%) 2862.674 ns/op [Average]
  (min, avg, max) = (6610.846, 7362.284, 8562.119), stdev = 743.427
  CI (99.9%): [4499.609, 10224.958] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _4_K)

# Run progress: 90.67% complete, ETA 00:16:59
# Fork: 1 of 1
# Warmup Iteration   1: 17709.459 ns/op
# Warmup Iteration   2: 14283.680 ns/op
Iteration   1: 16304.402 ns/op
Iteration   2: 22169.926 ns/op
Iteration   3: 18027.248 ns/op
Iteration   4: 19651.506 ns/op
Iteration   5: 17647.037 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18760.024 ±(99.9%) 8659.231 ns/op [Average]
  (min, avg, max) = (16304.402, 18760.024, 22169.926), stdev = 2248.775
  CI (99.9%): [10100.792, 27419.255] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _8_K)

# Run progress: 91.00% complete, ETA 00:16:23
# Fork: 1 of 1
# Warmup Iteration   1: 43227.094 ns/op
# Warmup Iteration   2: 24983.893 ns/op
Iteration   1: 23576.864 ns/op
Iteration   2: 30589.357 ns/op
Iteration   3: 29796.617 ns/op
Iteration   4: 23596.762 ns/op
Iteration   5: 26708.782 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  26853.677 ±(99.9%) 12768.557 ns/op [Average]
  (min, avg, max) = (23576.864, 26853.677, 30589.357), stdev = 3315.954
  CI (99.9%): [14085.119, 39622.234] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SCROOGE, inputType = _64_K)

# Run progress: 91.33% complete, ETA 00:15:46
# Fork: 1 of 1
# Warmup Iteration   1: 343841.918 ns/op
# Warmup Iteration   2: 277934.505 ns/op
Iteration   1: 332868.870 ns/op
Iteration   2: 236608.866 ns/op
Iteration   3: 289249.475 ns/op
Iteration   4: 353132.759 ns/op
Iteration   5: 238345.050 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  290041.004 ±(99.9%) 205052.548 ns/op [Average]
  (min, avg, max) = (236608.866, 290041.004, 353132.759), stdev = 53251.496
  CI (99.9%): [84988.456, 495093.552] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _1_K)

# Run progress: 91.67% complete, ETA 00:15:10
# Fork: 1 of 1
# Warmup Iteration   1: 21151.812 ns/op
# Warmup Iteration   2: 22645.764 ns/op
Iteration   1: 20861.293 ns/op
Iteration   2: 20732.851 ns/op
Iteration   3: 14942.838 ns/op
Iteration   4: 15973.187 ns/op
Iteration   5: 18248.932 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  18151.820 ±(99.9%) 10378.254 ns/op [Average]
  (min, avg, max) = (14942.838, 18151.820, 20861.293), stdev = 2695.200
  CI (99.9%): [7773.566, 28530.075] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _2_K)

# Run progress: 92.00% complete, ETA 00:14:34
# Fork: 1 of 1
# Warmup Iteration   1: 45311.136 ns/op
# Warmup Iteration   2: 25305.795 ns/op
Iteration   1: 23472.539 ns/op
Iteration   2: 25963.347 ns/op
Iteration   3: 25474.175 ns/op
Iteration   4: 30007.239 ns/op
Iteration   5: 27065.954 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  26396.651 ±(99.9%) 9248.253 ns/op [Average]
  (min, avg, max) = (23472.539, 26396.651, 30007.239), stdev = 2401.742
  CI (99.9%): [17148.398, 35644.904] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _4_K)

# Run progress: 92.33% complete, ETA 00:13:57
# Fork: 1 of 1
# Warmup Iteration   1: 57535.790 ns/op
# Warmup Iteration   2: 58296.720 ns/op
Iteration   1: 41784.590 ns/op
Iteration   2: 51920.404 ns/op
Iteration   3: 46222.083 ns/op
Iteration   4: 50020.172 ns/op
Iteration   5: 45082.276 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  47005.905 ±(99.9%) 15500.331 ns/op [Average]
  (min, avg, max) = (41784.590, 47005.905, 51920.404), stdev = 4025.387
  CI (99.9%): [31505.574, 62506.236] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _8_K)

# Run progress: 92.67% complete, ETA 00:13:21
# Fork: 1 of 1
# Warmup Iteration   1: 135561.434 ns/op
# Warmup Iteration   2: 104736.711 ns/op
Iteration   1: 97255.305 ns/op
Iteration   2: 99048.581 ns/op
Iteration   3: 97918.415 ns/op
Iteration   4: 93921.283 ns/op
Iteration   5: 107962.687 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  99221.254 ±(99.9%) 20201.619 ns/op [Average]
  (min, avg, max) = (93921.283, 99221.254, 107962.687), stdev = 5246.296
  CI (99.9%): [79019.635, 119422.873] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = SERIALIZABLE, inputType = _64_K)

# Run progress: 93.00% complete, ETA 00:12:45
# Fork: 1 of 1
# Warmup Iteration   1: 934049.134 ns/op
# Warmup Iteration   2: 767691.766 ns/op
Iteration   1: 855361.522 ns/op
Iteration   2: 827254.932 ns/op
Iteration   3: 829676.307 ns/op
Iteration   4: 804616.827 ns/op
Iteration   5: 877833.525 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  838948.623 ±(99.9%) 108619.719 ns/op [Average]
  (min, avg, max) = (804616.827, 838948.623, 877833.525), stdev = 28208.196
  CI (99.9%): [730328.904, 947568.342] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _1_K)

# Run progress: 93.33% complete, ETA 00:12:08
# Fork: 1 of 1
# Warmup Iteration   1: 24577.829 ns/op
# Warmup Iteration   2: 20406.844 ns/op
Iteration   1: 20360.484 ns/op
Iteration   2: 18147.266 ns/op
Iteration   3: 19617.624 ns/op
Iteration   4: 19733.308 ns/op
Iteration   5: 20124.811 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  19596.699 ±(99.9%) 3324.862 ns/op [Average]
  (min, avg, max) = (18147.266, 19596.699, 20360.484), stdev = 863.456
  CI (99.9%): [16271.837, 22921.560] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _2_K)

# Run progress: 93.67% complete, ETA 00:11:32
# Fork: 1 of 1
# Warmup Iteration   1: 43254.384 ns/op
# Warmup Iteration   2: 36389.722 ns/op
Iteration   1: 29932.029 ns/op
Iteration   2: 30500.694 ns/op
Iteration   3: 32532.830 ns/op
Iteration   4: 30203.453 ns/op
Iteration   5: 28691.745 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  30372.150 ±(99.9%) 5353.290 ns/op [Average]
  (min, avg, max) = (28691.745, 30372.150, 32532.830), stdev = 1390.232
  CI (99.9%): [25018.860, 35725.440] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _4_K)

# Run progress: 94.00% complete, ETA 00:10:56
# Fork: 1 of 1
# Warmup Iteration   1: 75765.725 ns/op
# Warmup Iteration   2: 56425.222 ns/op
Iteration   1: 68974.872 ns/op
Iteration   2: 55443.320 ns/op
Iteration   3: 59920.625 ns/op
Iteration   4: 63927.029 ns/op
Iteration   5: 61063.328 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  61865.835 ±(99.9%) 19297.786 ns/op [Average]
  (min, avg, max) = (55443.320, 61865.835, 68974.872), stdev = 5011.574
  CI (99.9%): [42568.048, 81163.621] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _8_K)

# Run progress: 94.33% complete, ETA 00:10:19
# Fork: 1 of 1
# Warmup Iteration   1: 219677.510 ns/op
# Warmup Iteration   2: 169551.795 ns/op
Iteration   1: 152904.708 ns/op
Iteration   2: 170939.818 ns/op
Iteration   3: 197909.475 ns/op
Iteration   4: 125324.339 ns/op
Iteration   5: 159118.380 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  161239.344 ±(99.9%) 101926.661 ns/op [Average]
  (min, avg, max) = (125324.339, 161239.344, 197909.475), stdev = 26470.030
  CI (99.9%): [59312.683, 263166.005] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = PICKLING, inputType = _64_K)

# Run progress: 94.67% complete, ETA 00:09:43
# Fork: 1 of 1
# Warmup Iteration   1: 1511502.140 ns/op
# Warmup Iteration   2: 1285380.628 ns/op
Iteration   1: 1296262.410 ns/op
Iteration   2: 1422994.247 ns/op
Iteration   3: 1553306.887 ns/op
Iteration   4: 1212942.132 ns/op
Iteration   5: 1098187.194 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1316738.574 ±(99.9%) 683997.598 ns/op [Average]
  (min, avg, max) = (1098187.194, 1316738.574, 1553306.887), stdev = 177632.004
  CI (99.9%): [632740.976, 2000736.172] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _1_K)

# Run progress: 95.00% complete, ETA 00:09:06
# Fork: 1 of 1
# Warmup Iteration   1: 2427.095 ns/op
# Warmup Iteration   2: 2289.498 ns/op
Iteration   1: 2214.372 ns/op
Iteration   2: 2370.138 ns/op
Iteration   3: 1965.612 ns/op
Iteration   4: 2500.950 ns/op
Iteration   5: 2444.940 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  2299.202 ±(99.9%) 829.124 ns/op [Average]
  (min, avg, max) = (1965.612, 2299.202, 2500.950), stdev = 215.321
  CI (99.9%): [1470.079, 3128.326] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _2_K)

# Run progress: 95.33% complete, ETA 00:08:30
# Fork: 1 of 1
# Warmup Iteration   1: 3928.644 ns/op
# Warmup Iteration   2: 3541.043 ns/op
Iteration   1: 4253.591 ns/op
Iteration   2: 3536.415 ns/op
Iteration   3: 3601.606 ns/op
Iteration   4: 3578.639 ns/op
Iteration   5: 3653.220 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  3724.694 ±(99.9%) 1150.003 ns/op [Average]
  (min, avg, max) = (3536.415, 3724.694, 4253.591), stdev = 298.652
  CI (99.9%): [2574.692, 4874.697] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _4_K)

# Run progress: 95.67% complete, ETA 00:07:54
# Fork: 1 of 1
# Warmup Iteration   1: 7591.951 ns/op
# Warmup Iteration   2: 6740.923 ns/op
Iteration   1: 7768.582 ns/op
Iteration   2: 7752.156 ns/op
Iteration   3: 7914.037 ns/op
Iteration   4: 8301.107 ns/op
Iteration   5: 8135.435 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7974.264 ±(99.9%) 919.463 ns/op [Average]
  (min, avg, max) = (7752.156, 7974.264, 8301.107), stdev = 238.781
  CI (99.9%): [7054.801, 8893.726] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _8_K)

# Run progress: 96.00% complete, ETA 00:07:17
# Fork: 1 of 1
# Warmup Iteration   1: 12382.053 ns/op
# Warmup Iteration   2: 12333.431 ns/op
Iteration   1: 9927.649 ns/op
Iteration   2: 10619.652 ns/op
Iteration   3: 11667.908 ns/op
Iteration   4: 12594.895 ns/op
Iteration   5: 12906.498 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  11543.320 ±(99.9%) 4887.111 ns/op [Average]
  (min, avg, max) = (9927.649, 11543.320, 12906.498), stdev = 1269.167
  CI (99.9%): [6656.210, 16430.431] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = BOOPICKLE, inputType = _64_K)

# Run progress: 96.33% complete, ETA 00:06:41
# Fork: 1 of 1
# Warmup Iteration   1: 105075.360 ns/op
# Warmup Iteration   2: 102695.853 ns/op
Iteration   1: 103732.065 ns/op
Iteration   2: 100004.224 ns/op
Iteration   3: 109547.292 ns/op
Iteration   4: 97244.112 ns/op
Iteration   5: 118340.785 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  105773.696 ±(99.9%) 32353.466 ns/op [Average]
  (min, avg, max) = (97244.112, 105773.696, 118340.785), stdev = 8402.092
  CI (99.9%): [73420.230, 138127.162] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _1_K)

# Run progress: 96.67% complete, ETA 00:06:04
# Fork: 1 of 1
# Warmup Iteration   1: 4428.234 ns/op
# Warmup Iteration   2: 3715.384 ns/op
Iteration   1: 5047.307 ns/op
Iteration   2: 4059.865 ns/op
Iteration   3: 3843.366 ns/op
Iteration   4: 3953.398 ns/op
Iteration   5: 4765.796 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  4333.946 ±(99.9%) 2070.042 ns/op [Average]
  (min, avg, max) = (3843.366, 4333.946, 5047.307), stdev = 537.583
  CI (99.9%): [2263.905, 6403.988] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _2_K)

# Run progress: 97.00% complete, ETA 00:05:28
# Fork: 1 of 1
# Warmup Iteration   1: 6920.236 ns/op
# Warmup Iteration   2: 6885.771 ns/op
Iteration   1: 7014.420 ns/op
Iteration   2: 10950.893 ns/op
Iteration   3: 6777.333 ns/op
Iteration   4: 7212.504 ns/op
Iteration   5: 7563.614 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  7903.753 ±(99.9%) 6652.348 ns/op [Average]
  (min, avg, max) = (6777.333, 7903.753, 10950.893), stdev = 1727.594
  CI (99.9%): [1251.404, 14556.101] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _4_K)

# Run progress: 97.33% complete, ETA 00:04:51
# Fork: 1 of 1
# Warmup Iteration   1: 14013.481 ns/op
# Warmup Iteration   2: 13868.173 ns/op
Iteration   1: 11984.606 ns/op
Iteration   2: 14488.025 ns/op
Iteration   3: 11954.504 ns/op
Iteration   4: 12339.735 ns/op
Iteration   5: 12708.150 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  12695.004 ±(99.9%) 4035.982 ns/op [Average]
  (min, avg, max) = (11954.504, 12695.004, 14488.025), stdev = 1048.132
  CI (99.9%): [8659.022, 16730.986] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _8_K)

# Run progress: 97.67% complete, ETA 00:04:15
# Fork: 1 of 1
# Warmup Iteration   1: 34017.267 ns/op
# Warmup Iteration   2: 24566.005 ns/op
Iteration   1: 41554.281 ns/op
Iteration   2: 25374.315 ns/op
Iteration   3: 29657.297 ns/op
Iteration   4: 34600.294 ns/op
Iteration   5: 42790.580 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  34795.354 ±(99.9%) 28867.016 ns/op [Average]
  (min, avg, max) = (25374.315, 34795.354, 42790.580), stdev = 7496.672
  CI (99.9%): [5928.338, 63662.370] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CHILL, inputType = _64_K)

# Run progress: 98.00% complete, ETA 00:03:38
# Fork: 1 of 1
# Warmup Iteration   1: 254133.476 ns/op
# Warmup Iteration   2: 320086.060 ns/op
Iteration   1: 435604.424 ns/op
Iteration   2: 432586.169 ns/op
Iteration   3: 230699.934 ns/op
Iteration   4: 337028.716 ns/op
Iteration   5: 368194.275 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  360822.704 ±(99.9%) 323859.127 ns/op [Average]
  (min, avg, max) = (230699.934, 360822.704, 435604.424), stdev = 84105.187
  CI (99.9%): [36963.576, 684681.831] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _1_K)

# Run progress: 98.33% complete, ETA 00:03:02
# Fork: 1 of 1
# Warmup Iteration   1: 17521.416 ns/op
# Warmup Iteration   2: 18809.697 ns/op
Iteration   1: 14110.628 ns/op
Iteration   2: 18068.240 ns/op
Iteration   3: 18557.272 ns/op
Iteration   4: 14120.566 ns/op
Iteration   5: 17103.216 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  16391.985 ±(99.9%) 8251.545 ns/op [Average]
  (min, avg, max) = (14110.628, 16391.985, 18557.272), stdev = 2142.900
  CI (99.9%): [8140.439, 24643.530] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _2_K)

# Run progress: 98.67% complete, ETA 00:02:26
# Fork: 1 of 1
# Warmup Iteration   1: 30375.501 ns/op
# Warmup Iteration   2: 28268.162 ns/op
Iteration   1: 27648.222 ns/op
Iteration   2: 31390.024 ns/op
Iteration   3: 32397.919 ns/op
Iteration   4: 27655.833 ns/op
Iteration   5: 40006.531 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  31819.706 ±(99.9%) 19471.677 ns/op [Average]
  (min, avg, max) = (27648.222, 31819.706, 40006.531), stdev = 5056.733
  CI (99.9%): [12348.029, 51291.383] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _4_K)

# Run progress: 99.00% complete, ETA 00:01:49
# Fork: 1 of 1
# Warmup Iteration   1: 63726.472 ns/op
# Warmup Iteration   2: 62621.059 ns/op
Iteration   1: 71518.986 ns/op
Iteration   2: 69114.667 ns/op
Iteration   3: 58872.500 ns/op
Iteration   4: 61685.725 ns/op
Iteration   5: 55595.130 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  63357.402 ±(99.9%) 26039.526 ns/op [Average]
  (min, avg, max) = (55595.130, 63357.402, 71518.986), stdev = 6762.382
  CI (99.9%): [37317.876, 89396.927] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _8_K)

# Run progress: 99.33% complete, ETA 00:01:13
# Fork: 1 of 1
# Warmup Iteration   1: 158556.742 ns/op
# Warmup Iteration   2: 145103.517 ns/op
Iteration   1: 170995.150 ns/op
Iteration   2: 131803.918 ns/op
Iteration   3: 126524.782 ns/op
Iteration   4: 156783.426 ns/op
Iteration   5: 122522.065 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  141725.868 ±(99.9%) 81268.775 ns/op [Average]
  (min, avg, max) = (122522.065, 141725.868, 170995.150), stdev = 21105.243
  CI (99.9%): [60457.093, 222994.643] (assumes normal distribution)


# JMH 1.17.4 (released 304 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 5 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 2 threads, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.serialization.jmh.SiteBenchmark.serialization
# Parameters: (converterType = CIRCE, inputType = _64_K)

# Run progress: 99.67% complete, ETA 00:00:36
# Fork: 1 of 1
# Warmup Iteration   1: 1506476.169 ns/op
# Warmup Iteration   2: 1260664.450 ns/op
Iteration   1: 1155144.728 ns/op
Iteration   2: 1320811.580 ns/op
Iteration   3: 1237342.362 ns/op
Iteration   4: 1471648.422 ns/op
Iteration   5: 1239054.387 ns/op


Result "com.komanov.serialization.jmh.SiteBenchmark.serialization":
  1284800.296 ±(99.9%) 461131.873 ns/op [Average]
  (min, avg, max) = (1155144.728, 1284800.296, 1471648.422), stdev = 119754.483
  CI (99.9%): [823668.423, 1745932.169] (assumes normal distribution)


# Run complete. Total time: 03:02:35

Benchmark                       (converterType)  (inputType)  Mode  Cnt         Score         Error  Units
EventBenchmark.both                        JSON         _1_K  avgt    5     20537.513 ±    6503.219  ns/op
EventBenchmark.both                        JSON         _2_K  avgt    5     39529.557 ±   12536.870  ns/op
EventBenchmark.both                        JSON         _4_K  avgt    5     80138.538 ±   47414.141  ns/op
EventBenchmark.both                        JSON         _8_K  avgt    5    186341.185 ±   53411.117  ns/op
EventBenchmark.both                        JSON        _64_K  avgt    5   1716934.355 ±  759712.952  ns/op
EventBenchmark.both                    SCALA_PB         _1_K  avgt    5      5971.214 ±    1896.505  ns/op
EventBenchmark.both                    SCALA_PB         _2_K  avgt    5     12352.664 ±    4597.910  ns/op
EventBenchmark.both                    SCALA_PB         _4_K  avgt    5     24612.644 ±    6631.674  ns/op
EventBenchmark.both                    SCALA_PB         _8_K  avgt    5     68443.413 ±   28297.128  ns/op
EventBenchmark.both                    SCALA_PB        _64_K  avgt    5    671005.553 ±  147939.060  ns/op
EventBenchmark.both                     JAVA_PB         _1_K  avgt    5      8548.755 ±    3934.508  ns/op
EventBenchmark.both                     JAVA_PB         _2_K  avgt    5     18990.293 ±    8199.816  ns/op
EventBenchmark.both                     JAVA_PB         _4_K  avgt    5     34560.863 ±   11431.295  ns/op
EventBenchmark.both                     JAVA_PB         _8_K  avgt    5     66501.603 ±    8262.859  ns/op
EventBenchmark.both                     JAVA_PB        _64_K  avgt    5    654471.440 ±   88061.041  ns/op
EventBenchmark.both                 JAVA_THRIFT         _1_K  avgt    5      9036.713 ±    1025.579  ns/op
EventBenchmark.both                 JAVA_THRIFT         _2_K  avgt    5     18003.114 ±    3917.351  ns/op
EventBenchmark.both                 JAVA_THRIFT         _4_K  avgt    5     37489.613 ±    8342.597  ns/op
EventBenchmark.both                 JAVA_THRIFT         _8_K  avgt    5     82869.081 ±   33591.132  ns/op
EventBenchmark.both                 JAVA_THRIFT        _64_K  avgt    5    801672.991 ±  171070.544  ns/op
EventBenchmark.both                     SCROOGE         _1_K  avgt    5     11145.555 ±    2130.748  ns/op
EventBenchmark.both                     SCROOGE         _2_K  avgt    5     20608.381 ±    6101.502  ns/op
EventBenchmark.both                     SCROOGE         _4_K  avgt    5     41614.841 ±    6073.871  ns/op
EventBenchmark.both                     SCROOGE         _8_K  avgt    5     83829.114 ±   15774.548  ns/op
EventBenchmark.both                     SCROOGE        _64_K  avgt    5    948592.687 ±  383619.143  ns/op
EventBenchmark.both                SERIALIZABLE         _1_K  avgt    5    127005.981 ±   26850.246  ns/op
EventBenchmark.both                SERIALIZABLE         _2_K  avgt    5    227642.623 ±   57390.404  ns/op
EventBenchmark.both                SERIALIZABLE         _4_K  avgt    5    579665.105 ±  150982.287  ns/op
EventBenchmark.both                SERIALIZABLE         _8_K  avgt    5   1353494.242 ±  749611.904  ns/op
EventBenchmark.both                SERIALIZABLE        _64_K  avgt    5  11361510.881 ± 4043415.666  ns/op
EventBenchmark.both                    PICKLING         _1_K  avgt    5     85792.103 ±    7743.637  ns/op
EventBenchmark.both                    PICKLING         _2_K  avgt    5    172139.217 ±   49510.058  ns/op
EventBenchmark.both                    PICKLING         _4_K  avgt    5    408272.281 ±  199753.730  ns/op
EventBenchmark.both                    PICKLING         _8_K  avgt    5    928177.374 ±  206695.223  ns/op
EventBenchmark.both                    PICKLING        _64_K  avgt    5   8999771.823 ± 3452551.861  ns/op
EventBenchmark.both                   BOOPICKLE         _1_K  avgt    5      6467.685 ±    2492.174  ns/op
EventBenchmark.both                   BOOPICKLE         _2_K  avgt    5     11149.747 ±    3438.907  ns/op
EventBenchmark.both                   BOOPICKLE         _4_K  avgt    5     21025.445 ±    4805.807  ns/op
EventBenchmark.both                   BOOPICKLE         _8_K  avgt    5     46762.999 ±   15995.788  ns/op
EventBenchmark.both                   BOOPICKLE        _64_K  avgt    5    454301.725 ±  162368.438  ns/op
EventBenchmark.both                       CHILL         _1_K  avgt    5     18598.642 ±    5993.783  ns/op
EventBenchmark.both                       CHILL         _2_K  avgt    5     32926.565 ±     951.850  ns/op
EventBenchmark.both                       CHILL         _4_K  avgt    5     71101.139 ±    3833.166  ns/op
EventBenchmark.both                       CHILL         _8_K  avgt    5    149559.678 ±    3206.878  ns/op
EventBenchmark.both                       CHILL        _64_K  avgt    5   1381250.485 ±  113345.611  ns/op
EventBenchmark.both                       CIRCE         _1_K  avgt    5     68373.340 ±   15903.323  ns/op
EventBenchmark.both                       CIRCE         _2_K  avgt    5    115050.895 ±   31616.371  ns/op
EventBenchmark.both                       CIRCE         _4_K  avgt    5    276003.637 ±  100776.132  ns/op
EventBenchmark.both                       CIRCE         _8_K  avgt    5    663402.951 ±  167830.187  ns/op
EventBenchmark.both                       CIRCE        _64_K  avgt    5   5865838.097 ± 1764847.821  ns/op
EventBenchmark.deserialization             JSON         _1_K  avgt    5     11527.183 ±    4835.379  ns/op
EventBenchmark.deserialization             JSON         _2_K  avgt    5     21772.178 ±   10164.467  ns/op
EventBenchmark.deserialization             JSON         _4_K  avgt    5     49047.514 ±   18503.391  ns/op
EventBenchmark.deserialization             JSON         _8_K  avgt    5     99603.470 ±   46510.495  ns/op
EventBenchmark.deserialization             JSON        _64_K  avgt    5    957760.729 ±  652418.536  ns/op
EventBenchmark.deserialization         SCALA_PB         _1_K  avgt    5      4039.122 ±    1797.248  ns/op
EventBenchmark.deserialization         SCALA_PB         _2_K  avgt    5      7689.744 ±    1879.865  ns/op
EventBenchmark.deserialization         SCALA_PB         _4_K  avgt    5     14222.914 ±    4317.513  ns/op
EventBenchmark.deserialization         SCALA_PB         _8_K  avgt    5     31448.681 ±    4981.926  ns/op
EventBenchmark.deserialization         SCALA_PB        _64_K  avgt    5    341797.810 ±  117915.754  ns/op
EventBenchmark.deserialization          JAVA_PB         _1_K  avgt    5      3512.821 ±     744.505  ns/op
EventBenchmark.deserialization          JAVA_PB         _2_K  avgt    5      8361.202 ±    3640.617  ns/op
EventBenchmark.deserialization          JAVA_PB         _4_K  avgt    5     14536.526 ±    4248.731  ns/op
EventBenchmark.deserialization          JAVA_PB         _8_K  avgt    5     38348.477 ±   13413.797  ns/op
EventBenchmark.deserialization          JAVA_PB        _64_K  avgt    5    312403.705 ±  121655.461  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _1_K  avgt    5      3858.262 ±    1086.885  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _2_K  avgt    5      7988.668 ±    3697.458  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _4_K  avgt    5     18859.803 ±    7867.768  ns/op
EventBenchmark.deserialization      JAVA_THRIFT         _8_K  avgt    5     33036.013 ±   20093.410  ns/op
EventBenchmark.deserialization      JAVA_THRIFT        _64_K  avgt    5    318147.980 ±  125025.377  ns/op
EventBenchmark.deserialization          SCROOGE         _1_K  avgt    5      4269.779 ±    2529.669  ns/op
EventBenchmark.deserialization          SCROOGE         _2_K  avgt    5      8286.711 ±    5215.096  ns/op
EventBenchmark.deserialization          SCROOGE         _4_K  avgt    5     15381.133 ±    8322.492  ns/op
EventBenchmark.deserialization          SCROOGE         _8_K  avgt    5     32404.426 ±   12363.001  ns/op
EventBenchmark.deserialization          SCROOGE        _64_K  avgt    5    397684.485 ±  149535.903  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _1_K  avgt    5    105129.947 ±   76422.800  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _2_K  avgt    5    201596.117 ±  114765.793  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _4_K  avgt    5    421051.832 ±  178839.356  ns/op
EventBenchmark.deserialization     SERIALIZABLE         _8_K  avgt    5   1033552.854 ±  581052.515  ns/op
EventBenchmark.deserialization     SERIALIZABLE        _64_K  avgt    5   9737292.342 ± 5352363.567  ns/op
EventBenchmark.deserialization         PICKLING         _1_K  avgt    5     13997.781 ±    2312.111  ns/op
EventBenchmark.deserialization         PICKLING         _2_K  avgt    5     28556.114 ±   11582.999  ns/op
EventBenchmark.deserialization         PICKLING         _4_K  avgt    5     67642.437 ±    9045.821  ns/op
EventBenchmark.deserialization         PICKLING         _8_K  avgt    5    137714.853 ±   41520.849  ns/op
EventBenchmark.deserialization         PICKLING        _64_K  avgt    5   1300367.527 ±  313946.849  ns/op
EventBenchmark.deserialization        BOOPICKLE         _1_K  avgt    5      2790.307 ±    1256.239  ns/op
EventBenchmark.deserialization        BOOPICKLE         _2_K  avgt    5      4817.924 ±    1440.695  ns/op
EventBenchmark.deserialization        BOOPICKLE         _4_K  avgt    5      9878.506 ±    4974.835  ns/op
EventBenchmark.deserialization        BOOPICKLE         _8_K  avgt    5     17373.789 ±    2673.512  ns/op
EventBenchmark.deserialization        BOOPICKLE        _64_K  avgt    5    198804.326 ±   83377.024  ns/op
EventBenchmark.deserialization            CIRCE         _1_K  avgt    5     33140.142 ±   16098.147  ns/op
EventBenchmark.deserialization            CIRCE         _2_K  avgt    5     61117.709 ±   19454.808  ns/op
EventBenchmark.deserialization            CIRCE         _4_K  avgt    5    153180.097 ±   93848.572  ns/op
EventBenchmark.deserialization            CIRCE         _8_K  avgt    5    303208.509 ±  176425.726  ns/op
EventBenchmark.deserialization            CIRCE        _64_K  avgt    5   3024595.459 ± 2090296.846  ns/op
EventBenchmark.serialization               JSON         _1_K  avgt    5      9479.304 ±    3825.886  ns/op
EventBenchmark.serialization               JSON         _2_K  avgt    5     17993.918 ±    3316.978  ns/op
EventBenchmark.serialization               JSON         _4_K  avgt    5     34278.871 ±   11847.946  ns/op
EventBenchmark.serialization               JSON         _8_K  avgt    5     94528.303 ±   84347.043  ns/op
EventBenchmark.serialization               JSON        _64_K  avgt    5    702841.703 ±  424149.429  ns/op
EventBenchmark.serialization           SCALA_PB         _1_K  avgt    5      2471.634 ±    1096.797  ns/op
EventBenchmark.serialization           SCALA_PB         _2_K  avgt    5      4782.504 ±    3240.003  ns/op
EventBenchmark.serialization           SCALA_PB         _4_K  avgt    5      9520.200 ±    4018.722  ns/op
EventBenchmark.serialization           SCALA_PB         _8_K  avgt    5     19074.429 ±   10253.060  ns/op
EventBenchmark.serialization           SCALA_PB        _64_K  avgt    5    210790.370 ±  140132.665  ns/op
EventBenchmark.serialization            JAVA_PB         _1_K  avgt    5      4095.699 ±    1345.186  ns/op
EventBenchmark.serialization            JAVA_PB         _2_K  avgt    5      8295.457 ±    1945.580  ns/op
EventBenchmark.serialization            JAVA_PB         _4_K  avgt    5     17353.238 ±   12122.697  ns/op
EventBenchmark.serialization            JAVA_PB         _8_K  avgt    5     33727.173 ±   10868.606  ns/op
EventBenchmark.serialization            JAVA_PB        _64_K  avgt    5    358043.778 ±   79151.180  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _1_K  avgt    5      5453.242 ±    4451.488  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _2_K  avgt    5      9665.447 ±    5318.856  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _4_K  avgt    5     18625.406 ±   11337.777  ns/op
EventBenchmark.serialization        JAVA_THRIFT         _8_K  avgt    5     40157.393 ±    6761.252  ns/op
EventBenchmark.serialization        JAVA_THRIFT        _64_K  avgt    5    557087.689 ±  179427.422  ns/op
EventBenchmark.serialization            SCROOGE         _1_K  avgt    5      5710.247 ±    1871.920  ns/op
EventBenchmark.serialization            SCROOGE         _2_K  avgt    5     12089.263 ±    2483.411  ns/op
EventBenchmark.serialization            SCROOGE         _4_K  avgt    5     23474.248 ±    5693.421  ns/op
EventBenchmark.serialization            SCROOGE         _8_K  avgt    5     52591.116 ±   29048.505  ns/op
EventBenchmark.serialization            SCROOGE        _64_K  avgt    5    551651.666 ±  395756.887  ns/op
EventBenchmark.serialization       SERIALIZABLE         _1_K  avgt    5     24971.274 ±    7562.333  ns/op
EventBenchmark.serialization       SERIALIZABLE         _2_K  avgt    5     40462.679 ±   21017.365  ns/op
EventBenchmark.serialization       SERIALIZABLE         _4_K  avgt    5     95889.780 ±   16926.828  ns/op
EventBenchmark.serialization       SERIALIZABLE         _8_K  avgt    5    223303.000 ±  151084.650  ns/op
EventBenchmark.serialization       SERIALIZABLE        _64_K  avgt    5   1998970.654 ±  421042.360  ns/op
EventBenchmark.serialization           PICKLING         _1_K  avgt    5     84205.096 ±   19298.385  ns/op
EventBenchmark.serialization           PICKLING         _2_K  avgt    5    146568.283 ±  114892.960  ns/op
EventBenchmark.serialization           PICKLING         _4_K  avgt    5    309080.023 ±   83068.099  ns/op
EventBenchmark.serialization           PICKLING         _8_K  avgt    5    722963.754 ±  278918.492  ns/op
EventBenchmark.serialization           PICKLING        _64_K  avgt    5   6462805.527 ± 1017777.128  ns/op
EventBenchmark.serialization          BOOPICKLE         _1_K  avgt    5      3914.544 ±     753.392  ns/op
EventBenchmark.serialization          BOOPICKLE         _2_K  avgt    5      6969.372 ±    2280.922  ns/op
EventBenchmark.serialization          BOOPICKLE         _4_K  avgt    5     14326.210 ±    4419.869  ns/op
EventBenchmark.serialization          BOOPICKLE         _8_K  avgt    5     27106.511 ±    6812.219  ns/op
EventBenchmark.serialization          BOOPICKLE        _64_K  avgt    5    248428.526 ±  103311.201  ns/op
EventBenchmark.serialization              CHILL         _1_K  avgt    5      9337.256 ±    5267.549  ns/op
EventBenchmark.serialization              CHILL         _2_K  avgt    5     17287.767 ±    3939.598  ns/op
EventBenchmark.serialization              CHILL         _4_K  avgt    5     35287.924 ±    4358.046  ns/op
EventBenchmark.serialization              CHILL         _8_K  avgt    5     74106.216 ±    5558.793  ns/op
EventBenchmark.serialization              CHILL        _64_K  avgt    5    636240.630 ±   42901.273  ns/op
EventBenchmark.serialization              CIRCE         _1_K  avgt    5     31690.381 ±   11476.033  ns/op
EventBenchmark.serialization              CIRCE         _2_K  avgt    5     55692.493 ±   18711.051  ns/op
EventBenchmark.serialization              CIRCE         _4_K  avgt    5    120268.748 ±   66773.803  ns/op
EventBenchmark.serialization              CIRCE         _8_K  avgt    5    299109.370 ±  184346.490  ns/op
EventBenchmark.serialization              CIRCE        _64_K  avgt    5   2765308.679 ± 1336744.059  ns/op
SiteBenchmark.both                         JSON         _1_K  avgt    5     13760.417 ±    4346.011  ns/op
SiteBenchmark.both                         JSON         _2_K  avgt    5     30437.263 ±   12043.595  ns/op
SiteBenchmark.both                         JSON         _4_K  avgt    5     53763.539 ±   22645.433  ns/op
SiteBenchmark.both                         JSON         _8_K  avgt    5     95220.003 ±   31403.253  ns/op
SiteBenchmark.both                         JSON        _64_K  avgt    5    736668.631 ±  481359.675  ns/op
SiteBenchmark.both                     SCALA_PB         _1_K  avgt    5      6053.208 ±    1853.493  ns/op
SiteBenchmark.both                     SCALA_PB         _2_K  avgt    5     11024.645 ±    2924.594  ns/op
SiteBenchmark.both                     SCALA_PB         _4_K  avgt    5     21901.574 ±    8953.973  ns/op
SiteBenchmark.both                     SCALA_PB         _8_K  avgt    5     43867.321 ±   28877.423  ns/op
SiteBenchmark.both                     SCALA_PB        _64_K  avgt    5    314346.395 ±  186956.092  ns/op
SiteBenchmark.both                      JAVA_PB         _1_K  avgt    5     10055.996 ±    6064.954  ns/op
SiteBenchmark.both                      JAVA_PB         _2_K  avgt    5     16393.842 ±    5764.357  ns/op
SiteBenchmark.both                      JAVA_PB         _4_K  avgt    5     24812.237 ±    4275.799  ns/op
SiteBenchmark.both                      JAVA_PB         _8_K  avgt    5     58210.379 ±   12305.625  ns/op
SiteBenchmark.both                      JAVA_PB        _64_K  avgt    5    546062.475 ±  265112.087  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _1_K  avgt    5      9395.133 ±    2321.620  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _2_K  avgt    5     14841.741 ±    6360.784  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _4_K  avgt    5     27825.220 ±   10958.907  ns/op
SiteBenchmark.both                  JAVA_THRIFT         _8_K  avgt    5     79582.959 ±   35125.664  ns/op
SiteBenchmark.both                  JAVA_THRIFT        _64_K  avgt    5    517090.596 ±  349723.987  ns/op
SiteBenchmark.both                      SCROOGE         _1_K  avgt    5      8598.377 ±    4662.632  ns/op
SiteBenchmark.both                      SCROOGE         _2_K  avgt    5     15828.212 ±    2683.706  ns/op
SiteBenchmark.both                      SCROOGE         _4_K  avgt    5     29784.927 ±   10019.521  ns/op
SiteBenchmark.both                      SCROOGE         _8_K  avgt    5     58640.888 ±   20264.331  ns/op
SiteBenchmark.both                      SCROOGE        _64_K  avgt    5    588832.022 ±   91477.395  ns/op
SiteBenchmark.both                 SERIALIZABLE         _1_K  avgt    5     97258.226 ±   47157.033  ns/op
SiteBenchmark.both                 SERIALIZABLE         _2_K  avgt    5    143968.324 ±   78707.457  ns/op
SiteBenchmark.both                 SERIALIZABLE         _4_K  avgt    5    195246.050 ±  101644.155  ns/op
SiteBenchmark.both                 SERIALIZABLE         _8_K  avgt    5    289966.869 ±  107135.247  ns/op
SiteBenchmark.both                 SERIALIZABLE        _64_K  avgt    5   1664915.640 ±  460605.044  ns/op
SiteBenchmark.both                     PICKLING         _1_K  avgt    5     38064.647 ±    7800.031  ns/op
SiteBenchmark.both                     PICKLING         _2_K  avgt    5     58871.810 ±    3412.865  ns/op
SiteBenchmark.both                     PICKLING         _4_K  avgt    5    110295.048 ±   19536.863  ns/op
SiteBenchmark.both                     PICKLING         _8_K  avgt    5    299613.171 ±  183405.370  ns/op
SiteBenchmark.both                     PICKLING        _64_K  avgt    5   2010899.210 ±  456513.275  ns/op
SiteBenchmark.both                    BOOPICKLE         _1_K  avgt    5      5362.768 ±    3677.506  ns/op
SiteBenchmark.both                    BOOPICKLE         _2_K  avgt    5      7972.752 ±    2941.049  ns/op
SiteBenchmark.both                    BOOPICKLE         _4_K  avgt    5     14297.227 ±    4259.155  ns/op
SiteBenchmark.both                    BOOPICKLE         _8_K  avgt    5     27851.497 ±   15934.632  ns/op
SiteBenchmark.both                    BOOPICKLE        _64_K  avgt    5    283431.365 ±  110855.513  ns/op
SiteBenchmark.both                        CHILL         _1_K  avgt    5     10983.265 ±    7936.843  ns/op
SiteBenchmark.both                        CHILL         _2_K  avgt    5     19949.360 ±   14748.705  ns/op
SiteBenchmark.both                        CHILL         _4_K  avgt    5     30174.779 ±   14510.237  ns/op
SiteBenchmark.both                        CHILL         _8_K  avgt    5     67006.537 ±   29396.298  ns/op
SiteBenchmark.both                        CHILL        _64_K  avgt    5    569967.899 ±  360600.188  ns/op
SiteBenchmark.both                        CIRCE         _1_K  avgt    5     36237.666 ±   19211.182  ns/op
SiteBenchmark.both                        CIRCE         _2_K  avgt    5     64375.960 ±   21675.057  ns/op
SiteBenchmark.both                        CIRCE         _4_K  avgt    5    135045.082 ±   77187.300  ns/op
SiteBenchmark.both                        CIRCE         _8_K  avgt    5    293689.469 ±  170429.154  ns/op
SiteBenchmark.both                        CIRCE        _64_K  avgt    5   2724280.225 ± 1169384.016  ns/op
SiteBenchmark.deserialization              JSON         _1_K  avgt    5     10155.959 ±    9536.797  ns/op
SiteBenchmark.deserialization              JSON         _2_K  avgt    5     18229.514 ±   14552.282  ns/op
SiteBenchmark.deserialization              JSON         _4_K  avgt    5     33321.792 ±   23423.102  ns/op
SiteBenchmark.deserialization              JSON         _8_K  avgt    5     59088.984 ±   43906.079  ns/op
SiteBenchmark.deserialization              JSON        _64_K  avgt    5    507458.134 ±  451507.349  ns/op
SiteBenchmark.deserialization          SCALA_PB         _1_K  avgt    5      3471.794 ±    2037.686  ns/op
SiteBenchmark.deserialization          SCALA_PB         _2_K  avgt    5      5095.080 ±    1222.445  ns/op
SiteBenchmark.deserialization          SCALA_PB         _4_K  avgt    5      9514.253 ±    2008.496  ns/op
SiteBenchmark.deserialization          SCALA_PB         _8_K  avgt    5     19709.894 ±    6622.658  ns/op
SiteBenchmark.deserialization          SCALA_PB        _64_K  avgt    5    188560.330 ±   48118.691  ns/op
SiteBenchmark.deserialization           JAVA_PB         _1_K  avgt    5      4421.827 ±    3648.240  ns/op
SiteBenchmark.deserialization           JAVA_PB         _2_K  avgt    5      6777.744 ±    2252.768  ns/op
SiteBenchmark.deserialization           JAVA_PB         _4_K  avgt    5     12580.371 ±    3321.783  ns/op
SiteBenchmark.deserialization           JAVA_PB         _8_K  avgt    5     27861.394 ±   11405.919  ns/op
SiteBenchmark.deserialization           JAVA_PB        _64_K  avgt    5    263206.054 ±  138990.875  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _1_K  avgt    5      3523.694 ±    1236.146  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _2_K  avgt    5      5952.189 ±    1652.306  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _4_K  avgt    5     13032.721 ±    5681.044  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT         _8_K  avgt    5     22912.998 ±    7985.933  ns/op
SiteBenchmark.deserialization       JAVA_THRIFT        _64_K  avgt    5    195493.761 ±   21795.986  ns/op
SiteBenchmark.deserialization           SCROOGE         _1_K  avgt    5      4252.105 ±    2914.762  ns/op
SiteBenchmark.deserialization           SCROOGE         _2_K  avgt    5      8670.281 ±    6592.022  ns/op
SiteBenchmark.deserialization           SCROOGE         _4_K  avgt    5     13860.061 ±    7597.558  ns/op
SiteBenchmark.deserialization           SCROOGE         _8_K  avgt    5     27173.573 ±   17316.346  ns/op
SiteBenchmark.deserialization           SCROOGE        _64_K  avgt    5    282596.009 ±   95217.725  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _1_K  avgt    5     79972.767 ±   22006.075  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _2_K  avgt    5    111482.735 ±   73075.543  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _4_K  avgt    5    131058.636 ±   89902.677  ns/op
SiteBenchmark.deserialization      SERIALIZABLE         _8_K  avgt    5    167613.469 ±  120011.485  ns/op
SiteBenchmark.deserialization      SERIALIZABLE        _64_K  avgt    5    690680.475 ±  512284.488  ns/op
SiteBenchmark.deserialization          PICKLING         _1_K  avgt    5     15513.712 ±    5403.720  ns/op
SiteBenchmark.deserialization          PICKLING         _2_K  avgt    5     23768.160 ±    5963.700  ns/op
SiteBenchmark.deserialization          PICKLING         _4_K  avgt    5     43792.183 ±   16229.180  ns/op
SiteBenchmark.deserialization          PICKLING         _8_K  avgt    5    108935.402 ±   23941.856  ns/op
SiteBenchmark.deserialization          PICKLING        _64_K  avgt    5    801484.158 ±  114658.281  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _1_K  avgt    5      2276.174 ±     453.111  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _2_K  avgt    5      4750.779 ±    1720.946  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _4_K  avgt    5      6900.667 ±    3085.561  ns/op
SiteBenchmark.deserialization         BOOPICKLE         _8_K  avgt    5     17146.322 ±    4345.497  ns/op
SiteBenchmark.deserialization         BOOPICKLE        _64_K  avgt    5    120730.012 ±   61009.589  ns/op
SiteBenchmark.deserialization             CIRCE         _1_K  avgt    5     16703.585 ±    7466.692  ns/op
SiteBenchmark.deserialization             CIRCE         _2_K  avgt    5     33452.788 ±   20727.780  ns/op
SiteBenchmark.deserialization             CIRCE         _4_K  avgt    5     69308.353 ±   50755.196  ns/op
SiteBenchmark.deserialization             CIRCE         _8_K  avgt    5    143949.153 ±   67498.752  ns/op
SiteBenchmark.deserialization             CIRCE        _64_K  avgt    5   1118574.594 ±  277701.792  ns/op
SiteBenchmark.serialization                JSON         _1_K  avgt    5      5005.931 ±    3734.153  ns/op
SiteBenchmark.serialization                JSON         _2_K  avgt    5      9377.545 ±    3028.048  ns/op
SiteBenchmark.serialization                JSON         _4_K  avgt    5     19396.890 ±   17759.925  ns/op
SiteBenchmark.serialization                JSON         _8_K  avgt    5     34307.240 ±   21694.832  ns/op
SiteBenchmark.serialization                JSON        _64_K  avgt    5    295940.997 ±  136255.447  ns/op
SiteBenchmark.serialization            SCALA_PB         _1_K  avgt    5      2335.155 ±     924.244  ns/op
SiteBenchmark.serialization            SCALA_PB         _2_K  avgt    5      4255.879 ±    2814.476  ns/op
SiteBenchmark.serialization            SCALA_PB         _4_K  avgt    5      7354.231 ±    4952.458  ns/op
SiteBenchmark.serialization            SCALA_PB         _8_K  avgt    5     18958.296 ±   15957.504  ns/op
SiteBenchmark.serialization            SCALA_PB        _64_K  avgt    5    144106.144 ±   37773.456  ns/op
SiteBenchmark.serialization             JAVA_PB         _1_K  avgt    5      3977.033 ±    1808.309  ns/op
SiteBenchmark.serialization             JAVA_PB         _2_K  avgt    5      7434.491 ±    3479.269  ns/op
SiteBenchmark.serialization             JAVA_PB         _4_K  avgt    5     13802.772 ±    2144.553  ns/op
SiteBenchmark.serialization             JAVA_PB         _8_K  avgt    5     32580.596 ±   18541.793  ns/op
SiteBenchmark.serialization             JAVA_PB        _64_K  avgt    5    255212.234 ±  124479.435  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _1_K  avgt    5      4397.762 ±    2364.798  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _2_K  avgt    5      8085.999 ±    4218.947  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _4_K  avgt    5     15218.978 ±    9384.127  ns/op
SiteBenchmark.serialization         JAVA_THRIFT         _8_K  avgt    5     29523.423 ±   14116.441  ns/op
SiteBenchmark.serialization         JAVA_THRIFT        _64_K  avgt    5    356563.007 ±  207331.486  ns/op
SiteBenchmark.serialization             SCROOGE         _1_K  avgt    5      4321.711 ±    1825.406  ns/op
SiteBenchmark.serialization             SCROOGE         _2_K  avgt    5      7362.284 ±    2862.674  ns/op
SiteBenchmark.serialization             SCROOGE         _4_K  avgt    5     18760.024 ±    8659.231  ns/op
SiteBenchmark.serialization             SCROOGE         _8_K  avgt    5     26853.677 ±   12768.557  ns/op
SiteBenchmark.serialization             SCROOGE        _64_K  avgt    5    290041.004 ±  205052.548  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _1_K  avgt    5     18151.820 ±   10378.254  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _2_K  avgt    5     26396.651 ±    9248.253  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _4_K  avgt    5     47005.905 ±   15500.331  ns/op
SiteBenchmark.serialization        SERIALIZABLE         _8_K  avgt    5     99221.254 ±   20201.619  ns/op
SiteBenchmark.serialization        SERIALIZABLE        _64_K  avgt    5    838948.623 ±  108619.719  ns/op
SiteBenchmark.serialization            PICKLING         _1_K  avgt    5     19596.699 ±    3324.862  ns/op
SiteBenchmark.serialization            PICKLING         _2_K  avgt    5     30372.150 ±    5353.290  ns/op
SiteBenchmark.serialization            PICKLING         _4_K  avgt    5     61865.835 ±   19297.786  ns/op
SiteBenchmark.serialization            PICKLING         _8_K  avgt    5    161239.344 ±  101926.661  ns/op
SiteBenchmark.serialization            PICKLING        _64_K  avgt    5   1316738.574 ±  683997.598  ns/op
SiteBenchmark.serialization           BOOPICKLE         _1_K  avgt    5      2299.202 ±     829.124  ns/op
SiteBenchmark.serialization           BOOPICKLE         _2_K  avgt    5      3724.694 ±    1150.003  ns/op
SiteBenchmark.serialization           BOOPICKLE         _4_K  avgt    5      7974.264 ±     919.463  ns/op
SiteBenchmark.serialization           BOOPICKLE         _8_K  avgt    5     11543.320 ±    4887.111  ns/op
SiteBenchmark.serialization           BOOPICKLE        _64_K  avgt    5    105773.696 ±   32353.466  ns/op
SiteBenchmark.serialization               CHILL         _1_K  avgt    5      4333.946 ±    2070.042  ns/op
SiteBenchmark.serialization               CHILL         _2_K  avgt    5      7903.753 ±    6652.348  ns/op
SiteBenchmark.serialization               CHILL         _4_K  avgt    5     12695.004 ±    4035.982  ns/op
SiteBenchmark.serialization               CHILL         _8_K  avgt    5     34795.354 ±   28867.016  ns/op
SiteBenchmark.serialization               CHILL        _64_K  avgt    5    360822.704 ±  323859.127  ns/op
SiteBenchmark.serialization               CIRCE         _1_K  avgt    5     16391.985 ±    8251.545  ns/op
SiteBenchmark.serialization               CIRCE         _2_K  avgt    5     31819.706 ±   19471.677  ns/op
SiteBenchmark.serialization               CIRCE         _4_K  avgt    5     63357.402 ±   26039.526  ns/op
SiteBenchmark.serialization               CIRCE         _8_K  avgt    5    141725.868 ±   81268.775  ns/op
SiteBenchmark.serialization               CIRCE        _64_K  avgt    5   1284800.296 ±  461131.873  ns/op

Benchmark result is saved to jmh-result.json
