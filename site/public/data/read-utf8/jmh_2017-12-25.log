# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 0.00% complete, ETA 02:21:45
# Fork: 1 of 1
# Warmup Iteration   1: 29.259 ns/op
# Warmup Iteration   2: 29.070 ns/op
Iteration   1: 30.822 ns/op
Iteration   2: 30.520 ns/op
Iteration   3: 30.311 ns/op
Iteration   4: 30.318 ns/op
Iteration   5: 30.478 ns/op
Iteration   6: 30.318 ns/op
Iteration   7: 30.279 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  30.435 ±(99.9%) 0.437 ns/op [Average]
  (min, avg, max) = (30.279, 30.435, 30.822), stdev = 0.194
  CI (99.9%): [29.998, 30.872] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 0.53% complete, ETA 02:21:56
# Fork: 1 of 1
# Warmup Iteration   1: 35.643 ns/op
# Warmup Iteration   2: 36.396 ns/op
Iteration   1: 33.783 ns/op
Iteration   2: 33.874 ns/op
Iteration   3: 33.838 ns/op
Iteration   4: 33.872 ns/op
Iteration   5: 33.810 ns/op
Iteration   6: 33.883 ns/op
Iteration   7: 33.702 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  33.823 ±(99.9%) 0.146 ns/op [Average]
  (min, avg, max) = (33.702, 33.823, 33.883), stdev = 0.065
  CI (99.9%): [33.677, 33.969] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 1.06% complete, ETA 02:21:16
# Fork: 1 of 1
# Warmup Iteration   1: 36.780 ns/op
# Warmup Iteration   2: 37.682 ns/op
Iteration   1: 33.920 ns/op
Iteration   2: 33.822 ns/op
Iteration   3: 33.724 ns/op
Iteration   4: 33.667 ns/op
Iteration   5: 33.761 ns/op
Iteration   6: 33.802 ns/op
Iteration   7: 33.782 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  33.783 ±(99.9%) 0.179 ns/op [Average]
  (min, avg, max) = (33.667, 33.783, 33.920), stdev = 0.080
  CI (99.9%): [33.603, 33.962] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 1.59% complete, ETA 02:20:31
# Fork: 1 of 1
# Warmup Iteration   1: 39.416 ns/op
# Warmup Iteration   2: 39.229 ns/op
Iteration   1: 36.335 ns/op
Iteration   2: 36.342 ns/op
Iteration   3: 36.320 ns/op
Iteration   4: 36.387 ns/op
Iteration   5: 36.321 ns/op
Iteration   6: 36.315 ns/op
Iteration   7: 36.281 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  36.329 ±(99.9%) 0.072 ns/op [Average]
  (min, avg, max) = (36.281, 36.329, 36.387), stdev = 0.032
  CI (99.9%): [36.256, 36.401] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 2.12% complete, ETA 02:19:45
# Fork: 1 of 1
# Warmup Iteration   1: 42.819 ns/op
# Warmup Iteration   2: 40.594 ns/op
Iteration   1: 39.347 ns/op
Iteration   2: 39.338 ns/op
Iteration   3: 39.213 ns/op
Iteration   4: 38.958 ns/op
Iteration   5: 39.381 ns/op
Iteration   6: 39.344 ns/op
Iteration   7: 39.317 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  39.271 ±(99.9%) 0.333 ns/op [Average]
  (min, avg, max) = (38.958, 39.271, 39.381), stdev = 0.148
  CI (99.9%): [38.938, 39.604] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 2.65% complete, ETA 02:19:00
# Fork: 1 of 1
# Warmup Iteration   1: 92.067 ns/op
# Warmup Iteration   2: 90.342 ns/op
Iteration   1: 80.968 ns/op
Iteration   2: 80.869 ns/op
Iteration   3: 80.728 ns/op
Iteration   4: 80.590 ns/op
Iteration   5: 80.630 ns/op
Iteration   6: 80.828 ns/op
Iteration   7: 81.184 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  80.828 ±(99.9%) 0.463 ns/op [Average]
  (min, avg, max) = (80.590, 80.828, 81.184), stdev = 0.206
  CI (99.9%): [80.365, 81.291] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 3.17% complete, ETA 02:18:15
# Fork: 1 of 1
# Warmup Iteration   1: 10589.979 ns/op
# Warmup Iteration   2: 10536.516 ns/op
Iteration   1: 10350.326 ns/op
Iteration   2: 10371.088 ns/op
Iteration   3: 10376.882 ns/op
Iteration   4: 10352.410 ns/op
Iteration   5: 10359.242 ns/op
Iteration   6: 10376.138 ns/op
Iteration   7: 10388.747 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  10367.833 ±(99.9%) 32.076 ns/op [Average]
  (min, avg, max) = (10350.326, 10367.833, 10388.747), stdev = 14.242
  CI (99.9%): [10335.757, 10399.910] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 3.70% complete, ETA 02:17:30
# Fork: 1 of 1
# Warmup Iteration   1: 28.946 ns/op
# Warmup Iteration   2: 28.605 ns/op
Iteration   1: 30.170 ns/op
Iteration   2: 30.220 ns/op
Iteration   3: 30.290 ns/op
Iteration   4: 30.312 ns/op
Iteration   5: 30.338 ns/op
Iteration   6: 30.173 ns/op
Iteration   7: 30.288 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  30.256 ±(99.9%) 0.153 ns/op [Average]
  (min, avg, max) = (30.170, 30.256, 30.338), stdev = 0.068
  CI (99.9%): [30.103, 30.409] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 4.23% complete, ETA 02:16:44
# Fork: 1 of 1
# Warmup Iteration   1: 35.518 ns/op
# Warmup Iteration   2: 36.459 ns/op
Iteration   1: 33.855 ns/op
Iteration   2: 33.827 ns/op
Iteration   3: 33.816 ns/op
Iteration   4: 33.837 ns/op
Iteration   5: 33.820 ns/op
Iteration   6: 33.865 ns/op
Iteration   7: 33.793 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  33.830 ±(99.9%) 0.055 ns/op [Average]
  (min, avg, max) = (33.793, 33.830, 33.865), stdev = 0.024
  CI (99.9%): [33.776, 33.885] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 4.76% complete, ETA 02:15:59
# Fork: 1 of 1
# Warmup Iteration   1: 36.773 ns/op
# Warmup Iteration   2: 37.414 ns/op
Iteration   1: 35.902 ns/op
Iteration   2: 35.916 ns/op
Iteration   3: 36.024 ns/op
Iteration   4: 35.984 ns/op
Iteration   5: 35.991 ns/op
Iteration   6: 35.965 ns/op
Iteration   7: 35.952 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  35.962 ±(99.9%) 0.096 ns/op [Average]
  (min, avg, max) = (35.902, 35.962, 36.024), stdev = 0.043
  CI (99.9%): [35.866, 36.058] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 5.29% complete, ETA 02:15:14
# Fork: 1 of 1
# Warmup Iteration   1: 42.608 ns/op
# Warmup Iteration   2: 42.239 ns/op
Iteration   1: 43.368 ns/op
Iteration   2: 43.337 ns/op
Iteration   3: 43.482 ns/op
Iteration   4: 43.477 ns/op
Iteration   5: 43.436 ns/op
Iteration   6: 43.414 ns/op
Iteration   7: 43.404 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  43.417 ±(99.9%) 0.121 ns/op [Average]
  (min, avg, max) = (43.337, 43.417, 43.482), stdev = 0.054
  CI (99.9%): [43.296, 43.537] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 5.82% complete, ETA 02:14:28
# Fork: 1 of 1
# Warmup Iteration   1: 56.915 ns/op
# Warmup Iteration   2: 56.990 ns/op
Iteration   1: 60.404 ns/op
Iteration   2: 60.416 ns/op
Iteration   3: 60.532 ns/op
Iteration   4: 60.325 ns/op
Iteration   5: 60.383 ns/op
Iteration   6: 60.413 ns/op
Iteration   7: 60.485 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  60.423 ±(99.9%) 0.152 ns/op [Average]
  (min, avg, max) = (60.325, 60.423, 60.532), stdev = 0.068
  CI (99.9%): [60.270, 60.575] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 6.35% complete, ETA 02:13:43
# Fork: 1 of 1
# Warmup Iteration   1: 396.351 ns/op
# Warmup Iteration   2: 392.312 ns/op
Iteration   1: 376.574 ns/op
Iteration   2: 375.759 ns/op
Iteration   3: 376.875 ns/op
Iteration   4: 376.343 ns/op
Iteration   5: 376.137 ns/op
Iteration   6: 377.559 ns/op
Iteration   7: 376.185 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  376.490 ±(99.9%) 1.324 ns/op [Average]
  (min, avg, max) = (375.759, 376.490, 377.559), stdev = 0.588
  CI (99.9%): [375.167, 377.814] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 6.88% complete, ETA 02:12:57
# Fork: 1 of 1
# Warmup Iteration   1: 44279.779 ns/op
# Warmup Iteration   2: 45427.880 ns/op
Iteration   1: 53103.347 ns/op
Iteration   2: 53103.162 ns/op
Iteration   3: 53051.680 ns/op
Iteration   4: 52981.062 ns/op
Iteration   5: 52943.722 ns/op
Iteration   6: 53112.815 ns/op
Iteration   7: 52969.293 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  53037.869 ±(99.9%) 162.284 ns/op [Average]
  (min, avg, max) = (52943.722, 53037.869, 53112.815), stdev = 72.055
  CI (99.9%): [52875.585, 53200.152] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 7.41% complete, ETA 02:12:12
# Fork: 1 of 1
# Warmup Iteration   1: 28.980 ns/op
# Warmup Iteration   2: 28.643 ns/op
Iteration   1: 30.175 ns/op
Iteration   2: 30.314 ns/op
Iteration   3: 30.274 ns/op
Iteration   4: 30.260 ns/op
Iteration   5: 30.257 ns/op
Iteration   6: 30.273 ns/op
Iteration   7: 30.324 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  30.268 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (30.175, 30.268, 30.324), stdev = 0.049
  CI (99.9%): [30.159, 30.377] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 7.94% complete, ETA 02:11:27
# Fork: 1 of 1
# Warmup Iteration   1: 37.594 ns/op
# Warmup Iteration   2: 36.472 ns/op
Iteration   1: 36.237 ns/op
Iteration   2: 36.254 ns/op
Iteration   3: 36.294 ns/op
Iteration   4: 35.806 ns/op
Iteration   5: 36.075 ns/op
Iteration   6: 36.199 ns/op
Iteration   7: 36.110 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  36.139 ±(99.9%) 0.375 ns/op [Average]
  (min, avg, max) = (35.806, 36.139, 36.294), stdev = 0.167
  CI (99.9%): [35.764, 36.514] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 8.47% complete, ETA 02:10:41
# Fork: 1 of 1
# Warmup Iteration   1: 36.837 ns/op
# Warmup Iteration   2: 37.382 ns/op
Iteration   1: 33.807 ns/op
Iteration   2: 33.856 ns/op
Iteration   3: 33.802 ns/op
Iteration   4: 33.757 ns/op
Iteration   5: 33.796 ns/op
Iteration   6: 33.834 ns/op
Iteration   7: 33.755 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  33.801 ±(99.9%) 0.083 ns/op [Average]
  (min, avg, max) = (33.755, 33.801, 33.856), stdev = 0.037
  CI (99.9%): [33.717, 33.884] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 8.99% complete, ETA 02:09:56
# Fork: 1 of 1
# Warmup Iteration   1: 39.349 ns/op
# Warmup Iteration   2: 39.334 ns/op
Iteration   1: 35.773 ns/op
Iteration   2: 35.709 ns/op
Iteration   3: 35.811 ns/op
Iteration   4: 35.793 ns/op
Iteration   5: 35.804 ns/op
Iteration   6: 35.791 ns/op
Iteration   7: 35.781 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  35.780 ±(99.9%) 0.076 ns/op [Average]
  (min, avg, max) = (35.709, 35.780, 35.811), stdev = 0.034
  CI (99.9%): [35.704, 35.856] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 9.52% complete, ETA 02:09:10
# Fork: 1 of 1
# Warmup Iteration   1: 42.680 ns/op
# Warmup Iteration   2: 40.626 ns/op
Iteration   1: 39.270 ns/op
Iteration   2: 39.120 ns/op
Iteration   3: 39.146 ns/op
Iteration   4: 39.243 ns/op
Iteration   5: 39.212 ns/op
Iteration   6: 39.219 ns/op
Iteration   7: 39.168 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  39.197 ±(99.9%) 0.122 ns/op [Average]
  (min, avg, max) = (39.120, 39.197, 39.270), stdev = 0.054
  CI (99.9%): [39.075, 39.319] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 10.05% complete, ETA 02:08:25
# Fork: 1 of 1
# Warmup Iteration   1: 93.725 ns/op
# Warmup Iteration   2: 92.551 ns/op
Iteration   1: 81.337 ns/op
Iteration   2: 81.495 ns/op
Iteration   3: 81.831 ns/op
Iteration   4: 81.092 ns/op
Iteration   5: 81.012 ns/op
Iteration   6: 81.210 ns/op
Iteration   7: 81.567 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  81.364 ±(99.9%) 0.649 ns/op [Average]
  (min, avg, max) = (81.012, 81.364, 81.831), stdev = 0.288
  CI (99.9%): [80.714, 82.013] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 10.58% complete, ETA 02:07:40
# Fork: 1 of 1
# Warmup Iteration   1: 46611.682 ns/op
# Warmup Iteration   2: 46806.905 ns/op
Iteration   1: 56192.258 ns/op
Iteration   2: 55922.650 ns/op
Iteration   3: 56124.135 ns/op
Iteration   4: 56097.012 ns/op
Iteration   5: 56155.550 ns/op
Iteration   6: 56393.631 ns/op
Iteration   7: 56156.490 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava":
  56148.818 ±(99.9%) 313.658 ns/op [Average]
  (min, avg, max) = (55922.650, 56148.818, 56393.631), stdev = 139.266
  CI (99.9%): [55835.160, 56462.476] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 11.11% complete, ETA 02:06:54
# Fork: 1 of 1
# Warmup Iteration   1: 29.847 ns/op
# Warmup Iteration   2: 29.488 ns/op
Iteration   1: 29.362 ns/op
Iteration   2: 29.378 ns/op
Iteration   3: 29.341 ns/op
Iteration   4: 29.354 ns/op
Iteration   5: 29.336 ns/op
Iteration   6: 29.328 ns/op
Iteration   7: 29.391 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  29.356 ±(99.9%) 0.051 ns/op [Average]
  (min, avg, max) = (29.328, 29.356, 29.391), stdev = 0.023
  CI (99.9%): [29.304, 29.407] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 11.64% complete, ETA 02:06:09
# Fork: 1 of 1
# Warmup Iteration   1: 37.399 ns/op
# Warmup Iteration   2: 33.828 ns/op
Iteration   1: 34.462 ns/op
Iteration   2: 34.447 ns/op
Iteration   3: 34.461 ns/op
Iteration   4: 34.455 ns/op
Iteration   5: 34.486 ns/op
Iteration   6: 34.458 ns/op
Iteration   7: 34.463 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  34.462 ±(99.9%) 0.027 ns/op [Average]
  (min, avg, max) = (34.447, 34.462, 34.486), stdev = 0.012
  CI (99.9%): [34.434, 34.489] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 12.17% complete, ETA 02:05:24
# Fork: 1 of 1
# Warmup Iteration   1: 35.222 ns/op
# Warmup Iteration   2: 34.594 ns/op
Iteration   1: 34.196 ns/op
Iteration   2: 34.011 ns/op
Iteration   3: 34.159 ns/op
Iteration   4: 34.120 ns/op
Iteration   5: 34.106 ns/op
Iteration   6: 34.230 ns/op
Iteration   7: 34.171 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  34.142 ±(99.9%) 0.161 ns/op [Average]
  (min, avg, max) = (34.011, 34.142, 34.230), stdev = 0.071
  CI (99.9%): [33.981, 34.303] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 12.70% complete, ETA 02:04:38
# Fork: 1 of 1
# Warmup Iteration   1: 37.416 ns/op
# Warmup Iteration   2: 35.441 ns/op
Iteration   1: 36.259 ns/op
Iteration   2: 36.209 ns/op
Iteration   3: 36.246 ns/op
Iteration   4: 36.246 ns/op
Iteration   5: 36.242 ns/op
Iteration   6: 36.256 ns/op
Iteration   7: 36.302 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  36.251 ±(99.9%) 0.062 ns/op [Average]
  (min, avg, max) = (36.209, 36.251, 36.302), stdev = 0.028
  CI (99.9%): [36.189, 36.314] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 13.23% complete, ETA 02:03:53
# Fork: 1 of 1
# Warmup Iteration   1: 40.267 ns/op
# Warmup Iteration   2: 39.298 ns/op
Iteration   1: 39.309 ns/op
Iteration   2: 39.142 ns/op
Iteration   3: 39.259 ns/op
Iteration   4: 39.311 ns/op
Iteration   5: 39.259 ns/op
Iteration   6: 39.274 ns/op
Iteration   7: 39.310 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  39.266 ±(99.9%) 0.134 ns/op [Average]
  (min, avg, max) = (39.142, 39.266, 39.311), stdev = 0.060
  CI (99.9%): [39.132, 39.400] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 13.76% complete, ETA 02:03:08
# Fork: 1 of 1
# Warmup Iteration   1: 96.153 ns/op
# Warmup Iteration   2: 95.901 ns/op
Iteration   1: 96.076 ns/op
Iteration   2: 96.410 ns/op
Iteration   3: 96.444 ns/op
Iteration   4: 95.637 ns/op
Iteration   5: 95.560 ns/op
Iteration   6: 95.694 ns/op
Iteration   7: 95.589 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  95.916 ±(99.9%) 0.877 ns/op [Average]
  (min, avg, max) = (95.560, 95.916, 96.444), stdev = 0.389
  CI (99.9%): [95.039, 96.793] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 14.29% complete, ETA 02:02:22
# Fork: 1 of 1
# Warmup Iteration   1: 11146.994 ns/op
# Warmup Iteration   2: 11101.021 ns/op
Iteration   1: 11094.734 ns/op
Iteration   2: 11082.233 ns/op
Iteration   3: 11080.343 ns/op
Iteration   4: 11091.895 ns/op
Iteration   5: 11074.616 ns/op
Iteration   6: 11086.402 ns/op
Iteration   7: 11081.982 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  11084.601 ±(99.9%) 15.642 ns/op [Average]
  (min, avg, max) = (11074.616, 11084.601, 11094.734), stdev = 6.945
  CI (99.9%): [11068.959, 11100.243] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 14.81% complete, ETA 02:01:37
# Fork: 1 of 1
# Warmup Iteration   1: 29.922 ns/op
# Warmup Iteration   2: 29.470 ns/op
Iteration   1: 29.365 ns/op
Iteration   2: 29.360 ns/op
Iteration   3: 29.400 ns/op
Iteration   4: 29.350 ns/op
Iteration   5: 29.347 ns/op
Iteration   6: 29.379 ns/op
Iteration   7: 29.419 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  29.375 ±(99.9%) 0.060 ns/op [Average]
  (min, avg, max) = (29.347, 29.375, 29.419), stdev = 0.027
  CI (99.9%): [29.314, 29.435] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 15.34% complete, ETA 02:00:52
# Fork: 1 of 1
# Warmup Iteration   1: 33.470 ns/op
# Warmup Iteration   2: 33.186 ns/op
Iteration   1: 32.893 ns/op
Iteration   2: 32.957 ns/op
Iteration   3: 32.859 ns/op
Iteration   4: 32.895 ns/op
Iteration   5: 32.880 ns/op
Iteration   6: 32.854 ns/op
Iteration   7: 32.935 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  32.896 ±(99.9%) 0.085 ns/op [Average]
  (min, avg, max) = (32.854, 32.896, 32.957), stdev = 0.038
  CI (99.9%): [32.811, 32.982] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 15.87% complete, ETA 02:00:06
# Fork: 1 of 1
# Warmup Iteration   1: 34.906 ns/op
# Warmup Iteration   2: 34.079 ns/op
Iteration   1: 34.277 ns/op
Iteration   2: 34.353 ns/op
Iteration   3: 34.351 ns/op
Iteration   4: 34.325 ns/op
Iteration   5: 34.365 ns/op
Iteration   6: 34.299 ns/op
Iteration   7: 34.289 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  34.323 ±(99.9%) 0.079 ns/op [Average]
  (min, avg, max) = (34.277, 34.323, 34.365), stdev = 0.035
  CI (99.9%): [34.244, 34.401] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 16.40% complete, ETA 01:59:21
# Fork: 1 of 1
# Warmup Iteration   1: 45.200 ns/op
# Warmup Iteration   2: 43.425 ns/op
Iteration   1: 43.620 ns/op
Iteration   2: 43.679 ns/op
Iteration   3: 43.870 ns/op
Iteration   4: 43.669 ns/op
Iteration   5: 43.746 ns/op
Iteration   6: 43.684 ns/op
Iteration   7: 43.670 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  43.705 ±(99.9%) 0.183 ns/op [Average]
  (min, avg, max) = (43.620, 43.705, 43.870), stdev = 0.081
  CI (99.9%): [43.522, 43.889] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 16.93% complete, ETA 01:58:36
# Fork: 1 of 1
# Warmup Iteration   1: 62.288 ns/op
# Warmup Iteration   2: 57.431 ns/op
Iteration   1: 57.972 ns/op
Iteration   2: 58.107 ns/op
Iteration   3: 58.115 ns/op
Iteration   4: 58.059 ns/op
Iteration   5: 57.905 ns/op
Iteration   6: 58.032 ns/op
Iteration   7: 58.013 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  58.029 ±(99.9%) 0.168 ns/op [Average]
  (min, avg, max) = (57.905, 58.029, 58.115), stdev = 0.075
  CI (99.9%): [57.861, 58.197] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 17.46% complete, ETA 01:57:50
# Fork: 1 of 1
# Warmup Iteration   1: 410.345 ns/op
# Warmup Iteration   2: 396.785 ns/op
Iteration   1: 398.978 ns/op
Iteration   2: 399.201 ns/op
Iteration   3: 399.146 ns/op
Iteration   4: 397.942 ns/op
Iteration   5: 399.748 ns/op
Iteration   6: 399.116 ns/op
Iteration   7: 398.109 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  398.891 ±(99.9%) 1.444 ns/op [Average]
  (min, avg, max) = (397.942, 398.891, 399.748), stdev = 0.641
  CI (99.9%): [397.447, 400.335] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 17.99% complete, ETA 01:57:05
# Fork: 1 of 1
# Warmup Iteration   1: 48299.577 ns/op
# Warmup Iteration   2: 46682.934 ns/op
Iteration   1: 47106.604 ns/op
Iteration   2: 47085.958 ns/op
Iteration   3: 47102.546 ns/op
Iteration   4: 46851.818 ns/op
Iteration   5: 46908.496 ns/op
Iteration   6: 47047.738 ns/op
Iteration   7: 47114.470 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  47031.090 ±(99.9%) 240.148 ns/op [Average]
  (min, avg, max) = (46851.818, 47031.090, 47114.470), stdev = 106.627
  CI (99.9%): [46790.942, 47271.238] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 18.52% complete, ETA 01:56:20
# Fork: 1 of 1
# Warmup Iteration   1: 29.916 ns/op
# Warmup Iteration   2: 29.473 ns/op
Iteration   1: 29.418 ns/op
Iteration   2: 29.311 ns/op
Iteration   3: 29.367 ns/op
Iteration   4: 29.393 ns/op
Iteration   5: 29.436 ns/op
Iteration   6: 29.383 ns/op
Iteration   7: 29.402 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  29.387 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (29.311, 29.387, 29.436), stdev = 0.040
  CI (99.9%): [29.296, 29.478] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 19.05% complete, ETA 01:55:34
# Fork: 1 of 1
# Warmup Iteration   1: 33.937 ns/op
# Warmup Iteration   2: 33.480 ns/op
Iteration   1: 34.301 ns/op
Iteration   2: 34.074 ns/op
Iteration   3: 34.399 ns/op
Iteration   4: 34.290 ns/op
Iteration   5: 34.388 ns/op
Iteration   6: 34.348 ns/op
Iteration   7: 34.330 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  34.304 ±(99.9%) 0.247 ns/op [Average]
  (min, avg, max) = (34.074, 34.304, 34.399), stdev = 0.110
  CI (99.9%): [34.058, 34.551] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 19.58% complete, ETA 01:54:49
# Fork: 1 of 1
# Warmup Iteration   1: 35.223 ns/op
# Warmup Iteration   2: 34.579 ns/op
Iteration   1: 34.169 ns/op
Iteration   2: 34.210 ns/op
Iteration   3: 34.146 ns/op
Iteration   4: 34.180 ns/op
Iteration   5: 34.210 ns/op
Iteration   6: 34.203 ns/op
Iteration   7: 34.190 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  34.187 ±(99.9%) 0.054 ns/op [Average]
  (min, avg, max) = (34.146, 34.187, 34.210), stdev = 0.024
  CI (99.9%): [34.133, 34.241] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 20.11% complete, ETA 01:54:04
# Fork: 1 of 1
# Warmup Iteration   1: 37.449 ns/op
# Warmup Iteration   2: 35.434 ns/op
Iteration   1: 36.283 ns/op
Iteration   2: 36.182 ns/op
Iteration   3: 36.202 ns/op
Iteration   4: 36.261 ns/op
Iteration   5: 36.281 ns/op
Iteration   6: 36.250 ns/op
Iteration   7: 36.276 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  36.248 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (36.182, 36.248, 36.283), stdev = 0.040
  CI (99.9%): [36.157, 36.338] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 20.63% complete, ETA 01:53:19
# Fork: 1 of 1
# Warmup Iteration   1: 40.315 ns/op
# Warmup Iteration   2: 39.365 ns/op
Iteration   1: 39.312 ns/op
Iteration   2: 39.415 ns/op
Iteration   3: 39.255 ns/op
Iteration   4: 39.349 ns/op
Iteration   5: 39.262 ns/op
Iteration   6: 39.236 ns/op
Iteration   7: 39.195 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  39.289 ±(99.9%) 0.168 ns/op [Average]
  (min, avg, max) = (39.195, 39.289, 39.415), stdev = 0.075
  CI (99.9%): [39.121, 39.458] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 21.16% complete, ETA 01:52:33
# Fork: 1 of 1
# Warmup Iteration   1: 96.009 ns/op
# Warmup Iteration   2: 96.101 ns/op
Iteration   1: 96.162 ns/op
Iteration   2: 96.315 ns/op
Iteration   3: 96.341 ns/op
Iteration   4: 96.469 ns/op
Iteration   5: 95.788 ns/op
Iteration   6: 96.629 ns/op
Iteration   7: 96.503 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  96.315 ±(99.9%) 0.623 ns/op [Average]
  (min, avg, max) = (95.788, 96.315, 96.629), stdev = 0.277
  CI (99.9%): [95.692, 96.939] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 21.69% complete, ETA 01:51:48
# Fork: 1 of 1
# Warmup Iteration   1: 46579.613 ns/op
# Warmup Iteration   2: 44941.008 ns/op
Iteration   1: 45355.254 ns/op
Iteration   2: 45539.821 ns/op
Iteration   3: 45214.336 ns/op
Iteration   4: 45266.293 ns/op
Iteration   5: 45540.674 ns/op
Iteration   6: 45472.787 ns/op
Iteration   7: 45514.499 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala":
  45414.809 ±(99.9%) 305.732 ns/op [Average]
  (min, avg, max) = (45214.336, 45414.809, 45540.674), stdev = 135.747
  CI (99.9%): [45109.078, 45720.541] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 22.22% complete, ETA 01:51:03
# Fork: 1 of 1
# Warmup Iteration   1: 28.967 ns/op
# Warmup Iteration   2: 28.575 ns/op
Iteration   1: 30.141 ns/op
Iteration   2: 30.276 ns/op
Iteration   3: 30.299 ns/op
Iteration   4: 30.328 ns/op
Iteration   5: 30.302 ns/op
Iteration   6: 30.302 ns/op
Iteration   7: 30.328 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  30.282 ±(99.9%) 0.146 ns/op [Average]
  (min, avg, max) = (30.141, 30.282, 30.328), stdev = 0.065
  CI (99.9%): [30.137, 30.428] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 22.75% complete, ETA 01:50:17
# Fork: 1 of 1
# Warmup Iteration   1: 35.495 ns/op
# Warmup Iteration   2: 36.467 ns/op
Iteration   1: 33.870 ns/op
Iteration   2: 33.704 ns/op
Iteration   3: 33.669 ns/op
Iteration   4: 33.832 ns/op
Iteration   5: 33.850 ns/op
Iteration   6: 33.926 ns/op
Iteration   7: 33.846 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  33.814 ±(99.9%) 0.208 ns/op [Average]
  (min, avg, max) = (33.669, 33.814, 33.926), stdev = 0.093
  CI (99.9%): [33.605, 34.022] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 23.28% complete, ETA 01:49:32
# Fork: 1 of 1
# Warmup Iteration   1: 36.700 ns/op
# Warmup Iteration   2: 37.415 ns/op
Iteration   1: 33.765 ns/op
Iteration   2: 33.784 ns/op
Iteration   3: 33.816 ns/op
Iteration   4: 33.837 ns/op
Iteration   5: 33.863 ns/op
Iteration   6: 33.802 ns/op
Iteration   7: 33.832 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  33.814 ±(99.9%) 0.076 ns/op [Average]
  (min, avg, max) = (33.765, 33.814, 33.863), stdev = 0.034
  CI (99.9%): [33.738, 33.890] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 23.81% complete, ETA 01:48:47
# Fork: 1 of 1
# Warmup Iteration   1: 39.413 ns/op
# Warmup Iteration   2: 38.087 ns/op
Iteration   1: 36.268 ns/op
Iteration   2: 36.186 ns/op
Iteration   3: 36.282 ns/op
Iteration   4: 36.302 ns/op
Iteration   5: 36.292 ns/op
Iteration   6: 36.263 ns/op
Iteration   7: 36.267 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  36.266 ±(99.9%) 0.086 ns/op [Average]
  (min, avg, max) = (36.186, 36.266, 36.302), stdev = 0.038
  CI (99.9%): [36.180, 36.351] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 24.34% complete, ETA 01:48:01
# Fork: 1 of 1
# Warmup Iteration   1: 42.864 ns/op
# Warmup Iteration   2: 40.587 ns/op
Iteration   1: 39.137 ns/op
Iteration   2: 38.976 ns/op
Iteration   3: 39.325 ns/op
Iteration   4: 39.207 ns/op
Iteration   5: 39.317 ns/op
Iteration   6: 39.312 ns/op
Iteration   7: 39.303 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  39.225 ±(99.9%) 0.294 ns/op [Average]
  (min, avg, max) = (38.976, 39.225, 39.325), stdev = 0.131
  CI (99.9%): [38.931, 39.519] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 24.87% complete, ETA 01:47:16
# Fork: 1 of 1
# Warmup Iteration   1: 94.242 ns/op
# Warmup Iteration   2: 93.005 ns/op
Iteration   1: 82.599 ns/op
Iteration   2: 82.578 ns/op
Iteration   3: 82.565 ns/op
Iteration   4: 82.479 ns/op
Iteration   5: 82.640 ns/op
Iteration   6: 82.532 ns/op
Iteration   7: 82.514 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  82.558 ±(99.9%) 0.123 ns/op [Average]
  (min, avg, max) = (82.479, 82.558, 82.640), stdev = 0.054
  CI (99.9%): [82.435, 82.681] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 25.40% complete, ETA 01:46:31
# Fork: 1 of 1
# Warmup Iteration   1: 10603.279 ns/op
# Warmup Iteration   2: 10562.953 ns/op
Iteration   1: 10400.988 ns/op
Iteration   2: 10390.117 ns/op
Iteration   3: 10383.525 ns/op
Iteration   4: 10397.526 ns/op
Iteration   5: 10398.385 ns/op
Iteration   6: 10405.450 ns/op
Iteration   7: 10402.658 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  10396.950 ±(99.9%) 17.213 ns/op [Average]
  (min, avg, max) = (10383.525, 10396.950, 10405.450), stdev = 7.643
  CI (99.9%): [10379.737, 10414.162] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 25.93% complete, ETA 01:45:45
# Fork: 1 of 1
# Warmup Iteration   1: 29.338 ns/op
# Warmup Iteration   2: 28.607 ns/op
Iteration   1: 30.190 ns/op
Iteration   2: 30.296 ns/op
Iteration   3: 30.293 ns/op
Iteration   4: 30.299 ns/op
Iteration   5: 30.302 ns/op
Iteration   6: 30.296 ns/op
Iteration   7: 30.313 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  30.284 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (30.190, 30.284, 30.313), stdev = 0.042
  CI (99.9%): [30.190, 30.379] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 26.46% complete, ETA 01:45:00
# Fork: 1 of 1
# Warmup Iteration   1: 35.532 ns/op
# Warmup Iteration   2: 36.440 ns/op
Iteration   1: 33.834 ns/op
Iteration   2: 33.854 ns/op
Iteration   3: 33.846 ns/op
Iteration   4: 33.843 ns/op
Iteration   5: 33.802 ns/op
Iteration   6: 33.828 ns/op
Iteration   7: 33.797 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  33.829 ±(99.9%) 0.050 ns/op [Average]
  (min, avg, max) = (33.797, 33.829, 33.854), stdev = 0.022
  CI (99.9%): [33.780, 33.879] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 26.98% complete, ETA 01:44:15
# Fork: 1 of 1
# Warmup Iteration   1: 36.769 ns/op
# Warmup Iteration   2: 37.451 ns/op
Iteration   1: 33.766 ns/op
Iteration   2: 33.764 ns/op
Iteration   3: 33.825 ns/op
Iteration   4: 33.814 ns/op
Iteration   5: 33.817 ns/op
Iteration   6: 33.723 ns/op
Iteration   7: 33.813 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  33.789 ±(99.9%) 0.086 ns/op [Average]
  (min, avg, max) = (33.723, 33.789, 33.825), stdev = 0.038
  CI (99.9%): [33.703, 33.875] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 27.51% complete, ETA 01:43:29
# Fork: 1 of 1
# Warmup Iteration   1: 42.015 ns/op
# Warmup Iteration   2: 41.690 ns/op
Iteration   1: 45.801 ns/op
Iteration   2: 45.733 ns/op
Iteration   3: 45.727 ns/op
Iteration   4: 45.851 ns/op
Iteration   5: 45.774 ns/op
Iteration   6: 45.758 ns/op
Iteration   7: 45.659 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  45.758 ±(99.9%) 0.137 ns/op [Average]
  (min, avg, max) = (45.659, 45.758, 45.851), stdev = 0.061
  CI (99.9%): [45.621, 45.895] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 28.04% complete, ETA 01:42:44
# Fork: 1 of 1
# Warmup Iteration   1: 55.395 ns/op
# Warmup Iteration   2: 55.312 ns/op
Iteration   1: 58.772 ns/op
Iteration   2: 58.642 ns/op
Iteration   3: 58.662 ns/op
Iteration   4: 58.624 ns/op
Iteration   5: 58.723 ns/op
Iteration   6: 58.354 ns/op
Iteration   7: 58.526 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  58.615 ±(99.9%) 0.313 ns/op [Average]
  (min, avg, max) = (58.354, 58.615, 58.772), stdev = 0.139
  CI (99.9%): [58.302, 58.927] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 28.57% complete, ETA 01:41:59
# Fork: 1 of 1
# Warmup Iteration   1: 395.354 ns/op
# Warmup Iteration   2: 381.281 ns/op
Iteration   1: 356.701 ns/op
Iteration   2: 355.196 ns/op
Iteration   3: 355.865 ns/op
Iteration   4: 355.129 ns/op
Iteration   5: 355.942 ns/op
Iteration   6: 356.128 ns/op
Iteration   7: 355.777 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  355.820 ±(99.9%) 1.218 ns/op [Average]
  (min, avg, max) = (355.129, 355.820, 356.701), stdev = 0.541
  CI (99.9%): [354.601, 357.038] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 29.10% complete, ETA 01:41:13
# Fork: 1 of 1
# Warmup Iteration   1: 48157.853 ns/op
# Warmup Iteration   2: 46829.522 ns/op
Iteration   1: 55693.422 ns/op
Iteration   2: 55529.735 ns/op
Iteration   3: 55566.189 ns/op
Iteration   4: 55515.695 ns/op
Iteration   5: 55457.427 ns/op
Iteration   6: 55552.803 ns/op
Iteration   7: 55204.733 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  55502.858 ±(99.9%) 337.394 ns/op [Average]
  (min, avg, max) = (55204.733, 55502.858, 55693.422), stdev = 149.805
  CI (99.9%): [55165.463, 55840.252] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 29.63% complete, ETA 01:40:28
# Fork: 1 of 1
# Warmup Iteration   1: 29.049 ns/op
# Warmup Iteration   2: 28.781 ns/op
Iteration   1: 32.465 ns/op
Iteration   2: 32.422 ns/op
Iteration   3: 32.489 ns/op
Iteration   4: 32.468 ns/op
Iteration   5: 32.430 ns/op
Iteration   6: 32.421 ns/op
Iteration   7: 32.406 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  32.443 ±(99.9%) 0.069 ns/op [Average]
  (min, avg, max) = (32.406, 32.443, 32.489), stdev = 0.031
  CI (99.9%): [32.374, 32.512] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 30.16% complete, ETA 01:39:43
# Fork: 1 of 1
# Warmup Iteration   1: 36.545 ns/op
# Warmup Iteration   2: 36.358 ns/op
Iteration   1: 34.172 ns/op
Iteration   2: 34.122 ns/op
Iteration   3: 34.216 ns/op
Iteration   4: 34.168 ns/op
Iteration   5: 34.165 ns/op
Iteration   6: 34.150 ns/op
Iteration   7: 34.259 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  34.179 ±(99.9%) 0.102 ns/op [Average]
  (min, avg, max) = (34.122, 34.179, 34.259), stdev = 0.045
  CI (99.9%): [34.077, 34.281] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 30.69% complete, ETA 01:38:58
# Fork: 1 of 1
# Warmup Iteration   1: 36.863 ns/op
# Warmup Iteration   2: 37.447 ns/op
Iteration   1: 33.785 ns/op
Iteration   2: 33.746 ns/op
Iteration   3: 33.798 ns/op
Iteration   4: 33.633 ns/op
Iteration   5: 33.791 ns/op
Iteration   6: 33.794 ns/op
Iteration   7: 33.752 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  33.757 ±(99.9%) 0.131 ns/op [Average]
  (min, avg, max) = (33.633, 33.757, 33.798), stdev = 0.058
  CI (99.9%): [33.626, 33.889] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 31.22% complete, ETA 01:38:12
# Fork: 1 of 1
# Warmup Iteration   1: 39.419 ns/op
# Warmup Iteration   2: 37.964 ns/op
Iteration   1: 35.759 ns/op
Iteration   2: 35.747 ns/op
Iteration   3: 35.725 ns/op
Iteration   4: 35.619 ns/op
Iteration   5: 35.639 ns/op
Iteration   6: 35.688 ns/op
Iteration   7: 35.774 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  35.707 ±(99.9%) 0.136 ns/op [Average]
  (min, avg, max) = (35.619, 35.707, 35.774), stdev = 0.060
  CI (99.9%): [35.572, 35.843] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 31.75% complete, ETA 01:37:27
# Fork: 1 of 1
# Warmup Iteration   1: 42.753 ns/op
# Warmup Iteration   2: 40.612 ns/op
Iteration   1: 39.160 ns/op
Iteration   2: 39.148 ns/op
Iteration   3: 39.308 ns/op
Iteration   4: 39.178 ns/op
Iteration   5: 39.281 ns/op
Iteration   6: 39.378 ns/op
Iteration   7: 39.228 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  39.240 ±(99.9%) 0.194 ns/op [Average]
  (min, avg, max) = (39.148, 39.240, 39.378), stdev = 0.086
  CI (99.9%): [39.046, 39.434] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 32.28% complete, ETA 01:36:42
# Fork: 1 of 1
# Warmup Iteration   1: 92.453 ns/op
# Warmup Iteration   2: 91.735 ns/op
Iteration   1: 81.842 ns/op
Iteration   2: 81.231 ns/op
Iteration   3: 81.195 ns/op
Iteration   4: 81.142 ns/op
Iteration   5: 81.493 ns/op
Iteration   6: 81.392 ns/op
Iteration   7: 81.514 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  81.401 ±(99.9%) 0.547 ns/op [Average]
  (min, avg, max) = (81.142, 81.401, 81.842), stdev = 0.243
  CI (99.9%): [80.854, 81.949] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 32.80% complete, ETA 01:35:56
# Fork: 1 of 1
# Warmup Iteration   1: 47246.840 ns/op
# Warmup Iteration   2: 49576.864 ns/op
Iteration   1: 53358.501 ns/op
Iteration   2: 53336.408 ns/op
Iteration   3: 53334.504 ns/op
Iteration   4: 53200.254 ns/op
Iteration   5: 53412.850 ns/op
Iteration   6: 52999.349 ns/op
Iteration   7: 53267.612 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopJava":
  53272.783 ±(99.9%) 311.639 ns/op [Average]
  (min, avg, max) = (52999.349, 53272.783, 53412.850), stdev = 138.370
  CI (99.9%): [52961.143, 53584.422] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 33.33% complete, ETA 01:35:11
# Fork: 1 of 1
# Warmup Iteration   1: 28.947 ns/op
# Warmup Iteration   2: 28.666 ns/op
Iteration   1: 30.196 ns/op
Iteration   2: 30.326 ns/op
Iteration   3: 30.272 ns/op
Iteration   4: 30.220 ns/op
Iteration   5: 30.229 ns/op
Iteration   6: 30.224 ns/op
Iteration   7: 30.266 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  30.248 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (30.196, 30.248, 30.326), stdev = 0.044
  CI (99.9%): [30.149, 30.346] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 33.86% complete, ETA 01:34:26
# Fork: 1 of 1
# Warmup Iteration   1: 34.943 ns/op
# Warmup Iteration   2: 33.971 ns/op
Iteration   1: 34.333 ns/op
Iteration   2: 34.343 ns/op
Iteration   3: 34.285 ns/op
Iteration   4: 34.407 ns/op
Iteration   5: 34.381 ns/op
Iteration   6: 34.383 ns/op
Iteration   7: 34.331 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  34.352 ±(99.9%) 0.093 ns/op [Average]
  (min, avg, max) = (34.285, 34.352, 34.407), stdev = 0.041
  CI (99.9%): [34.259, 34.444] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 34.39% complete, ETA 01:33:40
# Fork: 1 of 1
# Warmup Iteration   1: 35.943 ns/op
# Warmup Iteration   2: 34.792 ns/op
Iteration   1: 34.941 ns/op
Iteration   2: 34.959 ns/op
Iteration   3: 34.949 ns/op
Iteration   4: 34.973 ns/op
Iteration   5: 35.005 ns/op
Iteration   6: 34.992 ns/op
Iteration   7: 34.976 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  34.971 ±(99.9%) 0.052 ns/op [Average]
  (min, avg, max) = (34.941, 34.971, 35.005), stdev = 0.023
  CI (99.9%): [34.919, 35.023] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 34.92% complete, ETA 01:32:55
# Fork: 1 of 1
# Warmup Iteration   1: 38.053 ns/op
# Warmup Iteration   2: 37.764 ns/op
Iteration   1: 36.403 ns/op
Iteration   2: 36.256 ns/op
Iteration   3: 36.424 ns/op
Iteration   4: 36.354 ns/op
Iteration   5: 36.273 ns/op
Iteration   6: 36.352 ns/op
Iteration   7: 36.358 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  36.346 ±(99.9%) 0.139 ns/op [Average]
  (min, avg, max) = (36.256, 36.346, 36.424), stdev = 0.062
  CI (99.9%): [36.206, 36.485] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 35.45% complete, ETA 01:32:10
# Fork: 1 of 1
# Warmup Iteration   1: 42.278 ns/op
# Warmup Iteration   2: 42.884 ns/op
Iteration   1: 40.440 ns/op
Iteration   2: 40.566 ns/op
Iteration   3: 40.544 ns/op
Iteration   4: 40.537 ns/op
Iteration   5: 40.550 ns/op
Iteration   6: 40.522 ns/op
Iteration   7: 40.562 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  40.532 ±(99.9%) 0.097 ns/op [Average]
  (min, avg, max) = (40.440, 40.532, 40.566), stdev = 0.043
  CI (99.9%): [40.435, 40.629] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 35.98% complete, ETA 01:31:24
# Fork: 1 of 1
# Warmup Iteration   1: 90.188 ns/op
# Warmup Iteration   2: 89.299 ns/op
Iteration   1: 80.491 ns/op
Iteration   2: 81.439 ns/op
Iteration   3: 81.279 ns/op
Iteration   4: 81.112 ns/op
Iteration   5: 80.793 ns/op
Iteration   6: 80.996 ns/op
Iteration   7: 81.107 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  81.031 ±(99.9%) 0.706 ns/op [Average]
  (min, avg, max) = (80.491, 81.031, 81.439), stdev = 0.314
  CI (99.9%): [80.325, 81.737] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 36.51% complete, ETA 01:30:39
# Fork: 1 of 1
# Warmup Iteration   1: 10644.004 ns/op
# Warmup Iteration   2: 10585.412 ns/op
Iteration   1: 10390.591 ns/op
Iteration   2: 10385.445 ns/op
Iteration   3: 10400.454 ns/op
Iteration   4: 10367.327 ns/op
Iteration   5: 10384.984 ns/op
Iteration   6: 10393.943 ns/op
Iteration   7: 10420.007 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  10391.822 ±(99.9%) 36.344 ns/op [Average]
  (min, avg, max) = (10367.327, 10391.822, 10420.007), stdev = 16.137
  CI (99.9%): [10355.478, 10428.165] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 37.04% complete, ETA 01:29:54
# Fork: 1 of 1
# Warmup Iteration   1: 28.939 ns/op
# Warmup Iteration   2: 28.749 ns/op
Iteration   1: 30.228 ns/op
Iteration   2: 30.269 ns/op
Iteration   3: 30.312 ns/op
Iteration   4: 30.303 ns/op
Iteration   5: 30.294 ns/op
Iteration   6: 30.294 ns/op
Iteration   7: 30.319 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  30.288 ±(99.9%) 0.070 ns/op [Average]
  (min, avg, max) = (30.228, 30.288, 30.319), stdev = 0.031
  CI (99.9%): [30.218, 30.358] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 37.57% complete, ETA 01:29:09
# Fork: 1 of 1
# Warmup Iteration   1: 34.656 ns/op
# Warmup Iteration   2: 34.055 ns/op
Iteration   1: 34.363 ns/op
Iteration   2: 34.364 ns/op
Iteration   3: 34.275 ns/op
Iteration   4: 34.373 ns/op
Iteration   5: 34.333 ns/op
Iteration   6: 34.333 ns/op
Iteration   7: 34.304 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  34.335 ±(99.9%) 0.081 ns/op [Average]
  (min, avg, max) = (34.275, 34.335, 34.373), stdev = 0.036
  CI (99.9%): [34.254, 34.415] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 38.10% complete, ETA 01:28:23
# Fork: 1 of 1
# Warmup Iteration   1: 37.742 ns/op
# Warmup Iteration   2: 35.577 ns/op
Iteration   1: 37.045 ns/op
Iteration   2: 36.970 ns/op
Iteration   3: 37.020 ns/op
Iteration   4: 37.037 ns/op
Iteration   5: 37.061 ns/op
Iteration   6: 37.111 ns/op
Iteration   7: 37.047 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  37.042 ±(99.9%) 0.096 ns/op [Average]
  (min, avg, max) = (36.970, 37.042, 37.111), stdev = 0.042
  CI (99.9%): [36.946, 37.137] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 38.62% complete, ETA 01:27:38
# Fork: 1 of 1
# Warmup Iteration   1: 46.616 ns/op
# Warmup Iteration   2: 44.646 ns/op
Iteration   1: 44.122 ns/op
Iteration   2: 44.147 ns/op
Iteration   3: 44.111 ns/op
Iteration   4: 44.059 ns/op
Iteration   5: 44.173 ns/op
Iteration   6: 43.948 ns/op
Iteration   7: 44.047 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  44.087 ±(99.9%) 0.171 ns/op [Average]
  (min, avg, max) = (43.948, 44.087, 44.173), stdev = 0.076
  CI (99.9%): [43.916, 44.258] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 39.15% complete, ETA 01:26:52
# Fork: 1 of 1
# Warmup Iteration   1: 59.003 ns/op
# Warmup Iteration   2: 56.849 ns/op
Iteration   1: 56.221 ns/op
Iteration   2: 56.212 ns/op
Iteration   3: 56.282 ns/op
Iteration   4: 56.257 ns/op
Iteration   5: 56.379 ns/op
Iteration   6: 56.342 ns/op
Iteration   7: 56.380 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  56.296 ±(99.9%) 0.160 ns/op [Average]
  (min, avg, max) = (56.212, 56.296, 56.380), stdev = 0.071
  CI (99.9%): [56.136, 56.456] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 39.68% complete, ETA 01:26:07
# Fork: 1 of 1
# Warmup Iteration   1: 398.658 ns/op
# Warmup Iteration   2: 385.823 ns/op
Iteration   1: 388.760 ns/op
Iteration   2: 389.136 ns/op
Iteration   3: 386.980 ns/op
Iteration   4: 387.898 ns/op
Iteration   5: 387.007 ns/op
Iteration   6: 389.051 ns/op
Iteration   7: 387.985 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  388.117 ±(99.9%) 2.039 ns/op [Average]
  (min, avg, max) = (386.980, 388.117, 389.136), stdev = 0.905
  CI (99.9%): [386.078, 390.155] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 40.21% complete, ETA 01:25:22
# Fork: 1 of 1
# Warmup Iteration   1: 50358.170 ns/op
# Warmup Iteration   2: 46355.186 ns/op
Iteration   1: 58252.864 ns/op
Iteration   2: 58285.860 ns/op
Iteration   3: 58218.849 ns/op
Iteration   4: 58112.665 ns/op
Iteration   5: 58110.361 ns/op
Iteration   6: 58444.927 ns/op
Iteration   7: 58110.793 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  58219.474 ±(99.9%) 278.093 ns/op [Average]
  (min, avg, max) = (58110.361, 58219.474, 58444.927), stdev = 123.475
  CI (99.9%): [57941.381, 58497.567] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 40.74% complete, ETA 01:24:37
# Fork: 1 of 1
# Warmup Iteration   1: 28.988 ns/op
# Warmup Iteration   2: 28.622 ns/op
Iteration   1: 30.195 ns/op
Iteration   2: 30.160 ns/op
Iteration   3: 30.297 ns/op
Iteration   4: 30.295 ns/op
Iteration   5: 30.291 ns/op
Iteration   6: 30.221 ns/op
Iteration   7: 30.282 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  30.249 ±(99.9%) 0.126 ns/op [Average]
  (min, avg, max) = (30.160, 30.249, 30.297), stdev = 0.056
  CI (99.9%): [30.122, 30.375] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 41.27% complete, ETA 01:23:51
# Fork: 1 of 1
# Warmup Iteration   1: 34.689 ns/op
# Warmup Iteration   2: 34.763 ns/op
Iteration   1: 34.361 ns/op
Iteration   2: 34.260 ns/op
Iteration   3: 34.341 ns/op
Iteration   4: 34.333 ns/op
Iteration   5: 34.369 ns/op
Iteration   6: 34.280 ns/op
Iteration   7: 34.359 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  34.329 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (34.260, 34.329, 34.369), stdev = 0.042
  CI (99.9%): [34.233, 34.424] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 41.80% complete, ETA 01:23:06
# Fork: 1 of 1
# Warmup Iteration   1: 35.938 ns/op
# Warmup Iteration   2: 34.827 ns/op
Iteration   1: 34.909 ns/op
Iteration   2: 34.883 ns/op
Iteration   3: 34.880 ns/op
Iteration   4: 34.833 ns/op
Iteration   5: 34.891 ns/op
Iteration   6: 34.837 ns/op
Iteration   7: 34.928 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  34.880 ±(99.9%) 0.079 ns/op [Average]
  (min, avg, max) = (34.833, 34.880, 34.928), stdev = 0.035
  CI (99.9%): [34.801, 34.959] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 42.33% complete, ETA 01:22:20
# Fork: 1 of 1
# Warmup Iteration   1: 37.866 ns/op
# Warmup Iteration   2: 38.943 ns/op
Iteration   1: 36.672 ns/op
Iteration   2: 36.670 ns/op
Iteration   3: 36.535 ns/op
Iteration   4: 36.656 ns/op
Iteration   5: 36.652 ns/op
Iteration   6: 36.658 ns/op
Iteration   7: 36.591 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  36.633 ±(99.9%) 0.116 ns/op [Average]
  (min, avg, max) = (36.535, 36.633, 36.672), stdev = 0.051
  CI (99.9%): [36.517, 36.749] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 42.86% complete, ETA 01:21:35
# Fork: 1 of 1
# Warmup Iteration   1: 42.376 ns/op
# Warmup Iteration   2: 44.740 ns/op
Iteration   1: 40.531 ns/op
Iteration   2: 40.526 ns/op
Iteration   3: 40.539 ns/op
Iteration   4: 40.530 ns/op
Iteration   5: 40.544 ns/op
Iteration   6: 40.539 ns/op
Iteration   7: 40.462 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  40.525 ±(99.9%) 0.063 ns/op [Average]
  (min, avg, max) = (40.462, 40.525, 40.544), stdev = 0.028
  CI (99.9%): [40.461, 40.588] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 43.39% complete, ETA 01:20:50
# Fork: 1 of 1
# Warmup Iteration   1: 90.522 ns/op
# Warmup Iteration   2: 89.861 ns/op
Iteration   1: 81.426 ns/op
Iteration   2: 81.533 ns/op
Iteration   3: 81.670 ns/op
Iteration   4: 81.514 ns/op
Iteration   5: 81.431 ns/op
Iteration   6: 81.208 ns/op
Iteration   7: 81.538 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  81.475 ±(99.9%) 0.322 ns/op [Average]
  (min, avg, max) = (81.208, 81.475, 81.670), stdev = 0.143
  CI (99.9%): [81.153, 81.796] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 43.92% complete, ETA 01:20:04
# Fork: 1 of 1
# Warmup Iteration   1: 49531.808 ns/op
# Warmup Iteration   2: 49225.184 ns/op
Iteration   1: 56347.144 ns/op
Iteration   2: 56500.797 ns/op
Iteration   3: 56712.914 ns/op
Iteration   4: 56366.145 ns/op
Iteration   5: 56507.367 ns/op
Iteration   6: 56345.817 ns/op
Iteration   7: 56364.261 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.changeIndexInsideLoopScala":
  56449.206 ±(99.9%) 306.069 ns/op [Average]
  (min, avg, max) = (56345.817, 56449.206, 56712.914), stdev = 135.896
  CI (99.9%): [56143.138, 56755.275] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 44.44% complete, ETA 01:19:19
# Fork: 1 of 1
# Warmup Iteration   1: 43.325 ns/op
# Warmup Iteration   2: 41.314 ns/op
Iteration   1: 41.338 ns/op
Iteration   2: 41.590 ns/op
Iteration   3: 41.567 ns/op
Iteration   4: 41.559 ns/op
Iteration   5: 41.651 ns/op
Iteration   6: 41.647 ns/op
Iteration   7: 41.609 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  41.566 ±(99.9%) 0.240 ns/op [Average]
  (min, avg, max) = (41.338, 41.566, 41.651), stdev = 0.107
  CI (99.9%): [41.325, 41.806] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 44.97% complete, ETA 01:18:34
# Fork: 1 of 1
# Warmup Iteration   1: 64.701 ns/op
# Warmup Iteration   2: 65.464 ns/op
Iteration   1: 65.040 ns/op
Iteration   2: 64.940 ns/op
Iteration   3: 64.398 ns/op
Iteration   4: 64.840 ns/op
Iteration   5: 64.875 ns/op
Iteration   6: 64.925 ns/op
Iteration   7: 65.049 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  64.867 ±(99.9%) 0.497 ns/op [Average]
  (min, avg, max) = (64.398, 64.867, 65.049), stdev = 0.221
  CI (99.9%): [64.369, 65.364] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 45.50% complete, ETA 01:17:48
# Fork: 1 of 1
# Warmup Iteration   1: 64.864 ns/op
# Warmup Iteration   2: 65.202 ns/op
Iteration   1: 65.171 ns/op
Iteration   2: 64.957 ns/op
Iteration   3: 65.062 ns/op
Iteration   4: 64.888 ns/op
Iteration   5: 65.152 ns/op
Iteration   6: 64.994 ns/op
Iteration   7: 64.887 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  65.016 ±(99.9%) 0.263 ns/op [Average]
  (min, avg, max) = (64.887, 65.016, 65.171), stdev = 0.117
  CI (99.9%): [64.753, 65.279] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 46.03% complete, ETA 01:17:03
# Fork: 1 of 1
# Warmup Iteration   1: 69.614 ns/op
# Warmup Iteration   2: 68.380 ns/op
Iteration   1: 67.956 ns/op
Iteration   2: 67.985 ns/op
Iteration   3: 67.970 ns/op
Iteration   4: 68.119 ns/op
Iteration   5: 68.061 ns/op
Iteration   6: 68.143 ns/op
Iteration   7: 68.034 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  68.038 ±(99.9%) 0.165 ns/op [Average]
  (min, avg, max) = (67.956, 68.038, 68.143), stdev = 0.073
  CI (99.9%): [67.873, 68.204] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 46.56% complete, ETA 01:16:18
# Fork: 1 of 1
# Warmup Iteration   1: 72.409 ns/op
# Warmup Iteration   2: 71.538 ns/op
Iteration   1: 70.028 ns/op
Iteration   2: 70.019 ns/op
Iteration   3: 70.142 ns/op
Iteration   4: 70.163 ns/op
Iteration   5: 70.218 ns/op
Iteration   6: 70.094 ns/op
Iteration   7: 70.249 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  70.130 ±(99.9%) 0.200 ns/op [Average]
  (min, avg, max) = (70.019, 70.130, 70.249), stdev = 0.089
  CI (99.9%): [69.930, 70.330] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 47.09% complete, ETA 01:15:32
# Fork: 1 of 1
# Warmup Iteration   1: 125.265 ns/op
# Warmup Iteration   2: 125.773 ns/op
Iteration   1: 127.167 ns/op
Iteration   2: 127.075 ns/op
Iteration   3: 127.724 ns/op
Iteration   4: 127.916 ns/op
Iteration   5: 126.935 ns/op
Iteration   6: 126.991 ns/op
Iteration   7: 127.389 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  127.314 ±(99.9%) 0.854 ns/op [Average]
  (min, avg, max) = (126.935, 127.314, 127.916), stdev = 0.379
  CI (99.9%): [126.460, 128.168] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 47.62% complete, ETA 01:14:47
# Fork: 1 of 1
# Warmup Iteration   1: 7925.985 ns/op
# Warmup Iteration   2: 7867.078 ns/op
Iteration   1: 7814.322 ns/op
Iteration   2: 7820.199 ns/op
Iteration   3: 7830.416 ns/op
Iteration   4: 7809.555 ns/op
Iteration   5: 7814.870 ns/op
Iteration   6: 7825.624 ns/op
Iteration   7: 7801.407 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  7816.628 ±(99.9%) 22.027 ns/op [Average]
  (min, avg, max) = (7801.407, 7816.628, 7830.416), stdev = 9.780
  CI (99.9%): [7794.601, 7838.654] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 48.15% complete, ETA 01:14:02
# Fork: 1 of 1
# Warmup Iteration   1: 43.395 ns/op
# Warmup Iteration   2: 41.304 ns/op
Iteration   1: 41.398 ns/op
Iteration   2: 41.589 ns/op
Iteration   3: 41.586 ns/op
Iteration   4: 41.572 ns/op
Iteration   5: 41.552 ns/op
Iteration   6: 41.601 ns/op
Iteration   7: 41.605 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  41.557 ±(99.9%) 0.164 ns/op [Average]
  (min, avg, max) = (41.398, 41.557, 41.605), stdev = 0.073
  CI (99.9%): [41.394, 41.721] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 48.68% complete, ETA 01:13:16
# Fork: 1 of 1
# Warmup Iteration   1: 64.820 ns/op
# Warmup Iteration   2: 63.949 ns/op
Iteration   1: 65.443 ns/op
Iteration   2: 65.419 ns/op
Iteration   3: 65.399 ns/op
Iteration   4: 65.319 ns/op
Iteration   5: 65.339 ns/op
Iteration   6: 65.391 ns/op
Iteration   7: 65.407 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  65.388 ±(99.9%) 0.099 ns/op [Average]
  (min, avg, max) = (65.319, 65.388, 65.443), stdev = 0.044
  CI (99.9%): [65.289, 65.488] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 49.21% complete, ETA 01:12:31
# Fork: 1 of 1
# Warmup Iteration   1: 69.466 ns/op
# Warmup Iteration   2: 71.589 ns/op
Iteration   1: 67.436 ns/op
Iteration   2: 67.515 ns/op
Iteration   3: 67.561 ns/op
Iteration   4: 67.539 ns/op
Iteration   5: 67.498 ns/op
Iteration   6: 67.291 ns/op
Iteration   7: 67.490 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  67.476 ±(99.9%) 0.204 ns/op [Average]
  (min, avg, max) = (67.291, 67.476, 67.561), stdev = 0.091
  CI (99.9%): [67.271, 67.680] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 49.74% complete, ETA 01:11:46
# Fork: 1 of 1
# Warmup Iteration   1: 75.464 ns/op
# Warmup Iteration   2: 75.240 ns/op
Iteration   1: 75.034 ns/op
Iteration   2: 75.074 ns/op
Iteration   3: 74.887 ns/op
Iteration   4: 75.137 ns/op
Iteration   5: 74.766 ns/op
Iteration   6: 74.961 ns/op
Iteration   7: 75.172 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  75.004 ±(99.9%) 0.324 ns/op [Average]
  (min, avg, max) = (74.766, 75.004, 75.172), stdev = 0.144
  CI (99.9%): [74.681, 75.328] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 50.26% complete, ETA 01:11:00
# Fork: 1 of 1
# Warmup Iteration   1: 94.372 ns/op
# Warmup Iteration   2: 93.705 ns/op
Iteration   1: 94.208 ns/op
Iteration   2: 94.346 ns/op
Iteration   3: 94.112 ns/op
Iteration   4: 94.099 ns/op
Iteration   5: 94.263 ns/op
Iteration   6: 94.128 ns/op
Iteration   7: 94.324 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  94.211 ±(99.9%) 0.231 ns/op [Average]
  (min, avg, max) = (94.099, 94.211, 94.346), stdev = 0.103
  CI (99.9%): [93.980, 94.443] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 50.79% complete, ETA 01:10:15
# Fork: 1 of 1
# Warmup Iteration   1: 543.652 ns/op
# Warmup Iteration   2: 535.502 ns/op
Iteration   1: 535.078 ns/op
Iteration   2: 533.499 ns/op
Iteration   3: 535.587 ns/op
Iteration   4: 535.839 ns/op
Iteration   5: 535.189 ns/op
Iteration   6: 536.376 ns/op
Iteration   7: 536.232 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  535.400 ±(99.9%) 2.182 ns/op [Average]
  (min, avg, max) = (533.499, 535.400, 536.376), stdev = 0.969
  CI (99.9%): [533.218, 537.582] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 51.32% complete, ETA 01:09:30
# Fork: 1 of 1
# Warmup Iteration   1: 53160.749 ns/op
# Warmup Iteration   2: 52194.379 ns/op
Iteration   1: 52620.254 ns/op
Iteration   2: 52765.939 ns/op
Iteration   3: 52720.030 ns/op
Iteration   4: 52828.048 ns/op
Iteration   5: 52730.360 ns/op
Iteration   6: 52721.069 ns/op
Iteration   7: 52829.392 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  52745.013 ±(99.9%) 163.006 ns/op [Average]
  (min, avg, max) = (52620.254, 52745.013, 52829.392), stdev = 72.376
  CI (99.9%): [52582.007, 52908.019] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 51.85% complete, ETA 01:08:44
# Fork: 1 of 1
# Warmup Iteration   1: 43.713 ns/op
# Warmup Iteration   2: 42.700 ns/op
Iteration   1: 41.348 ns/op
Iteration   2: 41.517 ns/op
Iteration   3: 41.590 ns/op
Iteration   4: 41.654 ns/op
Iteration   5: 41.599 ns/op
Iteration   6: 41.534 ns/op
Iteration   7: 41.639 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  41.554 ±(99.9%) 0.234 ns/op [Average]
  (min, avg, max) = (41.348, 41.554, 41.654), stdev = 0.104
  CI (99.9%): [41.320, 41.788] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 52.38% complete, ETA 01:07:59
# Fork: 1 of 1
# Warmup Iteration   1: 64.735 ns/op
# Warmup Iteration   2: 64.309 ns/op
Iteration   1: 64.275 ns/op
Iteration   2: 64.345 ns/op
Iteration   3: 64.286 ns/op
Iteration   4: 64.255 ns/op
Iteration   5: 64.326 ns/op
Iteration   6: 64.130 ns/op
Iteration   7: 64.271 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  64.270 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (64.130, 64.270, 64.345), stdev = 0.070
  CI (99.9%): [64.113, 64.426] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 52.91% complete, ETA 01:07:14
# Fork: 1 of 1
# Warmup Iteration   1: 64.800 ns/op
# Warmup Iteration   2: 65.144 ns/op
Iteration   1: 64.822 ns/op
Iteration   2: 64.793 ns/op
Iteration   3: 64.850 ns/op
Iteration   4: 64.879 ns/op
Iteration   5: 64.709 ns/op
Iteration   6: 64.737 ns/op
Iteration   7: 64.743 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  64.790 ±(99.9%) 0.143 ns/op [Average]
  (min, avg, max) = (64.709, 64.790, 64.879), stdev = 0.063
  CI (99.9%): [64.648, 64.933] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 53.44% complete, ETA 01:06:29
# Fork: 1 of 1
# Warmup Iteration   1: 68.096 ns/op
# Warmup Iteration   2: 66.922 ns/op
Iteration   1: 67.217 ns/op
Iteration   2: 67.210 ns/op
Iteration   3: 67.568 ns/op
Iteration   4: 67.123 ns/op
Iteration   5: 67.141 ns/op
Iteration   6: 67.243 ns/op
Iteration   7: 66.975 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  67.211 ±(99.9%) 0.408 ns/op [Average]
  (min, avg, max) = (66.975, 67.211, 67.568), stdev = 0.181
  CI (99.9%): [66.803, 67.618] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 53.97% complete, ETA 01:05:43
# Fork: 1 of 1
# Warmup Iteration   1: 71.984 ns/op
# Warmup Iteration   2: 71.407 ns/op
Iteration   1: 70.296 ns/op
Iteration   2: 70.297 ns/op
Iteration   3: 70.292 ns/op
Iteration   4: 70.289 ns/op
Iteration   5: 70.257 ns/op
Iteration   6: 70.322 ns/op
Iteration   7: 70.123 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  70.268 ±(99.9%) 0.150 ns/op [Average]
  (min, avg, max) = (70.123, 70.268, 70.322), stdev = 0.067
  CI (99.9%): [70.118, 70.418] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 54.50% complete, ETA 01:04:58
# Fork: 1 of 1
# Warmup Iteration   1: 129.476 ns/op
# Warmup Iteration   2: 126.748 ns/op
Iteration   1: 125.556 ns/op
Iteration   2: 125.334 ns/op
Iteration   3: 125.393 ns/op
Iteration   4: 125.691 ns/op
Iteration   5: 126.388 ns/op
Iteration   6: 125.346 ns/op
Iteration   7: 125.440 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  125.593 ±(99.9%) 0.840 ns/op [Average]
  (min, avg, max) = (125.334, 125.593, 126.388), stdev = 0.373
  CI (99.9%): [124.752, 126.433] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.charset
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 55.03% complete, ETA 01:04:13
# Fork: 1 of 1
# Warmup Iteration   1: 72095.956 ns/op
# Warmup Iteration   2: 70603.361 ns/op
Iteration   1: 71267.994 ns/op
Iteration   2: 70531.642 ns/op
Iteration   3: 71439.124 ns/op
Iteration   4: 71697.828 ns/op
Iteration   5: 71628.045 ns/op
Iteration   6: 71253.858 ns/op
Iteration   7: 71807.766 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.charset":
  71375.180 ±(99.9%) 963.039 ns/op [Average]
  (min, avg, max) = (70531.642, 71375.180, 71807.766), stdev = 427.595
  CI (99.9%): [70412.140, 72338.219] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 55.56% complete, ETA 01:03:27
# Fork: 1 of 1
# Warmup Iteration   1: 51.039 ns/op
# Warmup Iteration   2: 48.574 ns/op
Iteration   1: 50.169 ns/op
Iteration   2: 50.236 ns/op
Iteration   3: 50.153 ns/op
Iteration   4: 50.293 ns/op
Iteration   5: 50.277 ns/op
Iteration   6: 50.099 ns/op
Iteration   7: 50.249 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  50.211 ±(99.9%) 0.161 ns/op [Average]
  (min, avg, max) = (50.099, 50.211, 50.293), stdev = 0.072
  CI (99.9%): [50.050, 50.372] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 56.08% complete, ETA 01:02:42
# Fork: 1 of 1
# Warmup Iteration   1: 38.902 ns/op
# Warmup Iteration   2: 36.836 ns/op
Iteration   1: 37.045 ns/op
Iteration   2: 37.004 ns/op
Iteration   3: 37.000 ns/op
Iteration   4: 37.047 ns/op
Iteration   5: 37.074 ns/op
Iteration   6: 37.028 ns/op
Iteration   7: 37.032 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  37.033 ±(99.9%) 0.058 ns/op [Average]
  (min, avg, max) = (37.000, 37.033, 37.074), stdev = 0.026
  CI (99.9%): [36.975, 37.091] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 56.61% complete, ETA 01:01:57
# Fork: 1 of 1
# Warmup Iteration   1: 41.203 ns/op
# Warmup Iteration   2: 38.958 ns/op
Iteration   1: 38.862 ns/op
Iteration   2: 38.859 ns/op
Iteration   3: 38.947 ns/op
Iteration   4: 38.972 ns/op
Iteration   5: 38.973 ns/op
Iteration   6: 38.961 ns/op
Iteration   7: 38.966 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  38.934 ±(99.9%) 0.115 ns/op [Average]
  (min, avg, max) = (38.859, 38.934, 38.973), stdev = 0.051
  CI (99.9%): [38.819, 39.050] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 57.14% complete, ETA 01:01:11
# Fork: 1 of 1
# Warmup Iteration   1: 48.058 ns/op
# Warmup Iteration   2: 45.247 ns/op
Iteration   1: 45.423 ns/op
Iteration   2: 45.597 ns/op
Iteration   3: 45.553 ns/op
Iteration   4: 45.576 ns/op
Iteration   5: 45.364 ns/op
Iteration   6: 45.497 ns/op
Iteration   7: 45.456 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  45.495 ±(99.9%) 0.193 ns/op [Average]
  (min, avg, max) = (45.364, 45.495, 45.597), stdev = 0.086
  CI (99.9%): [45.302, 45.688] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 57.67% complete, ETA 01:00:26
# Fork: 1 of 1
# Warmup Iteration   1: 55.447 ns/op
# Warmup Iteration   2: 52.979 ns/op
Iteration   1: 53.384 ns/op
Iteration   2: 53.501 ns/op
Iteration   3: 53.454 ns/op
Iteration   4: 53.427 ns/op
Iteration   5: 53.259 ns/op
Iteration   6: 53.508 ns/op
Iteration   7: 53.445 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  53.425 ±(99.9%) 0.191 ns/op [Average]
  (min, avg, max) = (53.259, 53.425, 53.508), stdev = 0.085
  CI (99.9%): [53.235, 53.616] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 58.20% complete, ETA 00:59:41
# Fork: 1 of 1
# Warmup Iteration   1: 240.973 ns/op
# Warmup Iteration   2: 233.444 ns/op
Iteration   1: 233.694 ns/op
Iteration   2: 233.688 ns/op
Iteration   3: 234.135 ns/op
Iteration   4: 233.474 ns/op
Iteration   5: 233.836 ns/op
Iteration   6: 233.512 ns/op
Iteration   7: 233.699 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  233.720 ±(99.9%) 0.497 ns/op [Average]
  (min, avg, max) = (233.474, 233.720, 234.135), stdev = 0.220
  CI (99.9%): [233.223, 234.216] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 58.73% complete, ETA 00:58:55
# Fork: 1 of 1
# Warmup Iteration   1: 21282.480 ns/op
# Warmup Iteration   2: 20515.654 ns/op
Iteration   1: 20495.077 ns/op
Iteration   2: 20543.968 ns/op
Iteration   3: 20542.309 ns/op
Iteration   4: 20535.075 ns/op
Iteration   5: 20522.835 ns/op
Iteration   6: 20524.402 ns/op
Iteration   7: 20514.940 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  20525.515 ±(99.9%) 38.581 ns/op [Average]
  (min, avg, max) = (20495.077, 20525.515, 20543.968), stdev = 17.130
  CI (99.9%): [20486.934, 20564.097] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 59.26% complete, ETA 00:58:10
# Fork: 1 of 1
# Warmup Iteration   1: 51.902 ns/op
# Warmup Iteration   2: 50.369 ns/op
Iteration   1: 50.928 ns/op
Iteration   2: 50.966 ns/op
Iteration   3: 50.959 ns/op
Iteration   4: 50.908 ns/op
Iteration   5: 50.991 ns/op
Iteration   6: 50.938 ns/op
Iteration   7: 50.868 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  50.937 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (50.868, 50.937, 50.991), stdev = 0.040
  CI (99.9%): [50.846, 51.028] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 59.79% complete, ETA 00:57:25
# Fork: 1 of 1
# Warmup Iteration   1: 38.419 ns/op
# Warmup Iteration   2: 36.749 ns/op
Iteration   1: 36.480 ns/op
Iteration   2: 36.397 ns/op
Iteration   3: 36.445 ns/op
Iteration   4: 36.342 ns/op
Iteration   5: 36.373 ns/op
Iteration   6: 36.364 ns/op
Iteration   7: 36.351 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  36.393 ±(99.9%) 0.116 ns/op [Average]
  (min, avg, max) = (36.342, 36.393, 36.480), stdev = 0.051
  CI (99.9%): [36.277, 36.509] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 60.32% complete, ETA 00:56:39
# Fork: 1 of 1
# Warmup Iteration   1: 41.083 ns/op
# Warmup Iteration   2: 38.757 ns/op
Iteration   1: 38.922 ns/op
Iteration   2: 38.901 ns/op
Iteration   3: 38.917 ns/op
Iteration   4: 38.928 ns/op
Iteration   5: 38.928 ns/op
Iteration   6: 38.876 ns/op
Iteration   7: 38.993 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  38.923 ±(99.9%) 0.080 ns/op [Average]
  (min, avg, max) = (38.876, 38.923, 38.993), stdev = 0.036
  CI (99.9%): [38.843, 39.004] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 60.85% complete, ETA 00:55:54
# Fork: 1 of 1
# Warmup Iteration   1: 67.804 ns/op
# Warmup Iteration   2: 64.953 ns/op
Iteration   1: 65.129 ns/op
Iteration   2: 65.189 ns/op
Iteration   3: 65.055 ns/op
Iteration   4: 65.092 ns/op
Iteration   5: 64.791 ns/op
Iteration   6: 65.079 ns/op
Iteration   7: 64.664 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  65.000 ±(99.9%) 0.438 ns/op [Average]
  (min, avg, max) = (64.664, 65.000, 65.189), stdev = 0.194
  CI (99.9%): [64.562, 65.438] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 61.38% complete, ETA 00:55:09
# Fork: 1 of 1
# Warmup Iteration   1: 76.408 ns/op
# Warmup Iteration   2: 73.065 ns/op
Iteration   1: 74.469 ns/op
Iteration   2: 74.306 ns/op
Iteration   3: 74.348 ns/op
Iteration   4: 74.424 ns/op
Iteration   5: 74.501 ns/op
Iteration   6: 74.303 ns/op
Iteration   7: 74.448 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  74.400 ±(99.9%) 0.181 ns/op [Average]
  (min, avg, max) = (74.303, 74.400, 74.501), stdev = 0.081
  CI (99.9%): [74.218, 74.581] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 61.90% complete, ETA 00:54:23
# Fork: 1 of 1
# Warmup Iteration   1: 941.765 ns/op
# Warmup Iteration   2: 911.253 ns/op
Iteration   1: 914.503 ns/op
Iteration   2: 920.455 ns/op
Iteration   3: 920.053 ns/op
Iteration   4: 919.564 ns/op
Iteration   5: 920.894 ns/op
Iteration   6: 921.262 ns/op
Iteration   7: 919.719 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  919.493 ±(99.9%) 5.143 ns/op [Average]
  (min, avg, max) = (914.503, 919.493, 921.262), stdev = 2.284
  CI (99.9%): [914.350, 924.636] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 62.43% complete, ETA 00:53:38
# Fork: 1 of 1
# Warmup Iteration   1: 108832.770 ns/op
# Warmup Iteration   2: 104567.321 ns/op
Iteration   1: 105111.398 ns/op
Iteration   2: 106342.692 ns/op
Iteration   3: 105980.762 ns/op
Iteration   4: 106247.115 ns/op
Iteration   5: 105915.550 ns/op
Iteration   6: 105709.732 ns/op
Iteration   7: 106201.742 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  105929.856 ±(99.9%) 949.382 ns/op [Average]
  (min, avg, max) = (105111.398, 105929.856, 106342.692), stdev = 421.531
  CI (99.9%): [104980.474, 106879.238] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 62.96% complete, ETA 00:52:53
# Fork: 1 of 1
# Warmup Iteration   1: 49.994 ns/op
# Warmup Iteration   2: 48.519 ns/op
Iteration   1: 49.013 ns/op
Iteration   2: 48.848 ns/op
Iteration   3: 49.079 ns/op
Iteration   4: 48.905 ns/op
Iteration   5: 48.993 ns/op
Iteration   6: 48.918 ns/op
Iteration   7: 49.032 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  48.970 ±(99.9%) 0.184 ns/op [Average]
  (min, avg, max) = (48.848, 48.970, 49.079), stdev = 0.082
  CI (99.9%): [48.786, 49.154] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 63.49% complete, ETA 00:52:07
# Fork: 1 of 1
# Warmup Iteration   1: 38.343 ns/op
# Warmup Iteration   2: 36.746 ns/op
Iteration   1: 36.398 ns/op
Iteration   2: 36.428 ns/op
Iteration   3: 36.362 ns/op
Iteration   4: 36.410 ns/op
Iteration   5: 36.369 ns/op
Iteration   6: 36.370 ns/op
Iteration   7: 36.341 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  36.383 ±(99.9%) 0.068 ns/op [Average]
  (min, avg, max) = (36.341, 36.383, 36.428), stdev = 0.030
  CI (99.9%): [36.314, 36.451] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 64.02% complete, ETA 00:51:22
# Fork: 1 of 1
# Warmup Iteration   1: 41.007 ns/op
# Warmup Iteration   2: 38.872 ns/op
Iteration   1: 39.065 ns/op
Iteration   2: 38.875 ns/op
Iteration   3: 38.901 ns/op
Iteration   4: 38.910 ns/op
Iteration   5: 38.702 ns/op
Iteration   6: 38.876 ns/op
Iteration   7: 38.833 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  38.880 ±(99.9%) 0.243 ns/op [Average]
  (min, avg, max) = (38.702, 38.880, 39.065), stdev = 0.108
  CI (99.9%): [38.637, 39.123] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 64.55% complete, ETA 00:50:37
# Fork: 1 of 1
# Warmup Iteration   1: 87.549 ns/op
# Warmup Iteration   2: 45.168 ns/op
Iteration   1: 44.790 ns/op
Iteration   2: 44.881 ns/op
Iteration   3: 44.900 ns/op
Iteration   4: 44.903 ns/op
Iteration   5: 44.676 ns/op
Iteration   6: 44.803 ns/op
Iteration   7: 44.738 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  44.813 ±(99.9%) 0.196 ns/op [Average]
  (min, avg, max) = (44.676, 44.813, 44.903), stdev = 0.087
  CI (99.9%): [44.617, 45.008] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 65.08% complete, ETA 00:49:51
# Fork: 1 of 1
# Warmup Iteration   1: 56.323 ns/op
# Warmup Iteration   2: 53.247 ns/op
Iteration   1: 54.886 ns/op
Iteration   2: 54.950 ns/op
Iteration   3: 54.994 ns/op
Iteration   4: 55.008 ns/op
Iteration   5: 54.799 ns/op
Iteration   6: 54.983 ns/op
Iteration   7: 54.875 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  54.928 ±(99.9%) 0.173 ns/op [Average]
  (min, avg, max) = (54.799, 54.928, 55.008), stdev = 0.077
  CI (99.9%): [54.755, 55.101] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 65.61% complete, ETA 00:49:06
# Fork: 1 of 1
# Warmup Iteration   1: 241.454 ns/op
# Warmup Iteration   2: 234.198 ns/op
Iteration   1: 232.942 ns/op
Iteration   2: 233.319 ns/op
Iteration   3: 232.986 ns/op
Iteration   4: 232.834 ns/op
Iteration   5: 233.358 ns/op
Iteration   6: 232.953 ns/op
Iteration   7: 233.015 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  233.058 ±(99.9%) 0.450 ns/op [Average]
  (min, avg, max) = (232.834, 233.058, 233.358), stdev = 0.200
  CI (99.9%): [232.608, 233.508] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 66.14% complete, ETA 00:48:21
# Fork: 1 of 1
# Warmup Iteration   1: 127170.063 ns/op
# Warmup Iteration   2: 123168.105 ns/op
Iteration   1: 124395.889 ns/op
Iteration   2: 124893.125 ns/op
Iteration   3: 125027.694 ns/op
Iteration   4: 124929.335 ns/op
Iteration   5: 124994.585 ns/op
Iteration   6: 123961.141 ns/op
Iteration   7: 123863.781 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsIndices":
  124580.793 ±(99.9%) 1134.429 ns/op [Average]
  (min, avg, max) = (123863.781, 124580.793, 125027.694), stdev = 503.693
  CI (99.9%): [123446.364, 125715.221] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 66.67% complete, ETA 00:47:35
# Fork: 1 of 1
# Warmup Iteration   1: 37.532 ns/op
# Warmup Iteration   2: 36.431 ns/op
Iteration   1: 36.588 ns/op
Iteration   2: 36.577 ns/op
Iteration   3: 36.678 ns/op
Iteration   4: 36.572 ns/op
Iteration   5: 36.594 ns/op
Iteration   6: 36.439 ns/op
Iteration   7: 36.658 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  36.587 ±(99.9%) 0.173 ns/op [Average]
  (min, avg, max) = (36.439, 36.587, 36.678), stdev = 0.077
  CI (99.9%): [36.413, 36.760] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 67.20% complete, ETA 00:46:50
# Fork: 1 of 1
# Warmup Iteration   1: 38.259 ns/op
# Warmup Iteration   2: 36.701 ns/op
Iteration   1: 36.363 ns/op
Iteration   2: 36.473 ns/op
Iteration   3: 36.307 ns/op
Iteration   4: 36.445 ns/op
Iteration   5: 36.426 ns/op
Iteration   6: 36.454 ns/op
Iteration   7: 36.392 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  36.409 ±(99.9%) 0.132 ns/op [Average]
  (min, avg, max) = (36.307, 36.409, 36.473), stdev = 0.059
  CI (99.9%): [36.277, 36.540] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 67.72% complete, ETA 00:46:05
# Fork: 1 of 1
# Warmup Iteration   1: 40.661 ns/op
# Warmup Iteration   2: 38.929 ns/op
Iteration   1: 38.840 ns/op
Iteration   2: 38.954 ns/op
Iteration   3: 38.974 ns/op
Iteration   4: 38.847 ns/op
Iteration   5: 38.799 ns/op
Iteration   6: 38.959 ns/op
Iteration   7: 38.865 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  38.891 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (38.799, 38.891, 38.974), stdev = 0.070
  CI (99.9%): [38.734, 39.048] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 68.25% complete, ETA 00:45:19
# Fork: 1 of 1
# Warmup Iteration   1: 47.424 ns/op
# Warmup Iteration   2: 45.406 ns/op
Iteration   1: 44.934 ns/op
Iteration   2: 45.066 ns/op
Iteration   3: 45.003 ns/op
Iteration   4: 44.731 ns/op
Iteration   5: 45.070 ns/op
Iteration   6: 44.997 ns/op
Iteration   7: 45.045 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  44.978 ±(99.9%) 0.268 ns/op [Average]
  (min, avg, max) = (44.731, 44.978, 45.070), stdev = 0.119
  CI (99.9%): [44.710, 45.246] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 68.78% complete, ETA 00:44:34
# Fork: 1 of 1
# Warmup Iteration   1: 56.747 ns/op
# Warmup Iteration   2: 53.535 ns/op
Iteration   1: 53.883 ns/op
Iteration   2: 54.012 ns/op
Iteration   3: 53.871 ns/op
Iteration   4: 53.846 ns/op
Iteration   5: 53.772 ns/op
Iteration   6: 53.923 ns/op
Iteration   7: 53.814 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  53.874 ±(99.9%) 0.175 ns/op [Average]
  (min, avg, max) = (53.772, 53.874, 54.012), stdev = 0.078
  CI (99.9%): [53.699, 54.049] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 69.31% complete, ETA 00:43:49
# Fork: 1 of 1
# Warmup Iteration   1: 242.281 ns/op
# Warmup Iteration   2: 234.664 ns/op
Iteration   1: 235.708 ns/op
Iteration   2: 235.138 ns/op
Iteration   3: 235.850 ns/op
Iteration   4: 235.384 ns/op
Iteration   5: 235.418 ns/op
Iteration   6: 235.722 ns/op
Iteration   7: 235.423 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  235.520 ±(99.9%) 0.559 ns/op [Average]
  (min, avg, max) = (235.138, 235.520, 235.850), stdev = 0.248
  CI (99.9%): [234.962, 236.079] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 69.84% complete, ETA 00:43:03
# Fork: 1 of 1
# Warmup Iteration   1: 21311.725 ns/op
# Warmup Iteration   2: 20577.244 ns/op
Iteration   1: 20487.950 ns/op
Iteration   2: 20511.198 ns/op
Iteration   3: 20477.381 ns/op
Iteration   4: 20540.371 ns/op
Iteration   5: 20496.303 ns/op
Iteration   6: 20537.784 ns/op
Iteration   7: 20541.980 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  20513.281 ±(99.9%) 60.859 ns/op [Average]
  (min, avg, max) = (20477.381, 20513.281, 20541.980), stdev = 27.022
  CI (99.9%): [20452.423, 20574.140] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 70.37% complete, ETA 00:42:18
# Fork: 1 of 1
# Warmup Iteration   1: 37.101 ns/op
# Warmup Iteration   2: 36.455 ns/op
Iteration   1: 34.751 ns/op
Iteration   2: 34.793 ns/op
Iteration   3: 34.592 ns/op
Iteration   4: 34.618 ns/op
Iteration   5: 34.805 ns/op
Iteration   6: 34.844 ns/op
Iteration   7: 34.802 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  34.743 ±(99.9%) 0.223 ns/op [Average]
  (min, avg, max) = (34.592, 34.743, 34.844), stdev = 0.099
  CI (99.9%): [34.521, 34.966] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 70.90% complete, ETA 00:41:33
# Fork: 1 of 1
# Warmup Iteration   1: 38.399 ns/op
# Warmup Iteration   2: 36.783 ns/op
Iteration   1: 36.372 ns/op
Iteration   2: 36.490 ns/op
Iteration   3: 36.404 ns/op
Iteration   4: 36.550 ns/op
Iteration   5: 36.353 ns/op
Iteration   6: 36.371 ns/op
Iteration   7: 36.330 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  36.410 ±(99.9%) 0.181 ns/op [Average]
  (min, avg, max) = (36.330, 36.410, 36.550), stdev = 0.080
  CI (99.9%): [36.229, 36.590] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 71.43% complete, ETA 00:40:47
# Fork: 1 of 1
# Warmup Iteration   1: 42.507 ns/op
# Warmup Iteration   2: 38.953 ns/op
Iteration   1: 38.884 ns/op
Iteration   2: 38.904 ns/op
Iteration   3: 39.005 ns/op
Iteration   4: 38.876 ns/op
Iteration   5: 38.942 ns/op
Iteration   6: 38.967 ns/op
Iteration   7: 38.869 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  38.921 ±(99.9%) 0.116 ns/op [Average]
  (min, avg, max) = (38.869, 38.921, 39.005), stdev = 0.052
  CI (99.9%): [38.805, 39.037] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 71.96% complete, ETA 00:40:02
# Fork: 1 of 1
# Warmup Iteration   1: 67.804 ns/op
# Warmup Iteration   2: 64.923 ns/op
Iteration   1: 64.948 ns/op
Iteration   2: 65.033 ns/op
Iteration   3: 64.947 ns/op
Iteration   4: 64.807 ns/op
Iteration   5: 65.025 ns/op
Iteration   6: 64.979 ns/op
Iteration   7: 65.021 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  64.966 ±(99.9%) 0.177 ns/op [Average]
  (min, avg, max) = (64.807, 64.966, 65.033), stdev = 0.079
  CI (99.9%): [64.789, 65.143] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 72.49% complete, ETA 00:39:17
# Fork: 1 of 1
# Warmup Iteration   1: 101.470 ns/op
# Warmup Iteration   2: 97.557 ns/op
Iteration   1: 97.833 ns/op
Iteration   2: 98.091 ns/op
Iteration   3: 97.861 ns/op
Iteration   4: 97.788 ns/op
Iteration   5: 97.686 ns/op
Iteration   6: 97.843 ns/op
Iteration   7: 97.824 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  97.847 ±(99.9%) 0.276 ns/op [Average]
  (min, avg, max) = (97.686, 97.847, 98.091), stdev = 0.122
  CI (99.9%): [97.571, 98.123] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 73.02% complete, ETA 00:38:31
# Fork: 1 of 1
# Warmup Iteration   1: 938.511 ns/op
# Warmup Iteration   2: 908.338 ns/op
Iteration   1: 917.824 ns/op
Iteration   2: 921.214 ns/op
Iteration   3: 919.082 ns/op
Iteration   4: 918.671 ns/op
Iteration   5: 911.298 ns/op
Iteration   6: 917.494 ns/op
Iteration   7: 921.495 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  918.154 ±(99.9%) 7.649 ns/op [Average]
  (min, avg, max) = (911.298, 918.154, 921.495), stdev = 3.396
  CI (99.9%): [910.505, 925.803] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 73.54% complete, ETA 00:37:46
# Fork: 1 of 1
# Warmup Iteration   1: 106840.116 ns/op
# Warmup Iteration   2: 102843.939 ns/op
Iteration   1: 103706.068 ns/op
Iteration   2: 104493.667 ns/op
Iteration   3: 104408.336 ns/op
Iteration   4: 104773.881 ns/op
Iteration   5: 104596.652 ns/op
Iteration   6: 104349.423 ns/op
Iteration   7: 104417.147 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  104392.168 ±(99.9%) 753.326 ns/op [Average]
  (min, avg, max) = (103706.068, 104392.168, 104773.881), stdev = 334.481
  CI (99.9%): [103638.842, 105145.493] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 74.07% complete, ETA 00:37:01
# Fork: 1 of 1
# Warmup Iteration   1: 37.602 ns/op
# Warmup Iteration   2: 36.451 ns/op
Iteration   1: 34.658 ns/op
Iteration   2: 34.718 ns/op
Iteration   3: 34.689 ns/op
Iteration   4: 34.744 ns/op
Iteration   5: 34.713 ns/op
Iteration   6: 34.725 ns/op
Iteration   7: 34.753 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  34.714 ±(99.9%) 0.073 ns/op [Average]
  (min, avg, max) = (34.658, 34.714, 34.753), stdev = 0.032
  CI (99.9%): [34.641, 34.787] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 74.60% complete, ETA 00:36:15
# Fork: 1 of 1
# Warmup Iteration   1: 38.349 ns/op
# Warmup Iteration   2: 36.701 ns/op
Iteration   1: 36.416 ns/op
Iteration   2: 36.245 ns/op
Iteration   3: 36.379 ns/op
Iteration   4: 36.388 ns/op
Iteration   5: 36.366 ns/op
Iteration   6: 36.423 ns/op
Iteration   7: 36.338 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  36.365 ±(99.9%) 0.136 ns/op [Average]
  (min, avg, max) = (36.245, 36.365, 36.423), stdev = 0.060
  CI (99.9%): [36.229, 36.501] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 75.13% complete, ETA 00:35:30
# Fork: 1 of 1
# Warmup Iteration   1: 42.594 ns/op
# Warmup Iteration   2: 38.688 ns/op
Iteration   1: 38.876 ns/op
Iteration   2: 38.977 ns/op
Iteration   3: 38.972 ns/op
Iteration   4: 38.950 ns/op
Iteration   5: 38.969 ns/op
Iteration   6: 38.991 ns/op
Iteration   7: 38.875 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  38.944 ±(99.9%) 0.109 ns/op [Average]
  (min, avg, max) = (38.875, 38.944, 38.991), stdev = 0.049
  CI (99.9%): [38.835, 39.054] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 75.66% complete, ETA 00:34:45
# Fork: 1 of 1
# Warmup Iteration   1: 48.205 ns/op
# Warmup Iteration   2: 45.655 ns/op
Iteration   1: 45.614 ns/op
Iteration   2: 45.524 ns/op
Iteration   3: 45.440 ns/op
Iteration   4: 45.592 ns/op
Iteration   5: 45.497 ns/op
Iteration   6: 45.627 ns/op
Iteration   7: 45.596 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  45.556 ±(99.9%) 0.157 ns/op [Average]
  (min, avg, max) = (45.440, 45.556, 45.627), stdev = 0.070
  CI (99.9%): [45.398, 45.713] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 76.19% complete, ETA 00:33:59
# Fork: 1 of 1
# Warmup Iteration   1: 56.191 ns/op
# Warmup Iteration   2: 53.455 ns/op
Iteration   1: 53.891 ns/op
Iteration   2: 53.954 ns/op
Iteration   3: 53.974 ns/op
Iteration   4: 53.831 ns/op
Iteration   5: 53.738 ns/op
Iteration   6: 53.844 ns/op
Iteration   7: 53.764 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  53.856 ±(99.9%) 0.201 ns/op [Average]
  (min, avg, max) = (53.738, 53.856, 53.974), stdev = 0.089
  CI (99.9%): [53.655, 54.058] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 76.72% complete, ETA 00:33:14
# Fork: 1 of 1
# Warmup Iteration   1: 240.712 ns/op
# Warmup Iteration   2: 234.482 ns/op
Iteration   1: 234.186 ns/op
Iteration   2: 235.071 ns/op
Iteration   3: 234.770 ns/op
Iteration   4: 234.235 ns/op
Iteration   5: 233.997 ns/op
Iteration   6: 234.214 ns/op
Iteration   7: 234.395 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  234.410 ±(99.9%) 0.851 ns/op [Average]
  (min, avg, max) = (233.997, 234.410, 235.071), stdev = 0.378
  CI (99.9%): [233.558, 235.261] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 77.25% complete, ETA 00:32:29
# Fork: 1 of 1
# Warmup Iteration   1: 127392.093 ns/op
# Warmup Iteration   2: 122999.339 ns/op
Iteration   1: 124066.210 ns/op
Iteration   2: 124786.093 ns/op
Iteration   3: 124676.829 ns/op
Iteration   4: 124976.994 ns/op
Iteration   5: 124827.679 ns/op
Iteration   6: 124581.001 ns/op
Iteration   7: 125034.610 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.localMethodsScala":
  124707.060 ±(99.9%) 728.900 ns/op [Average]
  (min, avg, max) = (124066.210, 124707.060, 125034.610), stdev = 323.636
  CI (99.9%): [123978.160, 125435.960] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 77.78% complete, ETA 00:31:43
# Fork: 1 of 1
# Warmup Iteration   1: 28.879 ns/op
# Warmup Iteration   2: 28.810 ns/op
Iteration   1: 30.309 ns/op
Iteration   2: 30.268 ns/op
Iteration   3: 30.250 ns/op
Iteration   4: 30.287 ns/op
Iteration   5: 30.304 ns/op
Iteration   6: 30.339 ns/op
Iteration   7: 30.347 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  30.301 ±(99.9%) 0.079 ns/op [Average]
  (min, avg, max) = (30.250, 30.301, 30.347), stdev = 0.035
  CI (99.9%): [30.221, 30.380] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 78.31% complete, ETA 00:30:58
# Fork: 1 of 1
# Warmup Iteration   1: 35.543 ns/op
# Warmup Iteration   2: 36.427 ns/op
Iteration   1: 33.933 ns/op
Iteration   2: 33.896 ns/op
Iteration   3: 33.887 ns/op
Iteration   4: 33.872 ns/op
Iteration   5: 33.856 ns/op
Iteration   6: 33.808 ns/op
Iteration   7: 33.923 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  33.882 ±(99.9%) 0.095 ns/op [Average]
  (min, avg, max) = (33.808, 33.882, 33.933), stdev = 0.042
  CI (99.9%): [33.787, 33.977] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 78.84% complete, ETA 00:30:13
# Fork: 1 of 1
# Warmup Iteration   1: 36.610 ns/op
# Warmup Iteration   2: 37.421 ns/op
Iteration   1: 34.145 ns/op
Iteration   2: 34.055 ns/op
Iteration   3: 34.139 ns/op
Iteration   4: 34.075 ns/op
Iteration   5: 34.061 ns/op
Iteration   6: 34.152 ns/op
Iteration   7: 34.114 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  34.106 ±(99.9%) 0.094 ns/op [Average]
  (min, avg, max) = (34.055, 34.106, 34.152), stdev = 0.042
  CI (99.9%): [34.012, 34.200] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 79.37% complete, ETA 00:29:27
# Fork: 1 of 1
# Warmup Iteration   1: 39.394 ns/op
# Warmup Iteration   2: 37.934 ns/op
Iteration   1: 36.298 ns/op
Iteration   2: 36.245 ns/op
Iteration   3: 36.293 ns/op
Iteration   4: 36.273 ns/op
Iteration   5: 36.307 ns/op
Iteration   6: 36.269 ns/op
Iteration   7: 36.216 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  36.272 ±(99.9%) 0.073 ns/op [Average]
  (min, avg, max) = (36.216, 36.272, 36.307), stdev = 0.032
  CI (99.9%): [36.199, 36.344] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 79.89% complete, ETA 00:28:42
# Fork: 1 of 1
# Warmup Iteration   1: 45.258 ns/op
# Warmup Iteration   2: 40.558 ns/op
Iteration   1: 39.223 ns/op
Iteration   2: 39.191 ns/op
Iteration   3: 39.162 ns/op
Iteration   4: 39.032 ns/op
Iteration   5: 39.258 ns/op
Iteration   6: 39.255 ns/op
Iteration   7: 39.211 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  39.190 ±(99.9%) 0.175 ns/op [Average]
  (min, avg, max) = (39.032, 39.190, 39.258), stdev = 0.078
  CI (99.9%): [39.015, 39.365] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 80.42% complete, ETA 00:27:57
# Fork: 1 of 1
# Warmup Iteration   1: 93.015 ns/op
# Warmup Iteration   2: 91.916 ns/op
Iteration   1: 87.204 ns/op
Iteration   2: 87.299 ns/op
Iteration   3: 86.667 ns/op
Iteration   4: 87.030 ns/op
Iteration   5: 87.144 ns/op
Iteration   6: 86.706 ns/op
Iteration   7: 87.025 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  87.011 ±(99.9%) 0.544 ns/op [Average]
  (min, avg, max) = (86.667, 87.011, 87.299), stdev = 0.242
  CI (99.9%): [86.467, 87.555] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 80.95% complete, ETA 00:27:11
# Fork: 1 of 1
# Warmup Iteration   1: 10574.911 ns/op
# Warmup Iteration   2: 10494.497 ns/op
Iteration   1: 10379.281 ns/op
Iteration   2: 10375.210 ns/op
Iteration   3: 10379.879 ns/op
Iteration   4: 10370.337 ns/op
Iteration   5: 10374.177 ns/op
Iteration   6: 10382.168 ns/op
Iteration   7: 10390.589 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  10378.806 ±(99.9%) 14.757 ns/op [Average]
  (min, avg, max) = (10370.337, 10378.806, 10390.589), stdev = 6.552
  CI (99.9%): [10364.048, 10393.563] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 81.48% complete, ETA 00:26:26
# Fork: 1 of 1
# Warmup Iteration   1: 29.058 ns/op
# Warmup Iteration   2: 28.630 ns/op
Iteration   1: 32.335 ns/op
Iteration   2: 32.510 ns/op
Iteration   3: 32.539 ns/op
Iteration   4: 32.472 ns/op
Iteration   5: 32.507 ns/op
Iteration   6: 32.462 ns/op
Iteration   7: 32.381 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  32.458 ±(99.9%) 0.167 ns/op [Average]
  (min, avg, max) = (32.335, 32.458, 32.539), stdev = 0.074
  CI (99.9%): [32.291, 32.625] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 82.01% complete, ETA 00:25:41
# Fork: 1 of 1
# Warmup Iteration   1: 35.585 ns/op
# Warmup Iteration   2: 36.427 ns/op
Iteration   1: 33.908 ns/op
Iteration   2: 33.873 ns/op
Iteration   3: 33.892 ns/op
Iteration   4: 33.896 ns/op
Iteration   5: 33.866 ns/op
Iteration   6: 33.831 ns/op
Iteration   7: 33.873 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  33.877 ±(99.9%) 0.057 ns/op [Average]
  (min, avg, max) = (33.831, 33.877, 33.908), stdev = 0.025
  CI (99.9%): [33.821, 33.934] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 82.54% complete, ETA 00:24:55
# Fork: 1 of 1
# Warmup Iteration   1: 36.562 ns/op
# Warmup Iteration   2: 40.773 ns/op
Iteration   1: 35.993 ns/op
Iteration   2: 35.951 ns/op
Iteration   3: 36.174 ns/op
Iteration   4: 35.963 ns/op
Iteration   5: 35.939 ns/op
Iteration   6: 35.998 ns/op
Iteration   7: 35.737 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  35.965 ±(99.9%) 0.288 ns/op [Average]
  (min, avg, max) = (35.737, 35.965, 36.174), stdev = 0.128
  CI (99.9%): [35.677, 36.253] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 83.07% complete, ETA 00:24:10
# Fork: 1 of 1
# Warmup Iteration   1: 44.281 ns/op
# Warmup Iteration   2: 42.538 ns/op
Iteration   1: 43.381 ns/op
Iteration   2: 43.403 ns/op
Iteration   3: 43.329 ns/op
Iteration   4: 43.393 ns/op
Iteration   5: 43.378 ns/op
Iteration   6: 43.403 ns/op
Iteration   7: 43.378 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  43.381 ±(99.9%) 0.057 ns/op [Average]
  (min, avg, max) = (43.329, 43.381, 43.403), stdev = 0.025
  CI (99.9%): [43.323, 43.438] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 83.60% complete, ETA 00:23:25
# Fork: 1 of 1
# Warmup Iteration   1: 61.948 ns/op
# Warmup Iteration   2: 60.641 ns/op
Iteration   1: 61.538 ns/op
Iteration   2: 61.502 ns/op
Iteration   3: 61.650 ns/op
Iteration   4: 61.481 ns/op
Iteration   5: 61.361 ns/op
Iteration   6: 61.449 ns/op
Iteration   7: 61.415 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  61.485 ±(99.9%) 0.210 ns/op [Average]
  (min, avg, max) = (61.361, 61.485, 61.650), stdev = 0.093
  CI (99.9%): [61.275, 61.695] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 84.13% complete, ETA 00:22:39
# Fork: 1 of 1
# Warmup Iteration   1: 548.331 ns/op
# Warmup Iteration   2: 487.802 ns/op
Iteration   1: 540.819 ns/op
Iteration   2: 542.665 ns/op
Iteration   3: 544.895 ns/op
Iteration   4: 543.051 ns/op
Iteration   5: 543.131 ns/op
Iteration   6: 543.883 ns/op
Iteration   7: 539.628 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  542.582 ±(99.9%) 4.050 ns/op [Average]
  (min, avg, max) = (539.628, 542.582, 544.895), stdev = 1.798
  CI (99.9%): [538.531, 546.632] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 84.66% complete, ETA 00:21:54
# Fork: 1 of 1
# Warmup Iteration   1: 72435.752 ns/op
# Warmup Iteration   2: 76380.153 ns/op
Iteration   1: 67306.071 ns/op
Iteration   2: 67342.612 ns/op
Iteration   3: 67519.229 ns/op
Iteration   4: 67351.204 ns/op
Iteration   5: 67404.912 ns/op
Iteration   6: 67429.651 ns/op
Iteration   7: 67498.313 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  67407.427 ±(99.9%) 181.336 ns/op [Average]
  (min, avg, max) = (67306.071, 67407.427, 67519.229), stdev = 80.514
  CI (99.9%): [67226.092, 67588.763] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 85.19% complete, ETA 00:21:09
# Fork: 1 of 1
# Warmup Iteration   1: 29.051 ns/op
# Warmup Iteration   2: 28.755 ns/op
Iteration   1: 30.172 ns/op
Iteration   2: 30.311 ns/op
Iteration   3: 30.282 ns/op
Iteration   4: 30.247 ns/op
Iteration   5: 30.319 ns/op
Iteration   6: 30.274 ns/op
Iteration   7: 30.313 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  30.274 ±(99.9%) 0.117 ns/op [Average]
  (min, avg, max) = (30.172, 30.274, 30.319), stdev = 0.052
  CI (99.9%): [30.157, 30.391] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 85.71% complete, ETA 00:20:23
# Fork: 1 of 1
# Warmup Iteration   1: 35.540 ns/op
# Warmup Iteration   2: 36.457 ns/op
Iteration   1: 33.879 ns/op
Iteration   2: 33.875 ns/op
Iteration   3: 33.935 ns/op
Iteration   4: 33.895 ns/op
Iteration   5: 33.877 ns/op
Iteration   6: 33.759 ns/op
Iteration   7: 33.881 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  33.871 ±(99.9%) 0.122 ns/op [Average]
  (min, avg, max) = (33.759, 33.871, 33.935), stdev = 0.054
  CI (99.9%): [33.750, 33.993] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 86.24% complete, ETA 00:19:38
# Fork: 1 of 1
# Warmup Iteration   1: 36.604 ns/op
# Warmup Iteration   2: 37.689 ns/op
Iteration   1: 33.758 ns/op
Iteration   2: 33.796 ns/op
Iteration   3: 33.769 ns/op
Iteration   4: 33.794 ns/op
Iteration   5: 33.784 ns/op
Iteration   6: 33.885 ns/op
Iteration   7: 33.764 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  33.793 ±(99.9%) 0.098 ns/op [Average]
  (min, avg, max) = (33.758, 33.793, 33.885), stdev = 0.043
  CI (99.9%): [33.695, 33.890] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 86.77% complete, ETA 00:18:53
# Fork: 1 of 1
# Warmup Iteration   1: 39.411 ns/op
# Warmup Iteration   2: 38.016 ns/op
Iteration   1: 36.262 ns/op
Iteration   2: 36.257 ns/op
Iteration   3: 36.286 ns/op
Iteration   4: 36.295 ns/op
Iteration   5: 36.262 ns/op
Iteration   6: 36.279 ns/op
Iteration   7: 36.344 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  36.284 ±(99.9%) 0.068 ns/op [Average]
  (min, avg, max) = (36.257, 36.284, 36.344), stdev = 0.030
  CI (99.9%): [36.215, 36.352] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 87.30% complete, ETA 00:18:07
# Fork: 1 of 1
# Warmup Iteration   1: 42.748 ns/op
# Warmup Iteration   2: 40.625 ns/op
Iteration   1: 39.207 ns/op
Iteration   2: 39.242 ns/op
Iteration   3: 39.201 ns/op
Iteration   4: 39.228 ns/op
Iteration   5: 39.162 ns/op
Iteration   6: 39.329 ns/op
Iteration   7: 39.300 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  39.238 ±(99.9%) 0.131 ns/op [Average]
  (min, avg, max) = (39.162, 39.238, 39.329), stdev = 0.058
  CI (99.9%): [39.107, 39.369] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 87.83% complete, ETA 00:17:22
# Fork: 1 of 1
# Warmup Iteration   1: 93.023 ns/op
# Warmup Iteration   2: 91.813 ns/op
Iteration   1: 81.801 ns/op
Iteration   2: 81.558 ns/op
Iteration   3: 81.588 ns/op
Iteration   4: 81.253 ns/op
Iteration   5: 81.847 ns/op
Iteration   6: 81.379 ns/op
Iteration   7: 81.768 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  81.599 ±(99.9%) 0.504 ns/op [Average]
  (min, avg, max) = (81.253, 81.599, 81.847), stdev = 0.224
  CI (99.9%): [81.095, 82.103] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 88.36% complete, ETA 00:16:37
# Fork: 1 of 1
# Warmup Iteration   1: 80510.130 ns/op
# Warmup Iteration   2: 78350.527 ns/op
Iteration   1: 78272.658 ns/op
Iteration   2: 78880.986 ns/op
Iteration   3: 78748.031 ns/op
Iteration   4: 78890.638 ns/op
Iteration   5: 78561.444 ns/op
Iteration   6: 79117.492 ns/op
Iteration   7: 78573.916 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopJava":
  78720.738 ±(99.9%) 623.890 ns/op [Average]
  (min, avg, max) = (78272.658, 78720.738, 79117.492), stdev = 277.011
  CI (99.9%): [78096.848, 79344.628] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 0)

# Run progress: 88.89% complete, ETA 00:15:51
# Fork: 1 of 1
# Warmup Iteration   1: 38.170 ns/op
# Warmup Iteration   2: 36.554 ns/op
Iteration   1: 34.692 ns/op
Iteration   2: 34.735 ns/op
Iteration   3: 34.664 ns/op
Iteration   4: 34.711 ns/op
Iteration   5: 34.731 ns/op
Iteration   6: 34.673 ns/op
Iteration   7: 34.670 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  34.697 ±(99.9%) 0.067 ns/op [Average]
  (min, avg, max) = (34.664, 34.697, 34.735), stdev = 0.030
  CI (99.9%): [34.630, 34.763] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 1)

# Run progress: 89.42% complete, ETA 00:15:06
# Fork: 1 of 1
# Warmup Iteration   1: 42.950 ns/op
# Warmup Iteration   2: 41.581 ns/op
Iteration   1: 39.815 ns/op
Iteration   2: 39.717 ns/op
Iteration   3: 39.647 ns/op
Iteration   4: 39.812 ns/op
Iteration   5: 39.800 ns/op
Iteration   6: 39.791 ns/op
Iteration   7: 39.736 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  39.760 ±(99.9%) 0.141 ns/op [Average]
  (min, avg, max) = (39.647, 39.760, 39.815), stdev = 0.063
  CI (99.9%): [39.619, 39.901] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 2)

# Run progress: 89.95% complete, ETA 00:14:21
# Fork: 1 of 1
# Warmup Iteration   1: 43.387 ns/op
# Warmup Iteration   2: 43.092 ns/op
Iteration   1: 41.425 ns/op
Iteration   2: 41.442 ns/op
Iteration   3: 41.274 ns/op
Iteration   4: 41.237 ns/op
Iteration   5: 41.481 ns/op
Iteration   6: 41.435 ns/op
Iteration   7: 41.468 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  41.395 ±(99.9%) 0.219 ns/op [Average]
  (min, avg, max) = (41.237, 41.395, 41.481), stdev = 0.097
  CI (99.9%): [41.176, 41.614] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 5)

# Run progress: 90.48% complete, ETA 00:13:35
# Fork: 1 of 1
# Warmup Iteration   1: 50.445 ns/op
# Warmup Iteration   2: 38.671 ns/op
Iteration   1: 39.209 ns/op
Iteration   2: 39.196 ns/op
Iteration   3: 39.064 ns/op
Iteration   4: 39.132 ns/op
Iteration   5: 39.174 ns/op
Iteration   6: 39.212 ns/op
Iteration   7: 39.085 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  39.153 ±(99.9%) 0.136 ns/op [Average]
  (min, avg, max) = (39.064, 39.153, 39.212), stdev = 0.060
  CI (99.9%): [39.017, 39.289] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 10)

# Run progress: 91.01% complete, ETA 00:12:50
# Fork: 1 of 1
# Warmup Iteration   1: 60.363 ns/op
# Warmup Iteration   2: 58.513 ns/op
Iteration   1: 57.800 ns/op
Iteration   2: 57.851 ns/op
Iteration   3: 57.908 ns/op
Iteration   4: 57.816 ns/op
Iteration   5: 57.943 ns/op
Iteration   6: 57.712 ns/op
Iteration   7: 57.820 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  57.836 ±(99.9%) 0.170 ns/op [Average]
  (min, avg, max) = (57.712, 57.836, 57.943), stdev = 0.076
  CI (99.9%): [57.666, 58.006] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 100)

# Run progress: 91.53% complete, ETA 00:12:05
# Fork: 1 of 1
# Warmup Iteration   1: 250.135 ns/op
# Warmup Iteration   2: 241.610 ns/op
Iteration   1: 240.004 ns/op
Iteration   2: 240.031 ns/op
Iteration   3: 240.040 ns/op
Iteration   4: 240.191 ns/op
Iteration   5: 239.900 ns/op
Iteration   6: 239.261 ns/op
Iteration   7: 239.744 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  239.882 ±(99.9%) 0.690 ns/op [Average]
  (min, avg, max) = (239.261, 239.882, 240.191), stdev = 0.306
  CI (99.9%): [239.192, 240.572] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = ASCII, lineLength = 10000)

# Run progress: 92.06% complete, ETA 00:11:19
# Fork: 1 of 1
# Warmup Iteration   1: 17352.388 ns/op
# Warmup Iteration   2: 19163.050 ns/op
Iteration   1: 22481.658 ns/op
Iteration   2: 22641.723 ns/op
Iteration   3: 22677.049 ns/op
Iteration   4: 22647.678 ns/op
Iteration   5: 22647.567 ns/op
Iteration   6: 22638.629 ns/op
Iteration   7: 22641.433 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  22625.105 ±(99.9%) 145.424 ns/op [Average]
  (min, avg, max) = (22481.658, 22625.105, 22677.049), stdev = 64.569
  CI (99.9%): [22479.681, 22770.529] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 0)

# Run progress: 92.59% complete, ETA 00:10:34
# Fork: 1 of 1
# Warmup Iteration   1: 38.097 ns/op
# Warmup Iteration   2: 36.369 ns/op
Iteration   1: 34.635 ns/op
Iteration   2: 34.644 ns/op
Iteration   3: 34.628 ns/op
Iteration   4: 34.496 ns/op
Iteration   5: 34.527 ns/op
Iteration   6: 34.604 ns/op
Iteration   7: 34.657 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  34.599 ±(99.9%) 0.141 ns/op [Average]
  (min, avg, max) = (34.496, 34.599, 34.657), stdev = 0.062
  CI (99.9%): [34.458, 34.739] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 1)

# Run progress: 93.12% complete, ETA 00:09:49
# Fork: 1 of 1
# Warmup Iteration   1: 42.738 ns/op
# Warmup Iteration   2: 41.571 ns/op
Iteration   1: 39.256 ns/op
Iteration   2: 39.264 ns/op
Iteration   3: 39.365 ns/op
Iteration   4: 39.222 ns/op
Iteration   5: 39.326 ns/op
Iteration   6: 39.334 ns/op
Iteration   7: 39.425 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  39.313 ±(99.9%) 0.159 ns/op [Average]
  (min, avg, max) = (39.222, 39.313, 39.425), stdev = 0.071
  CI (99.9%): [39.154, 39.472] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 2)

# Run progress: 93.65% complete, ETA 00:09:03
# Fork: 1 of 1
# Warmup Iteration   1: 43.639 ns/op
# Warmup Iteration   2: 42.997 ns/op
Iteration   1: 42.606 ns/op
Iteration   2: 42.541 ns/op
Iteration   3: 42.580 ns/op
Iteration   4: 42.664 ns/op
Iteration   5: 42.545 ns/op
Iteration   6: 42.598 ns/op
Iteration   7: 42.583 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  42.588 ±(99.9%) 0.093 ns/op [Average]
  (min, avg, max) = (42.541, 42.588, 42.664), stdev = 0.041
  CI (99.9%): [42.495, 42.681] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 5)

# Run progress: 94.18% complete, ETA 00:08:18
# Fork: 1 of 1
# Warmup Iteration   1: 47.846 ns/op
# Warmup Iteration   2: 45.852 ns/op
Iteration   1: 45.779 ns/op
Iteration   2: 45.688 ns/op
Iteration   3: 45.709 ns/op
Iteration   4: 45.659 ns/op
Iteration   5: 45.687 ns/op
Iteration   6: 45.712 ns/op
Iteration   7: 45.749 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  45.712 ±(99.9%) 0.091 ns/op [Average]
  (min, avg, max) = (45.659, 45.712, 45.779), stdev = 0.040
  CI (99.9%): [45.621, 45.803] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10)

# Run progress: 94.71% complete, ETA 00:07:33
# Fork: 1 of 1
# Warmup Iteration   1: 72.340 ns/op
# Warmup Iteration   2: 69.626 ns/op
Iteration   1: 69.994 ns/op
Iteration   2: 69.828 ns/op
Iteration   3: 70.039 ns/op
Iteration   4: 69.996 ns/op
Iteration   5: 69.751 ns/op
Iteration   6: 69.810 ns/op
Iteration   7: 69.530 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  69.850 ±(99.9%) 0.403 ns/op [Average]
  (min, avg, max) = (69.530, 69.850, 70.039), stdev = 0.179
  CI (99.9%): [69.447, 70.253] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 100)

# Run progress: 95.24% complete, ETA 00:06:47
# Fork: 1 of 1
# Warmup Iteration   1: 654.916 ns/op
# Warmup Iteration   2: 634.032 ns/op
Iteration   1: 641.277 ns/op
Iteration   2: 638.355 ns/op
Iteration   3: 637.328 ns/op
Iteration   4: 638.097 ns/op
Iteration   5: 638.840 ns/op
Iteration   6: 635.288 ns/op
Iteration   7: 639.899 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  638.441 ±(99.9%) 4.277 ns/op [Average]
  (min, avg, max) = (635.288, 638.441, 641.277), stdev = 1.899
  CI (99.9%): [634.164, 642.717] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = SINGLE_CHAR_ONLY, lineLength = 10000)

# Run progress: 95.77% complete, ETA 00:06:02
# Fork: 1 of 1
# Warmup Iteration   1: 92279.202 ns/op
# Warmup Iteration   2: 92899.221 ns/op
Iteration   1: 93910.682 ns/op
Iteration   2: 94861.051 ns/op
Iteration   3: 95367.839 ns/op
Iteration   4: 94680.688 ns/op
Iteration   5: 95199.904 ns/op
Iteration   6: 95020.864 ns/op
Iteration   7: 94786.785 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  94832.545 ±(99.9%) 1061.477 ns/op [Average]
  (min, avg, max) = (93910.682, 94832.545, 95367.839), stdev = 471.302
  CI (99.9%): [93771.068, 95894.022] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 0)

# Run progress: 96.30% complete, ETA 00:05:17
# Fork: 1 of 1
# Warmup Iteration   1: 38.217 ns/op
# Warmup Iteration   2: 36.296 ns/op
Iteration   1: 34.833 ns/op
Iteration   2: 34.785 ns/op
Iteration   3: 34.783 ns/op
Iteration   4: 34.702 ns/op
Iteration   5: 34.797 ns/op
Iteration   6: 34.753 ns/op
Iteration   7: 34.752 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  34.772 ±(99.9%) 0.093 ns/op [Average]
  (min, avg, max) = (34.702, 34.772, 34.833), stdev = 0.041
  CI (99.9%): [34.679, 34.865] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 1)

# Run progress: 96.83% complete, ETA 00:04:31
# Fork: 1 of 1
# Warmup Iteration   1: 42.875 ns/op
# Warmup Iteration   2: 41.552 ns/op
Iteration   1: 39.892 ns/op
Iteration   2: 39.805 ns/op
Iteration   3: 39.754 ns/op
Iteration   4: 39.718 ns/op
Iteration   5: 39.785 ns/op
Iteration   6: 39.682 ns/op
Iteration   7: 39.775 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  39.773 ±(99.9%) 0.151 ns/op [Average]
  (min, avg, max) = (39.682, 39.773, 39.892), stdev = 0.067
  CI (99.9%): [39.622, 39.924] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 2)

# Run progress: 97.35% complete, ETA 00:03:46
# Fork: 1 of 1
# Warmup Iteration   1: 43.448 ns/op
# Warmup Iteration   2: 43.235 ns/op
Iteration   1: 41.927 ns/op
Iteration   2: 42.038 ns/op
Iteration   3: 42.148 ns/op
Iteration   4: 42.149 ns/op
Iteration   5: 42.144 ns/op
Iteration   6: 42.115 ns/op
Iteration   7: 41.972 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  42.071 ±(99.9%) 0.208 ns/op [Average]
  (min, avg, max) = (41.927, 42.071, 42.149), stdev = 0.092
  CI (99.9%): [41.863, 42.278] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 5)

# Run progress: 97.88% complete, ETA 00:03:01
# Fork: 1 of 1
# Warmup Iteration   1: 50.959 ns/op
# Warmup Iteration   2: 38.705 ns/op
Iteration   1: 39.200 ns/op
Iteration   2: 39.280 ns/op
Iteration   3: 39.201 ns/op
Iteration   4: 39.202 ns/op
Iteration   5: 39.196 ns/op
Iteration   6: 39.232 ns/op
Iteration   7: 39.148 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  39.208 ±(99.9%) 0.090 ns/op [Average]
  (min, avg, max) = (39.148, 39.208, 39.280), stdev = 0.040
  CI (99.9%): [39.118, 39.299] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 10)

# Run progress: 98.41% complete, ETA 00:02:15
# Fork: 1 of 1
# Warmup Iteration   1: 60.644 ns/op
# Warmup Iteration   2: 58.425 ns/op
Iteration   1: 56.759 ns/op
Iteration   2: 56.653 ns/op
Iteration   3: 56.878 ns/op
Iteration   4: 56.799 ns/op
Iteration   5: 56.749 ns/op
Iteration   6: 56.733 ns/op
Iteration   7: 56.836 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  56.772 ±(99.9%) 0.166 ns/op [Average]
  (min, avg, max) = (56.653, 56.772, 56.878), stdev = 0.074
  CI (99.9%): [56.606, 56.938] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 100)

# Run progress: 98.94% complete, ETA 00:01:30
# Fork: 1 of 1
# Warmup Iteration   1: 249.186 ns/op
# Warmup Iteration   2: 241.451 ns/op
Iteration   1: 240.364 ns/op
Iteration   2: 239.066 ns/op
Iteration   3: 239.742 ns/op
Iteration   4: 239.751 ns/op
Iteration   5: 240.047 ns/op
Iteration   6: 239.622 ns/op
Iteration   7: 239.927 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  239.788 ±(99.9%) 0.906 ns/op [Average]
  (min, avg, max) = (239.066, 239.788, 240.364), stdev = 0.402
  CI (99.9%): [238.883, 240.694] (assumes normal distribution)


# JMH 1.17.4 (released 341 days ago, please consider updating!)
# VM version: JDK 1.8.0_151, VM 25.151-b12
# VM invoker: /usr/lib/jvm/java-8-oracle/jre/bin/java
# VM options: -Xmx2G
# Warmup: 2 iterations, 5 s each
# Measurement: 7 iterations, 5 s each
# Timeout: 10 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala
# Parameters: (inputType = MIXED, lineLength = 10000)

# Run progress: 99.47% complete, ETA 00:00:45
# Fork: 1 of 1
# Warmup Iteration   1: 92636.402 ns/op
# Warmup Iteration   2: 88309.819 ns/op
Iteration   1: 88216.069 ns/op
Iteration   2: 89259.329 ns/op
Iteration   3: 88983.996 ns/op
Iteration   4: 89192.460 ns/op
Iteration   5: 89411.578 ns/op
Iteration   6: 89328.144 ns/op
Iteration   7: 89453.002 ns/op


Result "com.komanov.readlines.jmh.ReadUtf8Benchmark.sequentialLoopScala":
  89120.654 ±(99.9%) 964.115 ns/op [Average]
  (min, avg, max) = (88216.069, 89120.654, 89453.002), stdev = 428.073
  CI (99.9%): [88156.539, 90084.770] (assumes normal distribution)


# Run complete. Total time: 02:22:47

Benchmark                                                   (inputType)  (lineLength)  Mode  Cnt       Score      Error  Units
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII             0  avgt    7      30.435 ±    0.437  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII             1  avgt    7      33.823 ±    0.146  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII             2  avgt    7      33.783 ±    0.179  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII             5  avgt    7      36.329 ±    0.072  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII            10  avgt    7      39.271 ±    0.333  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII           100  avgt    7      80.828 ±    0.463  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              ASCII         10000  avgt    7   10367.833 ±   32.076  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY             0  avgt    7      30.256 ±    0.153  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY             1  avgt    7      33.830 ±    0.055  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY             2  avgt    7      35.962 ±    0.096  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY             5  avgt    7      43.417 ±    0.121  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY            10  avgt    7      60.423 ±    0.152  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY           100  avgt    7     376.490 ±    1.324  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava   SINGLE_CHAR_ONLY         10000  avgt    7   53037.869 ±  162.284  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED             0  avgt    7      30.268 ±    0.109  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED             1  avgt    7      36.139 ±    0.375  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED             2  avgt    7      33.801 ±    0.083  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED             5  avgt    7      35.780 ±    0.076  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED            10  avgt    7      39.197 ±    0.122  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED           100  avgt    7      81.364 ±    0.649  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicJava              MIXED         10000  avgt    7   56148.818 ±  313.658  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII             0  avgt    7      29.356 ±    0.051  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII             1  avgt    7      34.462 ±    0.027  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII             2  avgt    7      34.142 ±    0.161  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII             5  avgt    7      36.251 ±    0.062  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII            10  avgt    7      39.266 ±    0.134  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII           100  avgt    7      95.916 ±    0.877  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             ASCII         10000  avgt    7   11084.601 ±   15.642  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY             0  avgt    7      29.375 ±    0.060  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY             1  avgt    7      32.896 ±    0.085  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY             2  avgt    7      34.323 ±    0.079  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY             5  avgt    7      43.705 ±    0.183  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY            10  avgt    7      58.029 ±    0.168  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY           100  avgt    7     398.891 ±    1.444  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala  SINGLE_CHAR_ONLY         10000  avgt    7   47031.090 ±  240.148  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED             0  avgt    7      29.387 ±    0.091  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED             1  avgt    7      34.304 ±    0.247  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED             2  avgt    7      34.187 ±    0.054  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED             5  avgt    7      36.248 ±    0.090  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED            10  avgt    7      39.289 ±    0.168  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED           100  avgt    7      96.315 ±    0.623  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopByteMagicScala             MIXED         10000  avgt    7   45414.809 ±  305.732  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII             0  avgt    7      30.282 ±    0.146  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII             1  avgt    7      33.814 ±    0.208  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII             2  avgt    7      33.814 ±    0.076  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII             5  avgt    7      36.266 ±    0.086  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII            10  avgt    7      39.225 ±    0.294  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII           100  avgt    7      82.558 ±    0.123  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       ASCII         10000  avgt    7   10396.950 ±   17.213  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY             0  avgt    7      30.284 ±    0.094  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY             1  avgt    7      33.829 ±    0.050  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY             2  avgt    7      33.789 ±    0.086  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY             5  avgt    7      45.758 ±    0.137  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY            10  avgt    7      58.615 ±    0.313  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY           100  avgt    7     355.820 ±    1.218  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava            SINGLE_CHAR_ONLY         10000  avgt    7   55502.858 ±  337.394  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED             0  avgt    7      32.443 ±    0.069  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED             1  avgt    7      34.179 ±    0.102  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED             2  avgt    7      33.757 ±    0.131  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED             5  avgt    7      35.707 ±    0.136  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED            10  avgt    7      39.240 ±    0.194  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED           100  avgt    7      81.401 ±    0.547  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopJava                       MIXED         10000  avgt    7   53272.783 ±  311.639  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII             0  avgt    7      30.248 ±    0.098  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII             1  avgt    7      34.352 ±    0.093  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII             2  avgt    7      34.971 ±    0.052  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII             5  avgt    7      36.346 ±    0.139  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII            10  avgt    7      40.532 ±    0.097  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII           100  avgt    7      81.031 ±    0.706  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      ASCII         10000  avgt    7   10391.822 ±   36.344  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY             0  avgt    7      30.288 ±    0.070  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY             1  avgt    7      34.335 ±    0.081  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY             2  avgt    7      37.042 ±    0.096  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY             5  avgt    7      44.087 ±    0.171  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY            10  avgt    7      56.296 ±    0.160  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY           100  avgt    7     388.117 ±    2.039  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala           SINGLE_CHAR_ONLY         10000  avgt    7   58219.474 ±  278.093  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED             0  avgt    7      30.249 ±    0.126  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED             1  avgt    7      34.329 ±    0.095  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED             2  avgt    7      34.880 ±    0.079  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED             5  avgt    7      36.633 ±    0.116  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED            10  avgt    7      40.525 ±    0.063  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED           100  avgt    7      81.475 ±    0.322  ns/op
ReadUtf8Benchmark.changeIndexInsideLoopScala                      MIXED         10000  avgt    7   56449.206 ±  306.069  ns/op
ReadUtf8Benchmark.charset                                         ASCII             0  avgt    7      41.566 ±    0.240  ns/op
ReadUtf8Benchmark.charset                                         ASCII             1  avgt    7      64.867 ±    0.497  ns/op
ReadUtf8Benchmark.charset                                         ASCII             2  avgt    7      65.016 ±    0.263  ns/op
ReadUtf8Benchmark.charset                                         ASCII             5  avgt    7      68.038 ±    0.165  ns/op
ReadUtf8Benchmark.charset                                         ASCII            10  avgt    7      70.130 ±    0.200  ns/op
ReadUtf8Benchmark.charset                                         ASCII           100  avgt    7     127.314 ±    0.854  ns/op
ReadUtf8Benchmark.charset                                         ASCII         10000  avgt    7    7816.628 ±   22.027  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY             0  avgt    7      41.557 ±    0.164  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY             1  avgt    7      65.388 ±    0.099  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY             2  avgt    7      67.476 ±    0.204  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY             5  avgt    7      75.004 ±    0.324  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY            10  avgt    7      94.211 ±    0.231  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY           100  avgt    7     535.400 ±    2.182  ns/op
ReadUtf8Benchmark.charset                              SINGLE_CHAR_ONLY         10000  avgt    7   52745.013 ±  163.006  ns/op
ReadUtf8Benchmark.charset                                         MIXED             0  avgt    7      41.554 ±    0.234  ns/op
ReadUtf8Benchmark.charset                                         MIXED             1  avgt    7      64.270 ±    0.157  ns/op
ReadUtf8Benchmark.charset                                         MIXED             2  avgt    7      64.790 ±    0.143  ns/op
ReadUtf8Benchmark.charset                                         MIXED             5  avgt    7      67.211 ±    0.408  ns/op
ReadUtf8Benchmark.charset                                         MIXED            10  avgt    7      70.268 ±    0.150  ns/op
ReadUtf8Benchmark.charset                                         MIXED           100  avgt    7     125.593 ±    0.840  ns/op
ReadUtf8Benchmark.charset                                         MIXED         10000  avgt    7   71375.180 ±  963.039  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII             0  avgt    7      50.211 ±    0.161  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII             1  avgt    7      37.033 ±    0.058  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII             2  avgt    7      38.934 ±    0.115  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII             5  avgt    7      45.495 ±    0.193  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII            10  avgt    7      53.425 ±    0.191  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII           100  avgt    7     233.720 ±    0.497  ns/op
ReadUtf8Benchmark.localMethodsIndices                             ASCII         10000  avgt    7   20525.515 ±   38.581  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY             0  avgt    7      50.937 ±    0.091  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY             1  avgt    7      36.393 ±    0.116  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY             2  avgt    7      38.923 ±    0.080  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY             5  avgt    7      65.000 ±    0.438  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY            10  avgt    7      74.400 ±    0.181  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY           100  avgt    7     919.493 ±    5.143  ns/op
ReadUtf8Benchmark.localMethodsIndices                  SINGLE_CHAR_ONLY         10000  avgt    7  105929.856 ±  949.382  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED             0  avgt    7      48.970 ±    0.184  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED             1  avgt    7      36.383 ±    0.068  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED             2  avgt    7      38.880 ±    0.243  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED             5  avgt    7      44.813 ±    0.196  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED            10  avgt    7      54.928 ±    0.173  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED           100  avgt    7     233.058 ±    0.450  ns/op
ReadUtf8Benchmark.localMethodsIndices                             MIXED         10000  avgt    7  124580.793 ± 1134.429  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII             0  avgt    7      36.587 ±    0.173  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII             1  avgt    7      36.409 ±    0.132  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII             2  avgt    7      38.891 ±    0.157  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII             5  avgt    7      44.978 ±    0.268  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII            10  avgt    7      53.874 ±    0.175  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII           100  avgt    7     235.520 ±    0.559  ns/op
ReadUtf8Benchmark.localMethodsScala                               ASCII         10000  avgt    7   20513.281 ±   60.859  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY             0  avgt    7      34.743 ±    0.223  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY             1  avgt    7      36.410 ±    0.181  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY             2  avgt    7      38.921 ±    0.116  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY             5  avgt    7      64.966 ±    0.177  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY            10  avgt    7      97.847 ±    0.276  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY           100  avgt    7     918.154 ±    7.649  ns/op
ReadUtf8Benchmark.localMethodsScala                    SINGLE_CHAR_ONLY         10000  avgt    7  104392.168 ±  753.326  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED             0  avgt    7      34.714 ±    0.073  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED             1  avgt    7      36.365 ±    0.136  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED             2  avgt    7      38.944 ±    0.109  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED             5  avgt    7      45.556 ±    0.157  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED            10  avgt    7      53.856 ±    0.201  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED           100  avgt    7     234.410 ±    0.851  ns/op
ReadUtf8Benchmark.localMethodsScala                               MIXED         10000  avgt    7  124707.060 ±  728.900  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII             0  avgt    7      30.301 ±    0.079  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII             1  avgt    7      33.882 ±    0.095  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII             2  avgt    7      34.106 ±    0.094  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII             5  avgt    7      36.272 ±    0.073  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII            10  avgt    7      39.190 ±    0.175  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII           100  avgt    7      87.011 ±    0.544  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              ASCII         10000  avgt    7   10378.806 ±   14.757  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY             0  avgt    7      32.458 ±    0.167  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY             1  avgt    7      33.877 ±    0.057  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY             2  avgt    7      35.965 ±    0.288  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY             5  avgt    7      43.381 ±    0.057  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY            10  avgt    7      61.485 ±    0.210  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY           100  avgt    7     542.582 ±    4.050  ns/op
ReadUtf8Benchmark.sequentialLoopJava                   SINGLE_CHAR_ONLY         10000  avgt    7   67407.427 ±  181.336  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED             0  avgt    7      30.274 ±    0.117  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED             1  avgt    7      33.871 ±    0.122  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED             2  avgt    7      33.793 ±    0.098  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED             5  avgt    7      36.284 ±    0.068  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED            10  avgt    7      39.238 ±    0.131  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED           100  avgt    7      81.599 ±    0.504  ns/op
ReadUtf8Benchmark.sequentialLoopJava                              MIXED         10000  avgt    7   78720.738 ±  623.890  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII             0  avgt    7      34.697 ±    0.067  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII             1  avgt    7      39.760 ±    0.141  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII             2  avgt    7      41.395 ±    0.219  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII             5  avgt    7      39.153 ±    0.136  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII            10  avgt    7      57.836 ±    0.170  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII           100  avgt    7     239.882 ±    0.690  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             ASCII         10000  avgt    7   22625.105 ±  145.424  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY             0  avgt    7      34.599 ±    0.141  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY             1  avgt    7      39.313 ±    0.159  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY             2  avgt    7      42.588 ±    0.093  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY             5  avgt    7      45.712 ±    0.091  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY            10  avgt    7      69.850 ±    0.403  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY           100  avgt    7     638.441 ±    4.277  ns/op
ReadUtf8Benchmark.sequentialLoopScala                  SINGLE_CHAR_ONLY         10000  avgt    7   94832.545 ± 1061.477  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED             0  avgt    7      34.772 ±    0.093  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED             1  avgt    7      39.773 ±    0.151  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED             2  avgt    7      42.071 ±    0.208  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED             5  avgt    7      39.208 ±    0.090  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED            10  avgt    7      56.772 ±    0.166  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED           100  avgt    7     239.788 ±    0.906  ns/op
ReadUtf8Benchmark.sequentialLoopScala                             MIXED         10000  avgt    7   89120.654 ±  964.115  ns/op

Benchmark result is saved to jmh.json
